
AsmParsedLine:
    line=  
    prefixAddr= {} 
    label=  
    opname=  
    operand= None 
    comment=  
    auto-comment= 

AsmParsedLine:
    line= nobounce:   ca Vy + Vx - (q * (p  + 53)) + -42 + 017 + Vg*Vx*+0.888 - (-0.76589 --Vz) + -57 + +0.9999 + 0o177 + 0.12345 + x * (y + z) ; for no bounce, fetch the current velocity 
    prefixAddr= {} 
    label= nobounce 
    opname= ca 
    comment=  for no bounce, fetch the current velocity 
    auto-comment= 
   BinaryPlus
      BinaryPlus
         BinaryPlus
            BinaryPlus
               BinaryPlus
                  BinaryMinus
                     BinaryPlus
                        BinaryPlus
                           BinaryPlus
                              BinaryMinus
                                 BinaryPlus
                                    Variable Vy
                                    Variable Vx
                                 BinaryMult
                                    Variable q
                                    BinaryPlus
                                       Variable p
                                       LiteralDigits 53
                              UnaryMinus
                                 LiteralDigits 42
                           LiteralDigits 017
                        BinaryMult
                           BinaryMult
                              Variable Vg
                              Variable Vx
                           BinaryDot
                              UnaryPlus
                                 LiteralDigits 0
                              LiteralDigits 888
                     BinaryMinus
                        BinaryDot
                           UnaryMinus
                              LiteralDigits 0
                           LiteralDigits 76589
                        UnaryMinus
                           Variable Vz
                  UnaryMinus
                     LiteralDigits 57
               BinaryDot
                  UnaryPlus
                     LiteralDigits 0
                  LiteralDigits 9999
            UnaryZeroOh
               LiteralDigits 177
         BinaryDot
            LiteralDigits 0
            LiteralDigits 12345
      BinaryMult
         Variable x
         BinaryPlus
            Variable y
            Variable z
Eval:
Error: Line 2: Char pos 178: Only integers are allowed in arithmetic operations:
nobounce:   ca Vy + Vx - (q * (p  + 53)) + -42 + 017 + Vg*Vx*+0.888 - (-0.76589 --Vz) + -57 + +0.9999 + 0o177 + 0.12345 + x * (y + z) ; for no bounce, fetch the current velocity
                                                                                                                                                                                 ^

    AsmExprValueType.Undefined 


AsmParsedLine:
    line= @017.39:157 rc 0            ; output a point to the display 
    prefixAddr= {0: '017', 1: '39', 2: '157'} 
    label=  
    opname= rc 
    comment=  output a point to the display 
    auto-comment= 
   LiteralDigits 0
Eval:
    AsmExprValueType.Integer 0


AsmParsedLine:
    line= ;           ca x+y + * z          ; uncomment this line to generate a syntax error 
    prefixAddr= {} 
    label=  
    opname=  
    operand= None 
    comment=            ca x+y + * z          ; uncomment this line to generate a syntax error 
    auto-comment= 

AsmParsedLine:
    line=            .print "LAS WW1 %o %o and %ad", Xi, Yi 
    prefixAddr= {} 
    label=  
    opname= print 
    comment=  
    auto-comment= 
   BinaryComma
      LiteralString LAS WW1 %o %o and %ad
      BinaryComma
         Variable Xi
         Variable Yi
Eval:
    AsmExprValueType.List ['AsmExprValueType.String LAS WW1 %o %o and %ad', 'AsmExprValueType.Integer 42', 'AsmExprValueType.Integer 42']


AsmParsedLine:
    line=            .exec wwlog ("LAS WW2") 
    prefixAddr= {} 
    label=  
    opname= exec 
    comment=  
    auto-comment= 
   LiteralString wwlog ("LAS WW2")
Eval:
    AsmExprValueType.String wwlog ("LAS WW2")


AsmParsedLine:
    line= ;          .word a+!0o4242        ; uncomment this line to generate a syntax error (illegal char) 
    prefixAddr= {} 
    label=  
    opname=  
    operand= None 
    comment=           .word a+!0o4242        ; uncomment this line to generate a syntax error (illegal char) 
    auto-comment= 

AsmParsedLine:
    line=            .word 0o4200 
    prefixAddr= {} 
    label=  
    opname= word 
    comment=  
    auto-comment= 
   UnaryZeroOh
      LiteralDigits 4200
Eval:
    AsmExprValueType.Integer 2176

