
; Converting L&Z transcription to WW format
; Sun Oct20, 2024, 2:48 pm
; Runestone iPad editor

; [guy] There are a number of places in the source where instructions or addresses 
; are probably replaced as part of expression evaluation.  The source does seem to 
; show what the two options are, but doesn't show what should go there at the time 
; the program loads.
; I've assumed that the first choice goes there by default, and that something might
; change it later
; Sometimes the comments shows the address of the instruction that will carry out
; the modification.
; Here's an example
     ; was       (ca 2ax/cs 2ax)          ; r22 ; n is in MRA in
     ;           ca ax + 2                ; r22 ; n is in MRA in




; [Transcribed by Larry Stabile, 10/13/24]
; [Transcription notes and questions in square brackets]
; [Meaning of double-bars?]
; [Did not transcribe "light-colored" text]
;
; Instrumentation Laboratory
; Massachusetts Institute of Technology
; Cambridge, Mass.
; Prepared by: J.H Laning Jr.
; Date: 3/53
; (Tape T-2134-m8 plus correction tape P-2134-10)
;
; Sheet 1/20
; [Section] a1 (Read-in)
;
start:
a1:     si 128  ; r0    ;from: START
        ao a1 + 36      ; r1 ;from: 16r
        rd a1 + 2       ; r2 ;from: NORMAL RE ENTRY
        ad a3 + 193     ; r3 ;      (l.c. or u.c.)  ; from: (1a4)
        td a1 + 8       ; r4
        td a4 + 40      ; r5
        td a1 + 14      ; r6
        td a1 + 22      ; r7
        ca 0            ; r8 ;from: (4r)
        su a3 + 4       ; r9 ;- Is symbol
        cp a1 + 12      ; r10 ;- a number?
; was        sp (38a4/58a4)  ; r11
        sp a4 + 38      ; r11
; was        ca (33a3/31a3)  ; r12    31a3 is the normal mode   ;from: 10r
        ca a3 + 33      ; r12    31a3 is the normal mode   ;from: 10r
        td a1 + 11      ; r13
        ca 0            ; r14 ;from: (6r)
        su 0            ; r15    (Is symbol a period?)  
        cp a1 + 1       ; r16
        su a3 + 54      ; r17 ;- l.c. no.[?] or
        cp a4 + 45      ; r18 ;- exponent?
        ca a3 + 43      ; r19 ;- set to interpret
        td a4 + 60      ; r20 ; digit as an
        cs a4 + 62      ; r21 ;- exponent
        ad 0            ; r22 ;from: 48a4 (7r)
        cp a1 + 39          ; r23 ;if digit is zero 
        sf a3 + 51      ; r24 ;-
        ts a1 + 43      ; r25 ; Form [?] (24,6) version
        ca a4 + 11      ; r26 ; of digit as an
        su a3 + 51      ; r27 ; integer in (43r, 44r
; was        sl 9            ; r28 ;
        slr 9            ; r28 ;
        ts a1 + 44      ; r29 ;-
        ca a1 + 25      ; r30
        td a1 + 34      ; r31

; Sheet 2/20
; a1
        sp 852          ; r32    (programmed arithmetic  
        mr 497          ; r33    (i.e., by 10)  
        ad 0            ; r34  ; from (31r, 41r) 
        sp 852          ; r35
        ao a1 + 37      ; r36  ; (reset to a1 + 38)    ;from: (1r)
        sp a1 + 2       ; r37
        .word 0         ; r38   (counter for digits before decimal pt  
        .word 0         ; r39   (  "      "    "    after     "    ")  
        ca a6 + 10      ; r40 ;from: 23r
        td a1 + 34      ; r41
        sp a1 + 32      ; r42
        .word 0         ; r43 ;- Temporary storage for
        .word 0         ; r44 ;- integer during read-in

;
; Sheet 3/20
; a2 (PRINT)
;
a2:     sp a16          ; r0 ;from: (p) 44a4
        sp a10 + 28     ; r1
        ca a16 + 11     ; r2 ;from: 44a4;- store "sp to print
        sp a8 + 9       ; r3 ;                        control"
        rd a2 + 4       ; r4 ;-| read in
        ao a2 + 13      ; r5 ; | "RINT"
        cp a2 + 4       ; r6 ;-|
        sp a1 + 2       ; r7
        ca a2 + 15      ; r8 ;from: 17a3 (period after print instr.);- reset counter
        ts a3 + 13      ; r9 ;-
        sp a16          ; r10
        sp a10 + 23     ; r11
; was        (sp a3 + 8/p 0)  ; r12
        sp a3 + 8       ; r12
        .word -3        ; r13 ; (counter); from (5r, 9r) 
        ao a3 + 25      ; r14 ;from: 5310 ;- part of SP routine
        sp a6 + 19      ; r15 ;
        ad a10 + 56     ; r16 ;
        sp a6 + 8       ; r17 ;-
        sp 852          ; r18 ;from: 46a10;- START
        sp 32           ; r19 ;-
;
; Sheet 4/20
; a3 (Lower case symbols)
;                                                           Symbol
a3:     .word a3        ; r0
        .word a4        ; r1
        sp a4 + 50      ; r2   'e'
        .word 9         ; r3   '8'
        sp 0            ; r4
        .word 0         ; r5; [This is the flexo code for ';', but the original doesn't have a dispatch address at all]
        sp a4 + 50      ; r6   'a'
        .word 4         ; r7   '3'
        sp a1 + 2       ; r8   space
        sp a10 + 10     ; r9   '='
        sp a4 + 50      ; r10  's'
        .word 5         ; r11  '4'
        sp a4 + 50      ; r12  'i'
        sp a4 + 52      ; r13  '+'
        sp a4 + 50      ; r14  'u'
        .word 3         ; r15  '2'
        .word 0         ; r16  ; unused flexo code "shift ribbon"
; was   xx  (p 0/sp a2 + 8)        . [period]  ; r17 ;from: (8a16)
        .word 0         ; r17  '.' [period] ;from: (8a16)
        sp a4 + 50      ; r18  'd'
        .word 6         ; r19  '5'
        .word a4 + 50   ; r20  'r'
        .word 2         ; r21  '1'
        sp a4 + 50      ; r22  'j'
        .word 8         ; r23  '7'
        sp a4 + 50      ; r24  'n'
        sp a10 + 14     ; r25  ','
        sp a4 + 50      ; r26  'f'
        .word 7         ; r27  '6'
        sp a4 + 50      ; r28  'c'
        sp a4 + 55      ; r29  '-'
        sp a4 + 50      ; r30  'k'
        .word a4 + 58   ; r31
        sp a4 + 50      ; r32  't'
        .word a4 + 38   ; r33
; Sheet 5/20
; a3 (continued)
        sp a4 + 50             ; r34  'z'
        sp a1 + 2              ; r35  back space  
        sp a4 + 50             ; r36 'l'
        sp a1 + 2              ; r37  tabulate
        sp a4 + 50             ; r38  'w'
        .word a5  ; r39
        sp a4 + 50             ; r40  'h'
        sp a1 + 2              ; r41  carr. return
        sp a4 + 50             ; r42  'y'
        .word a6  ; r43
        sp a4 + 50             ; r44  'p'
        cs ax + 2              ; r45
        sp a4 + 50             ; r46  'q'
        ts 0                   ; r47
        sp a4 + 50             ; r48  'o' (letter)
        sp a1 + 2              ; r49  stop
        sp a4 + 50             ; r50  'b'
        .word 0                ; r51
        sp a4 + 50             ; r52  'g'
        .word a3 + 1           ; r53
        .word 10               ; r54  '9'
        mr 0                   ; r55
        sp a4 + 50             ; r56  'm'
        sp a4 + 42             ; r57 shift to u.c.  
        sp a4 + 50             ; r58  'x'
        dv 0                   ; r59
        sp a4 + 50             ; r60  'v'
        sp a4                  ; r61  shift to l.c.  
        .word 1                ; r62  '0' (zero)  
        sp a1 + 2              ; r63  nullify  
;
; Sheet 6/20
; a4 (Upper case symbols & misc. program)
;
; [offsets in this table correspond to upper-case flexo codes; i.e., code point 6 is an upper case 'A']
a4:     ca a3                  ; r0 ;from: 61r
        td a1 + 3              ; r1
        sp a1 + 2              ; r2     'E' (not used)  
        .word 19               ; r3     '8' (exp.) 
        .word a3 + 55          ; r4
        .word 0.22000          ; r5     '_'    ; r0  [Larry had it marked as '+'?] 
        .word a3 + 59          ; r6     'A' (not used)  
        .word 14               ; r7     '3' (exp.)
        sp a1 + 2              ; r8     space
        sp a1 + 2              ; r9     '.' ['dot', not period] (see note) 
        sp a10 + 40            ; r10    'S'
        .word 15               ; r11    '4' (exp.)
        ad a3 + 59             ; r12 || 'I' (not used)
        sp a9                  ; r13    '/'
        .word a9 + 14          ; r14    'U' (not used) 
        .word 13               ; r15    '2' (exp.)  
        .word  0               ; r16  shift ribbon 
        sp a12                 ; r17    ')'
        sp a13                 ; r18 || 'D' (not used)  
        .word 16               ; r19    '5' (exp.) 
        ts 0                   ; r20 || 'R' (not used)  ;from: (11a10)
        .word 12               ; r21    '1' (exp.) 
        ad a13 + 41            ; r22 || 'J'(not used) 
        .word 18               ; r23    '7' (exp.)  
; was      (cs 2ax/ca 2ax)        ; r24 || 'N' (not used)  
        cs ax + 2              ; r24 || 'N' (not used)  
        sp a11                 ; r25    '('
        .word 0                ; r26    'F'
        .word 17               ; r27    '6' (exp.)  
        sp a10 + 50            ; r28    'C'
        sp a9 + 10             ; r29    '-' (exp.)  
;
; note: The symbol . ['dot', not period] can be used at the programmer's discretion to
;  denote multiplication, where convenient typographically.
;
; Sheet 7/20
; a4 (continued)
        ta a4 + 32             ; r30    'K' (not used)   ;from: 52r, 552
        sp a9 + 18             ; r31
        ca 0                   ; r32    'T' (not used)  ;from: (30r)
        sp a8 + 9              ; r33        ;from: 51r
        sp a1 + 2              ; r34    'Z' (not used) 
        sp a1 + 2              ; r35    back space  
        ca ax + 2              ; r36 || 'L' (not used)  
        sp a1 + 2              ; r37    tabulate  
        ca a4 + 40             ; r38    'W' (not used) ;from: 10a1
        su a3 + 4  ; r39
        sp 0                   ; r40    'H' (not used)  ;from: (4a1)
        sp a1 + 2              ; r41    carr. return
        ca a3 + 53             ; r42    'Y' (not used);from: 57a3
        sp a4 + 1              ; r43
; was       (sp a2/sp a2 + 2)      ; r44    'P'
        sp a2                  ; r44    'P'
        ca a3 + 39             ; r45 ;from: 17a1
        td a4 + 60             ; r46    'Q' (not used)
        cs a3 + 62  ; r47
        sp a1 + 23             ; r48    'O' (letter) (not used)  
        sp a1 + 2              ; r49    stop  
        ad a3 + 55             ; r50    'B' (not used)  ;from: ()
; was     sp (28a10/33r)         ; r51
        sp a10 + 28            ; r51
        sp a4 + 30             ; r52    'G' (not used)  ;from: 13a3
        sp a13 + 5             ; r53 ||
        .word 20               ; r54    '9' (exp.)  
        sp a4 + 30             ; r55    ;from: 29a3
        sp a13 + 10            ; r56 || 'M' (not used)  
        sp a4 + 42             ; r57     shift to u.c.  
        ca a3 + 33             ; r58    'X' (not used)  ;from: 10a1
        td a1 + 11             ; r59
        sp 0                   ;r60     'V' (not used) from: 19a1, 46r)
        sp a4 + 0              ; r61     shift to l.c.  
        .word 11               ; r62    '0' (zero exp.)  
        sp a1 + 2              ; r63    nullify  
;
; Sheet 8/20
; a5 (Interpret MRA as lower case number)
;
a5:     cs a1 + 39    ; r0 ;from: 60a4
        ts a1 + 39    ; r1
        ao a1 + 39    ; r2 ;from: 18r
        cp a5 + 15    ; r3
        sp a8         ; r4        (select new address k)  
        td a5 + 7     ; r5
        sp ax         ;      (= sp 852)   ; r6 ;|- store number
        ts 0          ; || r7 ;from: (5r);      |  in (k, k+1)
        sp ax                            ; r8 ; |-
        ca a4 + 50    ; r9 ; |- form symbol mr k
        td a5 + 13    ; r10  |  or dv k, where
        ca a5 + 7     ; r11  | k is address at
        su a3 + 47    ; r12  | which number has
        ad 0          ; r13  |  just been stored  ;from: (10r)
        sp a6 + 8     ; r14  |-
        sp ax         ; r15 ;from: 3r
        dv a7 + 4     ; r16 ||        (divide by 10)  
        sp ax         ; r17 ||
        sp a5 + 2     ; r18
;
; Sheet 9/20
; a6 (Interpret MRA as exponent)
;
a6:     ca a8 + 18               ; r0 ;from: 60a4;- store "sp exp" in
        td a6 + 3                ; r1 ; place of last-stored
        ca a6 + 18               ; r2 ; symbol (mr x or dv x)
        ex 0                     ; r3 ;-
        td a3 + 51               ; r4 ;-
        ca a3 + 51               ; r5 ; store "+x"
        sp a8 + 9                ; r6 ;-
        sp a6 + 19               ; r7 ;- compute and store the
        sp a8 + 9                ; r8 ;- exponent +- [?] n
        sp ax                    ; r9 ;-
        ca a7                    ; r10 ; reset MRA
        sp ax                    ; r11 ; and various
        ca 0                     ; r12 ; counters
        ts a1 + 38               ; r13 ;
        ts a1 + 39               ; r14 ;
        ca a6 + 13               ; r15 ;
        td a1 + 36               ; r16 ;-
; was        sp (38a4/14a9)           ; r17
        sp a4 + 38               ; r17
        sp a13 + 15              ; r18  ;"sp exp"  
        td a6 + 25               ; r19
        ca ax + 4                ; r20 ;-
        td a6 + 24               ; r21 ; Form [?] +- [?] n, where
; was       (ca 2ax/cs 2ax)          ; r22 ; n is in MRA in
        ca ax + 2                ; r22 ; n is in MRA in
; was        sr* 15                   ; r23 ; (24,6) form
        srr 15                   ; r23 ; (24,6) form
; was        sl 0                     ; r24 ;-
        slr 0                     ; r24 ;-
        sp 0  ; r25
;
; Sheet 10/20
; a7 (Numerical storage)
;
; [the source doc doesn't show these as either Octal or Decimal, but 47777 looks ]
; [like a hint, so I'll assume Octal ]
a7:     .word 0.00000               ; r0 ;- 0
        .word 0.47777                 ; r1 ;-
        .word 0.40000                 ; r2 ;- 1
        .word 0.01000                 ; r3 ;-
        .word 0.50000                 ; r4 ;- 10
        .word 0.04000                 ; r5 ;-
;
; Sheet 11/20
; a8 (Address selection)
;
a8:     ta a8 + 7                  ; r0 ;from: 4a5;- Select new
        ca a8 + 8                  ; r1 ; address for
        su a3 + 21                 ; r2 ; storage of
        ts a8 + 8                  ; r3 ; numerical
        su a8 + 18                 ; r4 ; quantity
        cp a8 + 15                 ; r5 ;
        ca a8 + 8                  ; r6 ;
        sp 0                       ; r7 ;from: (0r);
        .word +197                 ; r8 ;- (last address used)
        ta a8 + 17                 ; r9 ;from: various points;-
        ts 32                      ; r10 ; Store C(AC) in    ()
        ao a8 + 10                 ; r11 ;    next available
        su a3 + 47                 ; r12 ;    program address.
        su a8 + 8                  ; r13 ;
        cp a8 + 16                 ; r14 ;
        ck 0       ;(alarm)        ; r15 ;from: 5r;
        ao a8 + 18                 ; r16 ;from: 14r;
        sp 0                       ; r17 ;from: (9r);
        .word  31                  ; r18 ;- (last occupied program address)
;
; Sheet 12/20
; a9 (division, etc.)
;
a9:     ca a4 + 12          ; r0  (divide) ;from: 13a4
        ex a4 + 50          ; r1
        ex a4 + 12          ; r2
        sp a9 + 5           ; r3
; was     sp (2a1/a10 + 14)      (the a10 + 14 mode is never used)  ; r4
        sp a1 + 2           ; r4  (the a10 + 14 mode is never used)  
        ta a9 + 9           ; r5 ;from: 3r,10r,14r,30r
        ca a6 + 22          ; r6
        ex a4 + 24          ; r7
        ex a6 + 22          ; r8
        sp 0                ; r9 ;from: (5r)
        sp a9 + 5           ; r10     (upper case minus) ;from: 29a4
        ca a4 + 14          ; r11
        td a6 + 17          ; r12    
        sp a1 + 2           ; r13
        sp a9 + 5           ; r14      ; from: 17a6 [?]
        ca a9 + 17          ; r15
        td a6 + 17          ; r16
        sp a4 + 38          ; r17
        ta a9 + 27          ; r18  (reset dv and exp to normal)  ;from: 28r,12a10,22a10
        ca a4 + 36          ; r19
        ts a6 + 22          ; r20
        ca a3 + 45          ; r21
        ts a4 + 24          ; r22
        ca a4 + 4           ; r23
        td a4 + 50          ; r24
        ca a4 + 6           ; r25
        td a4 + 12          ; r26
        sp 0                ; r27 ;from: (18r)
        sp a9 + 18          ; r28   (reset dv and exp to non-normal)  ;from: 8a12
        sp a9 + 5           ; r29
        ca a4 + 12          ; r30
        ex a4 + 50          ; r31
        ex a4 + 12          ; r32
        sp a12 + 9          ; r33
;
; Sheet 13/20
; a10 (Equals, comma, SP, CP)
;
a10:    ta a10 + 9    ; r0 ;from: 10r,3a11
        ca a4 + 18    ; r1
        sp a8 + 9     ; r2
        td a10 + 68   ; r3 
        su a3 + 62    ; r4
        ts a10 + 63   ; r5
        td a10 + 8    ; r6
        ca a10 + 9    ; r7
        ex 0          ; r8 ;from: (6r)
        sp 0          ; r9 ;from: (0r)
        sp a10 + 0    ; r10 ;from: 9a3  (equals)  
        td a4 + 20    ; r11
        sp a9 + 18    ; r12 ;from: 17a11
        sp a1 + 2     ; r13
        ca a4 + 22    ; r14 (comma)   ;from: 25a3
        sp a8 + 9     ; r15
        ca a4 + 20    ; r16
        sp a8 + 9     ; r17
        ca a10 + 63   ; r18
        td a10 + 21   ; r19
        ca a10 + 68   ; r20
        td 0          ; r21 ;from: (19r)
        sp a9 + 18    ; r22
        ca a10 + 58   ; r23
        td a4 + 51    ; r24
        td a4 + 51    ; r25
        td a1 + 12    ; r26
; was        sp (2a1/49r)  ; r27
        sp a1 + 2     ; r27
        ca a10 + 59   ; r28 ;from: 51a4
        td a4 + 51    ; r29
        ca a10 + 60   ; r30
        td a1 + 12    ; r31
        sp a6 + 19    ; r32
        ad a10 + 57   ; r33
; Sheet 14/20
; a10 (continued)
        td a10 + 38   ; r34
        ca a8 + 10    ; r35
        su a3 + 47    ; r36
        ad a3 + 4     ; r37
        ts 0          ; r38 ;from: (34r)
        sp a6 + 9     ; r39
        ca a10 + 52   ; r40   (SP)  ;from: 10a4
        ts a10 + 56   ; r41 ;from: 51r
        rd a10 + 42   ; r42
        su a4 + 54    ; r43
        cp 0          ; r44       (provision for future SR, CR instructions)  
        su a4 + 21    ; r45
        cp a2 + 18    ; r46  (START)  
        ca a10 + 61   ; r47
        td a3 + 25    ; r48
        sp a1 + 2     ; r49
        ca a10 + 57   ; r50   (CP)  ;from: 28a4
        sp a10 + 41   ; r51
        sp a14        ; r52 ||
        sp a2 + 14    ; r53 ;from: 25a3
        ca a10 + 62   ; r54 ;from: 25a3
        sp a10 + 48   ; r55
; was      (sp a14/cp a14)  ; r56
        sp a14        ; r56
        cp a14        ; r57
        .word a10 + 28    ; r58  [guy: I'm not sure if this is what "+28r" means!]
        .word a4 + 33     ; r59
        .word a3 + 31     ; r60
        .word a10 + 53    ; r61
        .word a10 + 14    ; r62
        .word 0                     ; r63 ;- storage for addresses used by
        .word 0                     ; r64 ; parenthesis routines in forming
        .word 0                     ; r65 ; and storing sp orders
        .word 0                     ; r66 ;
        .word 0                     ; r67 ; [These are notated in the CS as: ]
        .word 0                     ; r68 ; [   63-67 +0                    ]
        .word 0                     ; r69 ; [   68-72 +0                    ]
        .word 0                     ; r70 ; [   73-77 +0                    ]
        .word 0                     ; r71 ;
        .word 0                     ; r72 ;
        .word 0                     ; r73 ;
        .word 0                     ; r74 ;
        .word 0                     ; r75 ;
        .word 0                     ; r76 ;
        .word 0                    ; r77 ;-
;
; Sheet 15/20
; a11 (Left parenthesis)
;
a11:    sp a8 + 9       ; r0 (store dummy symbol)  ;from: 25a4
        ao a10 + 3      ; r1
        ao a10 + 5      ; r2
        sp a10          ; r3
        sp a8           ; r4
        td a10 + 73     ; r5
        ao a11 + 5      ; r6
        ca a4 + 12      ; r7
        su a4 + 50      ; r8
        cp a11 + 11     ; r9
        sp a1 + 2       ; r10
        ca a10 + 5      ; r11 ;from: 9r
        td a11 + 14     ; r12
        td a11 + 16     ; r13
        ca 0            ; r14 ;from: (12r)
        ad a11 + 18     ; r15
        ts 0            ; r16 ;from: (13r)
        sp a10 + 12     ; r17
        .word 0.04000    ; r18  ; [assuming it's octal]
;
; Sheet 16/20
; a12 (Right parenthesis)
;
a12:    ca a10 + 5      ; r0 ;from: 17a4
        td a12 + 4      ; r1
        su a3 + 62      ; r2
        td a10 + 5      ; r3
        ca 0            ; r4 ;from: (1r)
        td a12 + 29     ; r5
        su a11 + 18     ; r6
        cp a12 + 36     ; r7
        sp a9 + 28      ; r8
        ca a11 + 5      ; r9 ;from: 37r
        su a3 + 62      ; r10
        td a11 + 5      ; r11
        td a12 + 16     ; r12
        td a12 + 32     ; r13
        ca a4 + 22      ; r14
        sp a8 + 9       ; r15
        ca 0            ; r16 ;from: (12r)
        ad a3 + 47      ; r17
        sp a8 + 9       ; r18
        ca a10 + 3      ; r19
        td a12 + 24     ; r20
        su a3 + 62      ; r21
        td a10 + 3      ; r22
        td a12 + 25     ; r23
        ca 0            ; r24 ;from: (20r)
        ex 0            ; r25 ;from: (23r)
        ad a3 + 4       ; r26
        sp a8 + 9       ; r27
        ad a3 + 62      ; r28
        td 0            ; r29 ;from: (5r)
        ca a4 + 50      ; r30
        td a12 + 33     ; r31
; Sheet 17/20
; a12 (continued)
        ca 0  ; r32     ;from: (13r)
        ad 0  ; r33     ;from: (31r)
        sp a8 + 9       ; r34
        sp a1 + 2       ; r35
        sp a9 + 18      ; r36 ;from: 7r
        sp a12 + 9      ; r37
;
; Sheet 18/20
; a13 (Interpretive routines)
;
a13:    ta a13 + 4      ; r0      equals   ;from:
        ca a7           ; r1
        ts a13 + 41     ; r2
        ca a7 + 2       ; r3
        sp 0            ; r4
        ta a13 + 9      ; r5   plus   ;from:
        ad a13 + 41     ; r6
        ts a13 + 41     ; r7
        ca 207          ; r8
        sp 0            ; r9
        ta a13 + 14     ; r10  minus  ;from:
        ad a13 + 41     ; r11
        ts a13 + 41     ; r12
        cs a7 + 2       ; r13
        sp 0            ; r14
        ta a13 + 21     ; r15  exponent ;from:
        ta a13 + 27     ; r16
        sp ax           ; r17
        ao a13 + 21     ; r18
        td a13 + 32     ; r19
        ao a13 + 32     ; r20
        cs 0            ; r21
        cp a13 + 37     ; r22
        ts a13 + 40     ; r23
        cs a13 + 40     ; r24
        ts a13 + 40     ; r25
        ca 210          ; r26
        ad 0            ; r27
        ts a13 + 34     ; r28
        ao a13 + 40     ; r29
        cp a13 + 33     ; r30
        sp ax           ; r31
        sp 0            ; r32
        sp ax           ; r33
; was        (mr 0/dv 0)     ; r34
        mr 0            ; r34
        sp ax           ; r35
        sp a13 + 29     ; r36
        ts a13 + 40     ; r37
        ca a3 + 55      ; r38
        sp a13 + 27     ; r39
        .word 0         ; r40 ;-|n| counter
        .word 0         ; r41 ;- temporary sum storage for arithmetic
        .word 0         ; r42 ;-
;
; Sheet 19/20
; a15 (Print control)
;
a15:    ta a15 + 3      ; r0 ;- plant address of 1st
        sp ax           ; r1 ;- character to be printed
        si 149          ; r2
        ca 0            ; r3
        td a15 + 16     ; r4
        td a15 + 8      ; r5
        cp a15 + 9      ; r6 ;- If next symbol is an sp order carry it out.
        sp ax           ; r7 ; Since symbols to be printed are stored as
        sp 0            ; r8 ;- "mr x,mr y," etc. the "mr" actuates this xxx [?]
        su a3           ; r9 ;-
        clc 10          ; r10 ; form and print first letter
        rc a15 + 11     ; r11 ;-
        ao a15 + 3      ; r12
        ca a4 + 5       ; r13  ;  (0.22000 - "=") 
        rc a15 + 14     ; r14
        sp ax  ; r15
        ca 0            ; r16 ;- print number
        sp 222          ; r17 (24,6)print routine [i.e., floating point format]
        sp a15 + 1      ; r18 ;-
;
; Sheet 20/20
; a16 (used in a2)
a16:    ta a16 + 10     ; r0
        ca 409          ; r1 ;- set g[?] to sp 2a1 and reset
        ex a3 + 25      ; r2 ;
        ex a9 + 4       ; r3 ;-
        ca a16 + 12     ; r4 ;- set P to sp 2a2 (and reset)
        ex a4 + 44      ; r5 ;
        ex a16 + 12     ; r6 ;-
        ca a2 + 12      ; r7 ;- set . to sp 8a2 (and reset)
        ex a3 + 17      ; r8 ;
        ex a2 + 12      ; r9 ;-
        sp 0            ; r10
        sp a15          ; r11
; was    (sp a2 + 2/sp a2)  ; r12
        sp a2 + 2       ; r12
;
; Miscellaneous [Not sure about this section needs proofing]
;
; 210 dv 0
;
; 211 = 0a14 and also "1t" in print routine. Equations are not allowed
;       0 as a number, thus 0a14is not used in a meaningful way.
;
; 212-221 = a14 - 10a14: storage for sp orders to initial address of numbered equations (a
;                      maximum of 10 is allowed)
        .org 211
a14:    .word 0
        .word 0
        .word 0
        .word 0
        .word 0
        .word 0
        .word 0
        .word 0
        .word 0
        .word 0
        .word 0
      
;
; 222 (24,6) print routine
;
; 852 = "ax"  = (24,6) programmed arithmetic
;
        .org 852
ax:     .word 0
        .word 0