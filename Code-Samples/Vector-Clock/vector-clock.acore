
; *** Core Image ***
%File: vector-clock-rg-gf-Dec08-2023.ww
%TapeID: None
@C0000: 0000000 0000001  None    None    None    None    None    None   
@C0040: 0100000 0100000 0074114 0074271 0074310 0074327 0074051 0074140 
@C0050: 0074042 0050105 0130106 0114113 0070105 0100000 0040106 0074105 
@C0060: 0050105 0130106 0114113 0070105 0100000 0040106 0130107 0114112 
@C0070: 0070105 0100000 0040107 0130110 0114112 0070105 0100000 0040110 
@C0100: 0130111 0114113 0070105 0100000 0040111 0074000 0000000 0000021 
@C0110: 0000070 0000012 0000073 0000013 0050137 0100000 0040265 0074251 
@C0120: 0100267 0001600 0104266 0174247 0040246 0104267 0171010 0060246 
@C0130: 0100266 0024246 0100265 0110245 0040265 0114244 0070117 0074000 
@C0140: 0050167 0100000 0000600 0024000 0014000 0070172 0100171 0070167 
@C0150: 0100000 0040265 0130265 0074176 0130265 0074176 0130265 0074176 
@C0160: 0130265 0074176 0130265 0130265 0074176 0130265 0074176 0074000 
@C0170: 0100000 0100000 0100171 0030170 0040171 0074167 0050243 0040265 
@C0200: 0074251 0100267 0000600 0100266 0024000 0104267 0000600 0100266 
@C0210: 0024000 0104267 0000600 0100000 0114266 0024000 0100267 0000600 
@C0220: 0104266 0024000 0100266 0000600 0100267 0024000 0104266 0000600 
@C0230: 0100267 0024000 0104266 0000600 0100000 0114267 0024000 0100266 
@C0240: 0000600 0104267 0024000 0074000 0000073 0000005 0000000 0176000 
@C0250: 0000074 0050264 0100265 0154001 0110416 0044256 0100000 0040266 
@C0260: 0130256 0044262 0100000 0040267 0074000 0000000 0000000 0000000 
@C0270: 0010000 0050363 0100107 0040265 0074251 0100266 0140270 0040366 
@C0300: 0100267 0140270 0040367 0100000 0040364 0040365 0074353 0010000 
@C0310: 0050363 0100110 0040265 0074251 0100266 0140307 0040366 0100267 
@C0320: 0140307 0040367 0100000 0040364 0040365 0074355 0006314 0050363 
@C0330: 0100111 0154002 0110111 0040371 0100110 0140370 0110371 0040265 
@C0340: 0074251 0100266 0140326 0040366 0100267 0140326 0040367 0100000 
@C0350: 0040364 0040365 0074356 0074372 0074372 0074372 0074372 0074372 
@C0360: 0074372 0074372 0074372 0074000 0000000 0000000 0000000 0000000 
@C0370: 0005252 0000000 0050415 0100365 0001600 0100366 0154003 0174247 
@C0400: 0040246 0100367 0154003 0171010 0060246 0100364 0024246 0100364 
@C0410: 0110366 0040364 0100365 0110367 0040365 0074000 0000417 0000000 
@C0420: 0071463 0006012 0071221 0013763 0070256 0021631 0066617 0027333 
@C0430: 0064475 0034631 0061704 0041666 0056462 0046425 0052634 0052634 
@C0440: 0046425 0056462 0041666 0061704 0034631 0064475 0027333 0066617 
@C0450: 0021631 0070256 0013763 0071221 0006012 0071463 0177777 0071221 
@C0460: 0171765 0070256 0164014 0066617 0156146 0064475 0150444 0061704 
@C0470: 0143146 0056462 0136111 0052634 0131352 0046425 0125143 0041666 
@C0500: 0121315 0034631 0116073 0027333 0113302 0021631 0111160 0013763 
@C0510: 0107521 0006012 0106556 0177777 0106314 0171765 0106556 0164014 
@C0520: 0107521 0156146 0111160 0150444 0113302 0143146 0116073 0136111 
@C0530: 0121315 0131352 0125143 0125143 0131352 0121315 0136111 0116073 
@C0540: 0143146 0113302 0150444 0111160 0156146 0107521 0164014 0106556 
@C0550: 0171765 0106314 0000000 0106556 0006012 0107521 0013763 0111160 
@C0560: 0021631 0113302 0027333 0116073 0034631 0121315 0041666 0125143 
@C0570: 0046425 0131352 0052634 0136111 0056462 0143146 0061704 0150444 
@C0600: 0064475 0156146 0066617 0164014 0070256 0171765 0071221  None   
@S0000: zero
@S0001: one
@S0040: main
@S0042: main_loop
@S0051: update_time
@S0060: debug_update_time
@S0105: upt_ret
@S0106: time_sub
@S0107: time_seconds
@S0110: time_minutes
@S0111: time_hours
@S0112: k59
@S0113: k11
@S0114: draw_12_ticks
@S0117: d12_loop
@S0137: d12_ret
@S0140: draw_60_points
@S0150: show
@S0167: d60_ret
@S0170: d60_bit0
@S0171: d60_flag
@S0172: d60_flip
@S0176: d60_draw
@S0243: d60d_ret
@S0244: drt_60
@S0245: drt_5
@S0246: drt_dxy
@S0247: drt_mask_x
@S0250: drt_mask_y
@S0251: lookup
@S0256: lkup1
@S0262: lkup2
@S0264: lkup_ret
@S0265: lkup_idx
@S0266: lkup_x
@S0267: lkup_y
@S0270: seconds_scale
@S0271: draw_second_hand
@S0307: minutes_scale
@S0310: draw_minute_hand
@S0326: hours_scale
@S0327: draw_hour_hand
@S0353: dsh_do8
@S0354: dsh_do7
@S0355: dsh_do6
@S0356: dsh_do5
@S0363: dsh_ret
@S0364: dsh_x
@S0365: dsh_y
@S0366: dsh_dx
@S0367: dsh_dy
@S0370: k12th
@S0371: hr_tmp1
@S0372: dsh_plot
@S0415: dsh_plot_ret
@S0416: minutes_ring_pointer
@S0417: minutes_ring
@E0041: exec: set_timezone_offset(cm, rl, hours_sixty_mode_arg=False)
@E0057: exec: get_posix_time("time_seconds", "time_minutes", "time_hours", rll=rl)
@N0000: these are set automatically
@N0042: draw the 12 hour markers
@N0047: minutes points give much flicker
@N0051: store the return address
@N0052: don't recompute the time every refresh cycle; just every "n" cycles
@N0053: this optimization reduces impact of the Linux system call on the main refresh loop...
@N0070: not yet overfow
@N0115: clear index
@N0117: read table at _index to _x and _y
@N0124: keep sign
@N0126: shifts with sign to br
@N0150: clear index
@N0151: 0
@N0152: 1
@N0154: 2
@N0156: 3
@N0160: 4
@N0162: 5: skip
@N0163: 6
@N0165: 7
@N0173: flip sign bit
@N0200: read table at _index to _x and _y
@N0247: sign included
@N0250: sign excluded
@N0252: clears BR
@N0331: *4
@N0332: multiply by four then add one is equivalent to multiply by five
@N0333: put the whole number of hours aside, compute fractional hours next
@N0334: fetch Minutes
@N0335: multiply by 1/12 to get 0-4
@N0336: add it to the whole number of hours
@N0337: look up the coords in the trig table
@N0370: approx equal to 1/12
@N0373: position
@N0374: draw small vector
@N0400: keep sign
@N0403: shifts with sign to br
