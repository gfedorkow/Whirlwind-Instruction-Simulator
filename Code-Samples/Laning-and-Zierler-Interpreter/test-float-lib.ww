                      ; notes is the default test expected by runtest.sh
                      ; Other test points are test and sqrt2

					  ; sp notes
					  ; sp normalize_test

					  sp test

					  ; sp sqrt2		; With su r17 this still fails
					  si 0
normalize_test:
					  ta norm_test_rtn
					  cs nm_test_args_len
					  ts nm_test_cntr
					  ca nm_test_args_ptr
  					  td nm_load_arg
		nm_test_loop:
                      sp ax		; Spax in
nm_load_arg:          ca 0
					  sp float_30_15_print
					  sp ax		; Spax out
					  si 149
					  ca newlinemfp
					  rc 0
					  ao nm_load_arg
					  ao nm_load_arg
					  ao nm_test_cntr
					  cp nm_test_loop
norm_test_rtn:		  sp 0

	nm_test_args:
                  x1: .float +0.3141593, 10
                  x2: .float +0.3141593, -10
                  x3: .float +0.3141593, 0
                  x4: .float +0.3141593, -1
                  x5: .float -0.3141593, 5
				  x6: .float +0.1234567, 0
				  x7: .float -0.9876543, -6
  				  x8: .float +0.9876543, -6
				  x9: .float +0.1059463, 0
				 x10: .float +0.1111111, 05
                 x11: .float +0.84757036, 0
				 x12: .float +0.9999999, 0
nm_test_args_end:
nm_test_args_ptr: .word nm_test_args
nm_test_args_len: .word ((nm_test_args_end - nm_test_args) / 2) - 1
nm_test_cntr:	  .word 0


                      ; This test loops through and prints musical notes
                      ; starting with a semitone above A-220 and ending at
                      ; A-880.  Also sp within the float lib is tested via the
                      ; jump to skip.

               notes:
					  ta notes_rtn
                      .print "----------- %fl", semitone
                      sp ax
                      ca a220
                      ts t
                      ts t1
                      sp ax
                loop:
                      ca loopcnt
                      su one
                      ts loopcnt
                      cp done
                      sp ax
                      ca t
                      mr semitone
                      sp skip
                      ts t1
                skip: ts t
                      sp ax
                      .print "xxxxxxxxxxxx %d %fl", loopcnt, t
                      sp loop
                done:
notes_rtn:			  sp 0

               sqrt2:
					  ta sqrt2_rtn
                      sp ax
                      ca float1
                      ts t00
                      sp ax
               sloop:
                      ca sloopcnt
                      su one
                      ts sloopcnt
                      cp sdone
                      sp ax
                      ca float2
                      dv t00
                      ad t00
                      dv float2
                      ts t00
                      sp ax
                      .print "xxxxxxxxxxxx %d %fl", sloopcnt, t
                      ca 0
                      .print "------------ %fm", mra
                      sp sloop
            sloopcnt: .word 10
               sdone:
		   sqrt2_rtn: sp 0

                test:
					  sp ax
;					  cm float_neg_zero
;					  ts t00

					  ; These both work
;					  cm a440
;					  cs a440


					  cm minus_pi   ; -|- Broken due to issue no-lower-cm
					  ts t01		; -|
					  
					  cs pi
					  ts t02
					  sp ax
					  sp exit

                exit: si 0

;                   x: .float +0.5, 0
                   x: .float +0.11111111, 1
   				  xn: .float -0.5, 0
				  ; xxx: .float +0.1, 20		; Should be an out-of-range error

                   y: .float +0.1, 0
                   z: .float +0.1416595, 1     ; This value breaks dv when divided into float1
				 t00: .float 0, 0
                 t01: .float 0, 0
                 t02: .float 0, 0
                 t03: .float 0, 0
                  t1: .float 0, 0
                  t2: .word 0
                  pi: .float +0.3141593, 1
		    minus_pi:  float -0.3141593, 1
                   v: .float +0.2718282, 1
                a220: .float +0.220, 3
           frac_a220: .word +0.220
                a440: .float +0.440, 3
                a880: .float +0.880, 3
                num1: .float +0.314159, 10
                num2: .word 0o010000           ; float 2^11
                      .word 0o022000
                frac: .word +0.1
 		  float_zero: .float 0, 0
	  float_neg_zero: .word 0o177777
	  				  .word 0o000777
		  		neg0: .word 0o177777
		  
;           semitone: .float +0.1059463094, 1
            semitone: .float +0.10594632, 1		; Fudged! To get basic freqs more accurate and more familiar.
					  		 			  		; Also in LZ test music-notes.lzt
             loopcnt: .word 25

                      .include "float-lib.ww"
					  .include "modern-frac-30-0-0-print.ww"
					  .include "float-30-15-0-print.ww"
