
; *** Core Image ***
%File: l-and-z.ww
%TapeID: 
%JumpTo 0o10
@C0010: 0074400  None    None    None    None    None    None    None   
@C0040: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0000000 
@C0050: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0000000 
@C0060: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0000000 
@C0070: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0000000 
@C0100: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0000000 
@C0110: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0000000 
@C0120: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0000000 
@C0130: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0000000 
@C0140: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0000000 
@C0150: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0000000 
@C0160: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0000000 
@C0170: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0000000 
@C0200: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0000000 
@C0210: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0000000 
@C0220: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0000000 
@C0230: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0000000 
@C0240: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0000000 
@C0250: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0000000 
@C0260: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0000000 
@C0270: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0000000 
@C0300: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0000000 
@C0310: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0000000 
@C0320: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0000000 
@C0330: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0000000 
@C0340: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0000000 
@C0350: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0000000 
@C0360: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0000000 
@C0370: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0000000 
@C0400: 0000200 0130444 0014402 0110501 0044410 0044651 0044416 0044426 
@C0410: 0100000 0114505 0070414 0074647 0100540 0044413 0100000 0114000 
@C0420: 0070401 0114567 0070656 0100554 0044675 0104677 0110000 0070450 
@C0430: 0164564 0040453 0100614 0114564 0154011 0040454 0100431 0044442 
@C0440: 0075442 0140762 0110000 0075442 0130445 0074402 0000000 0000000 
@C0450: 0100736 0044442 0074440 0000000 0000000 0075356 0075105 0101371 
@C0460: 0074775 0014461 0130472 0070461 0074402 0104520 0040472 0075356 
@C0470: 0075100 0074465 0177774 0130532 0074747 0111141 0074734 0075442 
@C0500: 0074040 0000501 0000601 0074663 0000011 0074000 0000000 0074663 
@C0510: 0000004 0074402 0075063 0074663 0000005 0074663 0074665 0074663 
@C0520: 0000003 0000000 0000000 0074663 0000006 0074663 0000002 0074663 
@C0530: 0000010 0074663 0075067 0074663 0000007 0074663 0074670 0074663 
@C0540: 0000673 0074663 0000647 0074663 0074402 0074663 0074402 0074663 
@C0550: 0000701 0074663 0074402 0074663 0000724 0074663 0105444 0074663 
@C0560: 0040000 0074663 0074402 0074663 0000000 0074663 0000502 0000012 
@C0570: 0140000 0074663 0074653 0074663 0150000 0074663 0074601 0000001 
@C0600: 0074402 0100501 0044403 0074402 0000023 0000570 0022000 0000574 
@C0610: 0000016 0074402 0074402 0075121 0000017 0110574 0075007 0001025 
@C0620: 0000015 0000000 0075212 0075260 0000020 0040000 0000014 0111331 
@C0630: 0000022 0105444 0075167 0000000 0000021 0075133 0075021 0050641 
@C0640: 0075031 0100000 0074775 0074402 0074402 0101444 0074402 0100651 
@C0650: 0114505 0074000 0074402 0100566 0074602 0074455 0100550 0044675 
@C0660: 0104577 0074426 0074402 0110570 0074642 0074637 0075265 0000024 
@C0670: 0074637 0075272 0074653 0100542 0044413 0074000 0074601 0000013 
@C0700: 0074402 0104447 0040447 0130447 0070720 0074764 0044710 0075442 
@C0710: 0040000 0075442 0100663 0044716 0100710 0114560 0110000 0074734 
@C0720: 0075442 0150762 0075442 0074703 0101006 0044727 0100746 0064000 
@C0730: 0044564 0100564 0074775 0074747 0074775 0075442 0100756 0075442 
@C0740: 0100000 0040446 0040447 0100741 0044444 0074647 0075277 0050755 
@C0750: 0101446 0044754 0101444 0161017 0154000 0074000 0000000 0000000 
@C0760: 0040000 0001000 0050000 0004000 0050773 0100774 0114526 0040774 
@C0770: 0115006 0071003 0100774 0074000 0000305 0051005 0040040 0130776 
@C1000: 0114560 0114774 0071004 0054000 0131006 0074000 0000037 0100615 
@C1010: 0064663 0064615 0075014 0074402 0051020 0100752 0064631 0064752 
@C1020: 0074000 0075014 0100617 0044745 0074402 0075014 0101030 0044745 
@C1030: 0074647 0051042 0100645 0040752 0100556 0040631 0100605 0044663 
@C1040: 0100607 0044615 0074000 0075031 0075014 0100615 0064663 0064615 
@C1050: 0075223 0051062 0100623 0074775 0045155 0114577 0041150 0045061 
@C1060: 0101062 0064000 0074000 0075051 0044625 0075031 0074402 0100627 
@C1070: 0074775 0100625 0074775 0101150 0045076 0101155 0044000 0075031 
@C1100: 0101143 0044664 0100673 0044414 0074402 0101144 0044664 0101145 
@C1110: 0044414 0074747 0111142 0045117 0100776 0114560 0110505 0040000 
@C1120: 0074735 0101135 0041141 0015123 0114667 0070000 0114626 0070477 
@C1130: 0101146 0044532 0074402 0101142 0075122 0075373 0074473 0101147 
@C1140: 0075131 0075373 0071373 0001105 0000642 0000540 0001136 0001067 
@C1150: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0000000 
@C1160: 0000000 0000000 0000000 0000000 0000000 0000000 0000000 0074775 
@C1170: 0131054 0131056 0075051 0074764 0045162 0131174 0100615 0114663 
@C1200: 0071202 0074402 0101056 0045205 0045207 0100000 0111211 0040000 
@C1210: 0075065 0004000 0101056 0045216 0114577 0045056 0100000 0045247 
@C1220: 0115211 0071256 0075043 0101174 0114577 0045174 0045232 0045252 
@C1230: 0100627 0074775 0100000 0110560 0074775 0101054 0045242 0114577 
@C1240: 0045054 0045243 0100000 0064000 0110505 0074775 0110577 0044000 
@C1250: 0100663 0045253 0100000 0110000 0074775 0074402 0075031 0075223 
@C1260: 0051264 0100756 0041331 0100760 0074000 0051271 0111331 0041331 
@C1270: 0100760 0074000 0051276 0111331 0041331 0104760 0074000 0051305 
@C1300: 0051313 0075442 0131305 0045320 0131320 0104000 0071325 0041330 
@C1310: 0105330 0041330 0100322 0110000 0041322 0131330 0071321 0075442 
@C1320: 0074000 0075442 0140000 0075442 0075315 0041330 0100570 0075313 
@C1330: 0000000 0000000 0000000 0051336 0075442 0000225 0100000 0045353 
@C1340: 0045343 0071344 0075442 0074000 0114501 0170012 0025346 0131336 
@C1350: 0100606 0025351 0075442 0100000 0075771 0075334 0051370 0101013 
@C1360: 0064532 0065013 0101372 0064655 0065372 0100471 0064522 0064471 
@C1370: 0074000 0075333 0074457 0000000 0000000 0000000 0000000 0000000 
@C1400: 0000000 0000000 0000000 0000000 0000000 0000000 0051425 0075442 
@C1410: 0110000 0000225 0105432 0041431 0101426 0024000 0101427 0024000 
@C1420: 0131431 0071414 0101430 0024000 0075442 0074000 0174000 0052000 
@C1430: 0122000 0000000 0000012 0037777 0051440 0041441 0101441 0111433 
@C1440: 0074000 0000000 0051725 0075725 0000000 0000000 0000000 0161036 
@C1450: 0101442 0101742 0075601 0075643 0000035 0041603 0075640 0075451 
@C1460: 0000000 0125445 0041445 0100000 0065751 0145444 0075700 0141444 
@C1470: 0065445 0141751 0075461 0065751 0041603 0105610 0111530 0041610 
@C1500: 0105603 0145603 0065751 0161002 0151751 0155017 0041671 0101552 
@C1510: 0151603 0155017 0041751 0145603 0115552 0155017 0115463 0111524 
@C1520: 0151603 0155017 0111671 0075467 0000001 0075553 0101444 0075706 
@C1530: 0000002 0101754 0044000 0075724 0131444 0075711 0075505 0075553 
@C1540: 0000077 0105444 0071724 0131725 0045754 0101740 0045725 0115450 
@C1550: 0071752 0075725 0020000 0101445 0160006 0041445 0161011 0125444 
@C1560: 0041444 0100000 0071565 0114000 0071570 0154016 0041444 0131446 
@C1570: 0121446 0115540 0071577 0105446 0071755 0105540 0041446 0101603 
@C1600: 0111750 0041610 0101444 0000000 0065445 0161011 0065446 0155011 
@C1610: 0000000 0161011 0065445 0041444 0155017 0065445 0075723 0121444 
@C1620: 0114000 0071526 0121445 0114000 0071634 0115524 0111463 0041445 
@C1630: 0101444 0071534 0115524 0041444 0105445 0041445 0141444 0075710 
@C1640: 0105751 0041751 0105603 0065610 0115446 0041603 0071657 0111446 
@C1650: 0041446 0101444 0065751 0041444 0101445 0065610 0041445 0121603 
@C1660: 0115454 0071663 0075724 0111447 0041671 0101524 0065610 0161017 
@C1670: 0111751 0000000 0041751 0155017 0065445 0161017 0111444 0161001 
@C1700: 0041444 0155017 0125445 0041445 0101751 0111444 0041444 0141445 
@C1710: 0071617 0101445 0161017 0111444 0165460 0041444 0155017 0041445 
@C1720: 0105460 0111610 0111446 0041446 0131725 0100000 0075757 0041603 
@C1730: 0045532 0045740 0111750 0045742 0161033 0155021 0111536 0041747 
@C1740: 0100000 0041610 0100000 0161011 0065610 0041751 0155017 0000000 
@C1750: 0000001 0000000 0111524 0071725 0074000 0101616 0111616 0051767 
@C1760: 0041770 0121770 0114000 0071765 0075766 0000000 0101770 0074000 
@C1770: 0000000 0052042 0075442 0101445 0042113 0101444 0042112 0142113 
@C2000: 0072043 0102112 0072005 0102107 0076006 0102110 0000225 0024000 
@C2010: 0102111 0024000 0106072 0042115 0122112 0146073 0042114 0154017 
@C2020: 0042112 0122113 0146073 0042113 0154017 0066113 0126112 0042112 
@C2030: 0102114 0112074 0046033 0100000 0024000 0132115 0072014 0101430 
@C2040: 0024000 0075442 0074000 0122112 0114000 0072066 0122113 0114000 
@C2050: 0072060 0116071 0112070 0042113 0102112 0072064 0116071 0042112 
@C2060: 0106113 0042113 0102112 0075777 0132112 0076002 0106112 0075776 
@C2070: 0100000 0000001 0000012 0000012 0002075 0174000 0052000 0036000 
@C2100: 0016000 0026000 0046000 0066000 0056000 0006000 0154000 0032000 
@C2110: 0072000 0042000 0000000 0000000 0000000 0000000 0162000 0172000 
@S0040: comp_code
@S0400: a1
@S0401: 1a1
@S0402: 2a1
@S0403: 3a1
@S0410: 8a1
@S0412: 10a1
@S0413: 11a1
@S0414: 12a1
@S0416: 14a1
@S0426: 22a1
@S0427: 23a1
@S0431: 25a1
@S0440: 32a1
@S0442: 34a1
@S0444: 36a1
@S0445: 37a1
@S0446: 38a1
@S0447: 39a1
@S0450: 40a1
@S0453: 43a1
@S0454: 44a1
@S0455: a2
@S0457: 2a2
@S0461: 4a2
@S0465: 8a2
@S0471: 12a2
@S0472: 13a2
@S0473: 14a2
@S0477: 18a2
@S0501: a3
@S0502: 1a3
@S0505: 4a3
@S0520: 15a3
@S0522: 17a3
@S0526: 21a3
@S0532: 25a3
@S0540: 31a3
@S0542: 33a3
@S0550: 39a3
@S0554: 43a3
@S0556: 45a3
@S0560: 47a3
@S0564: 51a3
@S0566: 53a3
@S0567: 54a3
@S0570: 55a3
@S0574: 59a3
@S0577: 62a3
@S0601: a4
@S0601: 0a4
@S0602: 1a4
@S0605: 4a4
@S0606: 5a4
@S0607: 6a4
@S0614: 11a4
@S0615: 12a4
@S0617: 14a4
@S0623: 18a4
@S0625: 20a4
@S0626: 21a4
@S0627: 22a4
@S0631: 24a4
@S0637: 30a4
@S0641: 32a4
@S0642: 33a4
@S0645: 36a4
@S0647: 38a4
@S0651: 40a4
@S0653: 42a4
@S0655: 44a4
@S0656: 45a4
@S0663: 50a4
@S0664: 51a4
@S0665: 52a4
@S0667: 54a4
@S0670: 55a4
@S0673: 58a4
@S0675: 60a4
@S0677: 62a4
@S0701: a5
@S0703: 2a5
@S0710: 7a5
@S0716: 13a5
@S0720: 15a5
@S0724: a6
@S0727: 3a6
@S0734: 8a6
@S0735: 9a6
@S0736: 10a6
@S0741: 13a6
@S0745: 17a6
@S0746: 18a6
@S0747: 19a6
@S0752: 22a6
@S0754: 24a6
@S0755: 25a6
@S0756: a7
@S0760: 2a7
@S0762: 4a7
@S0764: a8
@S0773: 7a8
@S0774: 8a8
@S0775: 9a8
@S0776: 10a8
@S1003: 15a8
@S1004: 16a8
@S1005: 17a8
@S1006: 18a8
@S1007: a9
@S1013: 4a9
@S1014: 5a9
@S1020: 9a9
@S1021: 10a9
@S1025: 14a9
@S1030: 17a9
@S1031: 18a9
@S1042: 27a9
@S1043: 28a9
@S1051: a10
@S1051: 0a10
@S1054: 3a10
@S1056: 5a10
@S1061: 8a10
@S1062: 9a10
@S1063: 10a10
@S1065: 12a10
@S1067: 14a10
@S1076: 21a10
@S1100: 23a10
@S1105: 28a10
@S1117: 38a10
@S1121: 40a10
@S1122: 41a10
@S1123: 42a10
@S1131: 48a10
@S1133: 50a10
@S1135: 52a10
@S1136: 53a10
@S1141: 56a10
@S1142: 57a10
@S1143: 58a10
@S1144: 59a10
@S1145: 60a10
@S1146: 61a10
@S1147: 62a10
@S1150: 63a10
@S1155: 68a10
@S1162: 73a10
@S1167: a11
@S1174: 5a11
@S1202: 11a11
@S1205: 14a11
@S1207: 16a11
@S1211: 18a11
@S1212: a12
@S1216: 4a12
@S1223: 9a12
@S1232: 16a12
@S1242: 24a12
@S1243: 25a12
@S1247: 29a12
@S1252: 32a12
@S1253: 33a12
@S1256: 36a12
@S1260: a13
@S1264: 4a13
@S1265: 5a13
@S1271: 9a13
@S1272: 10a13
@S1276: 14a13
@S1277: 15a13
@S1305: 21a13
@S1313: 27a13
@S1315: 29a13
@S1320: 32a13
@S1321: 33a13
@S1322: 34a13
@S1325: 37a13
@S1330: 40a13
@S1331: 41a13
@S1333: a15
@S1334: 1a15
@S1336: 3a15
@S1343: 8a15
@S1344: 9a15
@S1346: 11a15
@S1351: 14a15
@S1353: 16a15
@S1356: a16
@S1370: 10a16
@S1371: 11a16
@S1372: 12a16
@S1373: a14
@S1406: float_print
@S1410: fpbrk
@S1414: fp_loop
@S1425: fp_rtn
@S1426: zero_char
@S1427: one_char
@S1430: newline
@S1431: fp_cntr
@S1432: fp_cntr_init
@S1433: max
@S1434: floathack
@S1440: fhrtn
@S1441: ac_save
@S1442: ax
@S1444: mra
@S1444: 2ax
@S1444: r02
@S1445: 3ax
@S1445: r03
@S1446: 4ax
@S1446: r04
@S1447: r05
@S1450: r06
@S1451: r07
@S1454: r10
@S1460: r14
@S1461: r15
@S1463: r17
@S1467: r21
@S1505: r35
@S1524: r50
@S1526: r52
@S1530: r54
@S1532: r56
@S1534: r58
@S1536: r60
@S1540: r62
@S1552: r72
@S1553: r73
@S1565: r83
@S1570: r86
@S1577: r93
@S1601: r95
@S1603: r97
@S1610: r102
@S1616: r108
@S1617: r109
@S1634: r122
@S1640: r126
@S1643: r129
@S1657: r141
@S1663: r145
@S1671: r151
@S1700: r158
@S1706: r164
@S1710: r166
@S1711: r167
@S1723: r177
@S1724: next_inst
@S1725: exec_inst
@S1737: r188
@S1740: r189
@S1742: r191
@S1747: dispatch
@S1750: r197
@S1750: sep_param
@S1751: r198
@S1751: tmp
@S1752: r199
@S1754: r201
@S1755: r202
@S1757: halt_if_zero
@S1765: hiz1
@S1766: hiz2
@S1767: hiz_rtn
@S1770: hiz_ac
@S1771: mfp
@S1776: 5mfp
@S1777: 6mfp
@S2002: 9mfp
@S2005: 12mfp
@S2006: 13mfp
@S2014: 17mfp
@S2033: 32mfp
@S2042: 37mfp
@S2043: 38mfp
@S2060: 51mfp
@S2064: 55mfp
@S2066: 57mfp
@S2070: 59mfp
@S2071: 60mfp
@S2072: ndigits
@S2072: 61mfp
@S2073: 62mfp
@S2074: 63mfp
@S2075: 64mfp
@S2107: plus_char
@S2107: 74mfp
@S2110: minus_char
@S2110: 75mfp
@S2111: dot_char
@S2112: 1tmfp
@S2113: 2tmfp
@S2114: 3tmfp
@S2115: digit_cntr
@S2115: 4tmfp
@S2116: upcase
@S2117: dncase
@S0000: do_print
@S0001: main_sep_param
@E1411: print: "LZ output: %fm", 0o001444
@E1773: print: "LZ output: %fm", 0o001444
@N0040:  |
@N0403:  (l.c. or u.c.) ; [LAS was ad (a3/1a3)]
@N0411:  -| Is symbol
@N0412:  -| a number?
@N0413:  ; [LAS was sp (38a4/58a4)]
@N0414:  31a3 is the normal mode ; [LAS was ca (33a3/31a3)]
@N0417:  (Is symbol a period?)
@N0421:  -| l.c. no. or exponent?
@N0422:  -|
@N0423:  -| set to interpret
@N0424:   | digit as an
@N0425:  -| exponent
@N0427:  --> if digit is zero ; [LAS hand-written note in listing crossed out 39r and put 40r, which makes more sense]
@N0430:  -|
@N0431:   | Form [?] (24,6) version
@N0432:   | of digit as an
@N0433:   | integer in (43r, 44r
@N0434:   |
@N0435:  -|
@N0436:  ;		  .print "digit read-in %fl", 43a1
@N0440:  (programmed arithmetic
@N0441:  (i.e., by 10) ; [LAS was "mr 497" -- transcription error]
@N0444:  (reset to 38r)
@N0446:  (counter for digits before decimal pt ; [LAS eliminated parens for opcode p or just data in this and following sections]
@N0447:  (  "      "    "    after     "    ")
@N0453:  -| Temporary storage for
@N0454:  -| integer during read-in
@N0455:  ; [LAS section offset was 0r]
@N0457:  -| store "sp to print
@N0460:  -| control"
@N0461:  -| read in
@N0462:   | "RINT"
@N0463:  -|
@N0465:  -| reset counter ; [LAS was "ca 15a3" -- transcription error]
@N0466:  -|
@N0471:  ; [LAS was (sp 8r/p 0)]
@N0472:  (counter)
@N0473:  -| part of SP routine
@N0474:   |
@N0475:   |
@N0476:  -|
@N0477:  -| START
@N0500:  -|	   ; [LAS was sp 32] [LAS was sp a1, changed to go to start of compiled code]
@N0501:  |
@N0503:  e
@N0504:  8
@N0506:  | ; [LAS was blank][Hard to read but looking up flex code it's vertical-bar]
@N0507:  a
@N0510:  3
@N0511:  space
@N0512:  =
@N0513:  s
@N0514:  4
@N0515:  i
@N0516:  +
@N0517:  u
@N0520:  2
@N0521:  shift ribbon ; [LAS was blank]
@N0522:  . [period] ; [LAS was "(p 0/sp 8a2)"]
@N0523:  d
@N0524:  5
@N0525:  r ; [LAS was .word 50a4. Transcription error.]
@N0526:  1
@N0527:  j
@N0530:  7
@N0531:  n
@N0532:  ,
@N0533:  f
@N0534:  6
@N0535:  c
@N0536:  -
@N0537:  k
@N0541:  t
@N0543:  z
@N0544:  back space
@N0545:  l
@N0546:  tabulate
@N0547:  w
@N0551:  h
@N0552:  carr. return
@N0553:  y
@N0555:  p
@N0557:  q
@N0561:  o (letter)
@N0562:  stop
@N0563:  b
@N0565:  g
@N0567:  9
@N0571:  m
@N0572:  shift to u.c.
@N0573:  x
@N0575:  v
@N0576:  shift to l.c.
@N0577:  0 (zero)
@N0600:  nullify
@N0601:  |
@N0603:  E (not used)
@N0604:  8 (exp.)
@N0606:  _ ; [LAS Did say + not _ and 0,22000 but looks like hand-written sheet is as shown here now. Transcription error.]
@N0607:  A (not used)
@N0610:  3 (exp.)
@N0611:  space
@N0612:  . ['dot', not period] (see note)
@N0613:  S
@N0614:  4 (exp.)
@N0615:  I (not used)
@N0616:  /
@N0617:  U (not used)
@N0620:  2 (exp.)
@N0621:  shift ribbon ; [LAS was blank]
@N0622:  )
@N0623:  D (not used)
@N0624:  5 (exp.)
@N0625:  R (not used)
@N0626:  1 (exp.)
@N0627:  J (not used)
@N0630:  7 (exp.)
@N0631:  N (not used) ; [LAS was (cs 2ax/ca 2ax)]
@N0632:  (
@N0633:  F ; [LAS was blank]
@N0634:  6 (exp.)
@N0635:  C
@N0636:  - (exp.)
@N0637:  K (not used)
@N0641:  T (not used)
@N0643:  Z (not used)
@N0644:  back space
@N0645:  L (not used)
@N0646:  tabulate
@N0647:  W (not used)
@N0651:  H (not used)
@N0652:  carr. return
@N0653:  Y (not used)
@N0655:  P ; [LAS was (sp a2/sp 2a2)]
@N0657:  Q (not used)
@N0661:  O (letter) (not used)  ; [LAS was 23a1. Transcription error.]
@N0662:  stop
@N0663:  B (not used) ; [LAS was (55a3)]
@N0664:  ; [LAS was sp (28a10/33r) -- had it at 28a10 but seems wrong so changed it]
@N0665:  G (not used)
@N0667:  9 (exp.)
@N0671:  M (not used)
@N0672:  shift to u.c.
@N0673:  X (not used)
@N0674:  ; [LAS was td 10a1.  Transcription error -- cross-out in hand-listing]
@N0675:  V (not used)
@N0676:  shift to l.c.
@N0677:  0 (zero exp.)
@N0700:  nullify
@N0701:  |
@N0705:  (select new address k)
@N0707:  (= sp 852) -| store number
@N0710:              | in (k, k+1)
@N0711:             -|
@N0712:  -| form symbol mr k
@N0713:   | or dv k, where
@N0714:   | k is address at
@N0715:   | which number has
@N0716:   | just been stored
@N0717:  -|
@N0721:  (divide by 10)
@N0724:  -| store "sp exp" in
@N0725:   | place of last-stored
@N0726:   | symbol (mr x or dv x)
@N0727:  -|
@N0730:  -|
@N0731:   | store "+x"
@N0732:  -|
@N0733:  -| compute and store the
@N0734:  -| exponent +-n
@N0735:  -|
@N0736:   | reset MRA
@N0737:   | and various
@N0740:   | counters
@N0741:   |
@N0742:   |
@N0743:   |
@N0744:  -|
@N0745:  ; [LAS was sp (38a4/14a9)]
@N0746:  "sp exp"
@N0747:  ; [LAS was td 25a6. Transcription error.]
@N0750:  -|
@N0751:   | Form +-n, where
@N0752:   | n is in MRA in ; [LAS was (ca 2ax/cs 2ax)]
@N0753:   | (24,6) form ; [LAS was sr*]
@N0754:  -|
@N0756:  -| 0 ; [LAS added p to this section]
@N0757:  -|
@N0760:  -| 1
@N0761:  -|
@N0762:  -| 10
@N0763:  -|
@N0764:  -| Select new
@N0765:   | address for
@N0766:   | storage of
@N0767:   | numerical
@N0770:   | quantity
@N0771:   |
@N0772:   |
@N0773:   |
@N0774:  -| (last address used) ; [LAS was just "+197", no op or pseudo-op]
@N0775:  -|
@N0776:   | Store C(AC) in ; [LAS was ts 32. Replaced with comp_code. Note this inst gets ao'ed]
@N0777:   | next available
@N1000:   | program address.
@N1001:   |
@N1002:   |
@N1003:   |
@N1004:   |
@N1005:   |
@N1006:  -| (last occupied program address) ; [LAS was "(p 31)"] [LAS was .word 31. Replaced with comp_code - 1]
@N1007:  (divide)
@N1013:  (the 14a10 mode is never used) ; [LAS was sp (2a1/14a10)]
@N1021:  (upper case minus)
@N1031:  (reset dv and exp to normal)
@N1043:  (reset dv and exp to non-normal)
@N1051:  |
@N1063:  (equals)
@N1067:  (comma)
@N1102:  ; [LAS was td 51a4. Transcription error.]
@N1104:  ; [LAS was sp (2a1/49r)]
@N1113:  | a10 (continued)
@N1121:  (SP)
@N1124:  ; 	  .print "xxxxx 3 rd %ao"
@N1125:  (provision for future SR, CR instructions)
@N1127:  (START)
@N1133:  (CP)
@N1141:  ; [LAS was (sp a14/cp a14)]
@N1143:  ; [LAS added p to this section]
@N1150:  -| storage for addresses used by
@N1151:   | parenthesis routines in forming
@N1152:   | and storing sp orders
@N1153:   |
@N1154:   | ; [These are notated on the coding sheet as: ]
@N1155:   | ; [   63-67  +0                              ]
@N1156:   | ; [   68-72  +0                              ]
@N1157:   | ; [   73-77  +0                              ]
@N1160:   |
@N1161:   |
@N1162:   |
@N1163:   |
@N1164:   |
@N1165:   |
@N1166:  -|
@N1167:  (store dummy symbol)
@N1174:  ; [LAS was "td (73a10)"]
@N1211:  ; [LAS added p]
@N1212:  |
@N1252:  | a12 (continued)
@N1260:  equals
@N1265:  plus
@N1270:  ; [LAS was ca 207. Transcription error.]
@N1272:  minus
@N1277:  exponent
@N1312:  ; [LAS The notes at the end say 210 is dv 0]
@N1322:  ; [LAS was (mr (-)/dv (-))]
@N1330:     -|n| counter ; [LAS added p to this section]
@N1331:  -| temporary sum storage for arithmetic
@N1332:  -|
@N1333:  -| plant address of 1st
@N1334:  -| character to be printed
@N1341:  -| If next symbol is an sp order carry it out.
@N1342:   | Since symbols to be printed are stored as
@N1343:  -| "mr x,mr y," etc. the "mr" actuates this xxx [?]
@N1344:  -|
@N1345:   | form and print first letter
@N1346:  -|
@N1350:  (0.22000 - "=")
@N1353:                 -| print number
@N1354: 		  sp float_print       ; (24,6) print    |          ; [LAS Was sp 222. We don't have the original print routine]
@N1355:    routine      -|
@N1356:  | a16 (used in a2)
@N1357:  -| set , to sp 2a1 and reset  ; [LAS was ca 409. Transcription error.]
@N1360:   |
@N1361:  -|
@N1362:  -| set P to sp 2a2 (and reset)
@N1363:   |
@N1364:  -|
@N1365:  -| set . to sp 8a2 (and reset)
@N1366:   |
@N1367:  -|
@N1372:  ; [LAS was (sp 2a2/sp a2)]
@N1373:  | a14
@N1406:   printer found in Subroutines.pdf, OT 103.10t, pdf page 22.]
@N1407:  Come out of spax and resume std ww operations
@N1410:  Nop for setting breakpoint
@N1411:  Use internal op until we get "real" printer to work
@N1424:  Return control to the calling spax
@N1425:  Return to caller (interpreted)
@N1433:  Note we don't set .org since this file can be included in others
@N1437:  ad 42                  ; Add in the answer
@N1442:  Set address of 1st instruction to be interpreted ; from Enter
@N1444:  x1  -|
@N1445:  x1'  |- Multiple register accumulator
@N1446:  y1  -|
@N1447:  "ca"                                             ; from 196r-->
@N1451:  "cs"                                             ; from l3r,196r
@N1453:  "ad"                                             ; from 196r-->
@N1455:  "su"                                             ; from 196r-->
@N1457:  "cm"                                             ; from 196r-->
@N1460:   Temporary digits storage                        ; (170r)
@N1461:  -|- Add two minor products                       ; from 24r
@N1462:  -|
@N1463:  -|- Store overflow
@N1464:  -|
@N1465:  Form major product
@N1467:  "mr" Form two                                    ; from 49r9,196r
@N1470:  minor products
@N1473:  "dv"                                             ; from 196r-->
@N1475:  -|
@N1476:   |- Form exponent of 2**-2/x2
@N1477:  -|
@N1500:  -|
@N1501:   |
@N1502:   |- Form and store -(2**-2 * x2')/x2**2
@N1503:   |
@N1504:   |
@N1505:   |
@N1506:  -|                                               ; [LAS was transcription error ta r151]
@N1507:  -|                                               ; [LAS this sequence does not seem to store this formula, instead stores 2**-2/x2]
@N1510:   |- Form and store 2**-2/x2**2
@N1511:   |
@N1512:  -|
@N1513:  -|
@N1514:   |
@N1515:   |
@N1516:   |- Form (2**-2/x**2)' (Use Euclid's algorithm)  ; [LAS Looks like this should say (2**-2/x2)' -- Uses remainder arith, hence the Euclid ref]
@N1517:   |
@N1520:   |
@N1521:  -|
@N1522:  -|- Add two minor parts of reciprocal
@N1523:  -|
@N1525:  "ts"
@N1526:  -|- complement x1
@N1527:  -|
@N1531:  "ta" -|                                          ; from 196r-->
@N1532:        |- Store digits in indicated address
@N1533:       -|
@N1534:  -|- Increase xl by by 2**-15                     ; from 119r-->
@N1535:  -|
@N1537:  "ex"                                             ; from 196r-->
@N1541:  "cp" -|- Is x1 negative?                         ; from 196r-->
@N1542:       -|                                          ; [LAS was transcription error r188]
@N1543:  "sp" -|- Set Return address for sp ax            ; from 196r
@N1544:       -|
@N1545:  -|- Set pick up order for ordinary cp & sp       ; LAST DIGIT is a GUESS! [LAS not legible -- needed to dig into program to nail this down]
@N1546:  -|
@N1547:                                                   ; PROBABLY an SU op code!
@N1550:  -|- Test to see whether instruction is sp ax
@N1551:  -|
@N1552:                                                   ; [LAS ]
@N1553:  -|                                               ; from 51r,61r->
@N1554:   |- Round off x1' and store x1' * 2**-6
@N1555:  -|
@N1556:  -|
@N1557:   |- Add round-off carry into x1
@N1560:  -|
@N1561:  -|
@N1562:   |- Is there an overflow?
@N1563:   |
@N1564:  -|
@N1565:  -|                                               ; from  80r->
@N1566:   |- Add overflow into x1 and x1'. Increase y1
@N1567:  -|
@N1570:  -|                                               ; from  82r->
@N1571:   |- |y1| - 63 > 0?
@N1572:  -|                                               ; [LAS was transcription error sp r93]
@N1573:  -|- y <= 0? (i.e.  y1 < -63?)
@N1574:  -|
@N1575:  -|- Set y1 = -63
@N1576:  -|
@N1577:  -|- ts n + k or ex n + k                         ; from 88r->
@N1600:  -|
@N1601:  Store ts, ex, ca, cs or cm n+k                   ; from 8r->
@N1603:  -|                                               ; from (180r)
@N1604:   |
@N1605:   |
@N1606:   |
@N1607:   |
@N1610:   |                                               ; (95r)
@N1611:   |- Perform ts, ex, ca, cs or cm
@N1612:   |
@N1613:   |
@N1614:   |
@N1615:   |
@N1616:  -|
@N1617:  -|                                               ;  166r->
@N1620:   |- x1 != 0?
@N1621:  -|
@N1622:  -|
@N1623:   |- x1' != 0?
@N1624:  -|
@N1625:  -|
@N1626:   |- Form |x1'| - 1                               ; PROBABLY AD op code
@N1627:  -|
@N1630:  -|- x1 > 0?
@N1631:  -|
@N1632:  -|- Form x1 - 2**-15
@N1633:  -|
@N1634:  -|- Complement x1'                               ; [LAS was transcription error ca r03]             ;   114r->
@N1635:  -|
@N1636:  -|- Form x1*x1'
@N1637:  -|
@N1640:  -|                                               ; 12r->
@N1641:   |- Complement x2, x2'
@N1642:  -|
@N1643:  -|                                               ; r9 ->
@N1644:   |- Form and store  y2 - yl
@N1645:  -|
@N1646:  y2 - y1 > 0?
@N1647:  -|
@N1650:   |
@N1651:   |
@N1652:   |- Interchange (x1, x1', y1) and (x2, x2', y2)
@N1653:   |
@N1654:   |
@N1655:   |
@N1656:  -|
@N1657:  -|                                               ; 132r->
@N1660:   |-  |y2 - y1| - 29 > 0?
@N1661:  -|
@N1662:  No need for addition
@N1663:  -|- Store  sr *1 +|y2 - y1|                      ; 143r->
@N1664:  -|
@N1665:  -|- Set y2 = l
@N1666:  -|
@N1667:  -|
@N1670:   |
@N1671:   |- Form and store                               ; (146r)
@N1672:   |  (x2 + x2' * 2**-15) * 2**(-1 - |y2 - y1|)
@N1673:   |
@N1674:  -|
@N1675:  -|
@N1676:   |-    Form (x1 + x1' * 2**-15) * 2**-l
@N1677:  -|
@N1700:  Store x1                                         ;  20r->
@N1701:  -|
@N1702:   |                                               ; [LAS was transcription error ts r03]
@N1703:   |- Add x1, x1' and x2, x2'
@N1704:   |
@N1705:   |
@N1706:  -|                                               ; 53r->
@N1707:  Does sign x1 = sign x1'?
@N1710:                                                   ;  125r->
@N1711:  -|                                               ; 59r->
@N1712:   |
@N1713:   |
@N1714:   |- Scale factor and store x1, x1'
@N1715:   |                                               ; [LAS was transcription error ta r02]
@N1716:   |
@N1717:  -|                                               ; [LAS was transcription error ta r03]
@N1720:  -|
@N1721:   |- Form exponent
@N1722:   |
@N1723:  -|                                               ; 108r->
@N1724:  increase address                                 ; [LAS was transcription error ao r197]
@N1725:  Pick up next instruction
@N1727:  -|
@N1730:   |
@N1731:   |- Store instruction and digits
@N1732:   |
@N1733:  -|
@N1734:  -|
@N1735:   |- Form sp to address for particular instruction
@N1736:   |
@N1737:  -|
@N1740:  -|                                               ; (182r)
@N1741:   |
@N1742:   |                                               ; (181r)
@N1743:   |- Pick up x2, x2' and y2. Store x2 in reg. 198, y2 in reg 102. Hold x2' in AC
@N1744:   |
@N1745:   |
@N1746:  -|
@N1747:  Go to part of I.S. for particular instruction    ; (188r)
@N1750:  Separation parameter                             ; [LAS There is a note in Subroutines.pdf pdf-page 25 that says r197 is "pax2"
@N1751:  Temporary storage
@N1752:                                                   ; from 70r-->
@N1753:  Does address equal ax?
@N1754:  Return to register following sp ax               ; (66r)
@N1755:  -|- Produce overflow alarm                       ; from 90r
@N1756:  -|
@N1757:   the illegible hand-written notes address it.]
@N1761:  Nice zero-checking idiom from the frac printer. Ah, one's-complement!
@N1765:  After all that, we interpret an si 0 as an si 0
@N1771:  mfp == modern frac print
@N1772:  Resume ordinary ww operation
@N1773:  -|
@N1774:   |- Store C(mra) in 1tmfp and 2tmfp
@N1775:   |
@N1776:  -|
@N1777:  Do 1tmfp and 2tmfp agree in sign?
@N2001:  -|
@N2002:   |
@N2003:   |
@N2004:   |- Sense and print algebraic sign of C(mra) followed by a decimal point
@N2005:   |
@N2006:   |
@N2007:   |
@N2010:   |
@N2011:  -|
@N2012:  -|- Set up digit counter
@N2013:  -|
@N2014:  -|
@N2015:   |
@N2016:   |
@N2017:   |
@N2020:   |- Multiply C(1tmfp,2tmfp) by p10
@N2021:   |
@N2022:   |
@N2023:   |
@N2024:   |
@N2025:   |
@N2026:   |
@N2027:  -|
@N2030:  -|
@N2031:   |- Set up entry into table
@N2032:  -|
@N2033:  -|- Print a single digit
@N2034:  -|
@N2035:  -|- Have enough digits been printed?
@N2036:  -|
@N2037: ; LAS The description says no cr, but there does not seem to be one emitted at any level
@N2041:  -|- Return control to int. subroutine
@N2042:  -|
@N2043:  -|
@N2044:   |- Is C(1tmfp) != 0?
@N2045:  -|
@N2046:  -|
@N2047:   |- Is C(2tmfp) != 0?
@N2050:  -|
@N2051:  -|
@N2052:   |- Form 1 - |C(2tmfp)|
@N2053:  -|
@N2054:  -|- Is C(1tmfp) pos.?
@N2055:  -|
@N2056:  -|- Form C(1tmfp) - 2^-15
@N2057:  -|
@N2060:  -|- Complement C(2tmfp)
@N2061:  -|
@N2062:  -|- Re-enter sign agreement
@N2063:  -|
@N2070:                                                   ; [59-73 are notated in Subroutines.pdf with no spaces, e.g., ca0, p1]
@N2072:  v2                                               ; [was just n1a2 -- need to track down this notation]
@N2074:  ,                                                ; [I think comma? Might just be a blemish]
@N2075:  Digit table
