                                    ; LAS 1/27/25. This file produced using wwlzparser from
                                    ; L-and-Z-Transcript-With-Repairs-Tab.txt. See ./runtest.sh.
                                    ; L-and-Z-Transcript-With-Repairs-Tab.txt in turn is a
                                    ; set of hand-corrections to L-and-Z-Transcript-Tab.txt. These files
                                    ; are now both read-only. l-and-z.ww will henceforth contain all changes.

                                    ; Below, lines beginning with " ; |" are comments from the original
                                    ; text (with bracketed modern notes from the transcription. Similarly,
                                    ; comments in the first comment field following an instruction are
                                    ; from the original text. Subsequent comment fields are modern notes.

                                    ; | [Transcribed by Larry Stabile, 10/13/24]
                                    ; | [Transcription notes and questions in square brackets]
                                    ; | [Meaning of double-bars?]
                                    ; | [Did not transcribe "light-colored" text]
                                    ; |
                                    ; | Instrumentation Laboratory
                                    ; | Massachusetts Institute of Technology
                                    ; | Cambridge, Mass.
                                    ; | Prepared by: J.H Laning Jr.
                                    ; | Date: 3/53
                                    ; | (Tape T-2134-m8 plus correction tape P-2134-10)
                                    ; |
                                    ; | Sheet 1/20
                                    ; | a1 (Read-in)
                                    ; |
                                    .jumpto lz_begin
                                    .org 0o40
@0040:000000             comp_code: .words 0o1000 - comp_code, 0
@0041:000000
@0042:000000
@0043:000000
@0044:000000
@0045:000000
@0046:000000
@0047:000000
@0050:000000
@0051:000000
@0052:000000
@0053:000000
@0054:000000
@0055:000000
@0056:000000
@0057:000000
@0060:000000
@0061:000000
@0062:000000
@0063:000000
@0064:000000
@0065:000000
@0066:000000
@0067:000000
@0070:000000
@0071:000000
@0072:000000
@0073:000000
@0074:000000
@0075:000000
@0076:000000
@0077:000000
@0100:000000
@0101:000000
@0102:000000
@0103:000000
@0104:000000
@0105:000000
@0106:000000
@0107:000000
@0110:000000
@0111:000000
@0112:000000
@0113:000000
@0114:000000
@0115:000000
@0116:000000
@0117:000000
@0120:000000
@0121:000000
@0122:000000
@0123:000000
@0124:000000
@0125:000000
@0126:000000
@0127:000000
@0130:000000
@0131:000000
@0132:000000
@0133:000000
@0134:000000
@0135:000000
@0136:000000
@0137:000000
@0140:000000
@0141:000000
@0142:000000
@0143:000000
@0144:000000
@0145:000000
@0146:000000
@0147:000000
@0150:000000
@0151:000000
@0152:000000
@0153:000000
@0154:000000
@0155:000000
@0156:000000
@0157:000000
@0160:000000
@0161:000000
@0162:000000
@0163:000000
@0164:000000
@0165:000000
@0166:000000
@0167:000000
@0170:000000
@0171:000000
@0172:000000
@0173:000000
@0174:000000
@0175:000000
@0176:000000
@0177:000000
@0200:000000
@0201:000000
@0202:000000
@0203:000000
@0204:000000
@0205:000000
@0206:000000
@0207:000000
@0210:000000
@0211:000000
@0212:000000
@0213:000000
@0214:000000
@0215:000000
@0216:000000
@0217:000000
@0220:000000
@0221:000000
@0222:000000
@0223:000000
@0224:000000
@0225:000000
@0226:000000
@0227:000000
@0230:000000
@0231:000000
@0232:000000
@0233:000000
@0234:000000
@0235:000000
@0236:000000
@0237:000000
@0240:000000
@0241:000000
@0242:000000
@0243:000000
@0244:000000
@0245:000000
@0246:000000
@0247:000000
@0250:000000
@0251:000000
@0252:000000
@0253:000000
@0254:000000
@0255:000000
@0256:000000
@0257:000000
@0260:000000
@0261:000000
@0262:000000
@0263:000000
@0264:000000
@0265:000000
@0266:000000
@0267:000000
@0270:000000
@0271:000000
@0272:000000
@0273:000000
@0274:000000
@0275:000000
@0276:000000
@0277:000000
@0300:000000
@0301:000000
@0302:000000
@0303:000000
@0304:000000
@0305:000000
@0306:000000
@0307:000000
@0310:000000
@0311:000000
@0312:000000
@0313:000000
@0314:000000
@0315:000000
@0316:000000
@0317:000000
@0320:000000
@0321:000000
@0322:000000
@0323:000000
@0324:000000
@0325:000000
@0326:000000
@0327:000000
@0330:000000
@0331:000000
@0332:000000
@0333:000000
@0334:000000
@0335:000000
@0336:000000
@0337:000000
@0340:000000
@0341:000000
@0342:000000
@0343:000000
@0344:000000
@0345:000000
@0346:000000
@0347:000000
@0350:000000
@0351:000000
@0352:000000
@0353:000000
@0354:000000
@0355:000000
@0356:000000
@0357:000000
@0360:000000
@0361:000000
@0362:000000
@0363:000000
@0364:000000
@0365:000000
@0366:000000
@0367:000000
@0370:000000
@0371:000000
@0372:000000
@0373:000000
@0374:000000
@0375:000000
@0376:000000
@0377:000000
@0400:000000
@0401:000000
@0402:000000
@0403:000000
@0404:000000
@0405:000000
@0406:000000
@0407:000000
@0410:000000
@0411:000000
@0412:000000
@0413:000000
@0414:000000
@0415:000000
@0416:000000
@0417:000000
@0420:000000
@0421:000000
@0422:000000
@0423:000000
@0424:000000
@0425:000000
@0426:000000
@0427:000000
@0430:000000
@0431:000000
@0432:000000
@0433:000000
@0434:000000
@0435:000000
@0436:000000
@0437:000000
@0440:000000
@0441:000000
@0442:000000
@0443:000000
@0444:000000
@0445:000000
@0446:000000
@0447:000000
@0450:000000
@0451:000000
@0452:000000
@0453:000000
@0454:000000
@0455:000000
@0456:000000
@0457:000000
@0460:000000
@0461:000000
@0462:000000
@0463:000000
@0464:000000
@0465:000000
@0466:000000
@0467:000000
@0470:000000
@0471:000000
@0472:000000
@0473:000000
@0474:000000
@0475:000000
@0476:000000
@0477:000000
@0500:000000
@0501:000000
@0502:000000
@0503:000000
@0504:000000
@0505:000000
@0506:000000
@0507:000000
@0510:000000
@0511:000000
@0512:000000
@0513:000000
@0514:000000
@0515:000000
@0516:000000
@0517:000000
@0520:000000
@0521:000000
@0522:000000
@0523:000000
@0524:000000
@0525:000000
@0526:000000
@0527:000000
@0530:000000
@0531:000000
@0532:000000
@0533:000000
@0534:000000
@0535:000000
@0536:000000
@0537:000000
@0540:000000
@0541:000000
@0542:000000
@0543:000000
@0544:000000
@0545:000000
@0546:000000
@0547:000000
@0550:000000
@0551:000000
@0552:000000
@0553:000000
@0554:000000
@0555:000000
@0556:000000
@0557:000000
@0560:000000
@0561:000000
@0562:000000
@0563:000000
@0564:000000
@0565:000000
@0566:000000
@0567:000000
@0570:000000
@0571:000000
@0572:000000
@0573:000000
@0574:000000
@0575:000000
@0576:000000
@0577:000000
@0600:000000
@0601:000000
@0602:000000
@0603:000000
@0604:000000
@0605:000000
@0606:000000
@0607:000000
@0610:000000
@0611:000000
@0612:000000
@0613:000000
@0614:000000
@0615:000000
@0616:000000
@0617:000000
@0620:000000
@0621:000000
@0622:000000
@0623:000000
@0624:000000
@0625:000000
@0626:000000
@0627:000000
@0630:000000
@0631:000000
@0632:000000
@0633:000000
@0634:000000
@0635:000000
@0636:000000
@0637:000000
@0640:000000
@0641:000000
@0642:000000
@0643:000000
@0644:000000
@0645:000000
@0646:000000
@0647:000000
@0650:000000
@0651:000000
@0652:000000
@0653:000000
@0654:000000
@0655:000000
@0656:000000
@0657:000000
@0660:000000
@0661:000000
@0662:000000
@0663:000000
@0664:000000
@0665:000000
@0666:000000
@0667:000000
@0670:000000
@0671:000000
@0672:000000
@0673:000000
@0674:000000
@0675:000000
@0676:000000
@0677:000000
@0700:000000
@0701:000000
@0702:000000
@0703:000000
@0704:000000
@0705:000000
@0706:000000
@0707:000000
@0710:000000
@0711:000000
@0712:000000
@0713:000000
@0714:000000
@0715:000000
@0716:000000
@0717:000000
@0720:000000
@0721:000000
@0722:000000
@0723:000000
@0724:000000
@0725:000000
@0726:000000
@0727:000000
@0730:000000
@0731:000000
@0732:000000
@0733:000000
@0734:000000
@0735:000000
@0736:000000
@0737:000000
@0740:000000
@0741:000000
@0742:000000
@0743:000000
@0744:000000
@0745:000000
@0746:000000
@0747:000000
@0750:000000
@0751:000000
@0752:000000
@0753:000000
@0754:000000
@0755:000000
@0756:000000
@0757:000000
@0760:000000
@0761:000000
@0762:000000
@0763:000000
@0764:000000
@0765:000000
@0766:000000
@0767:000000
@0770:000000
@0771:000000
@0772:000000
@0773:000000
@0774:000000
@0775:000000
@0776:000000
@0777:000000

                                    .org 0o1000
                          val_temp:                          ; [LAS temp values start here and groq down. This is the "197" allocation point

@1000:076763              lz_begin: sp print_prog            ;                                                  ; [LAS Added this call so we get the program and the results printed on the flex]
@1001:075002                        sp a1

                                    ; [LAS Define some vars for the first few value-temp locs, for debugger]
                                    .pp val_1, val_temp - 2
                                    .pp val_2, val_1 - 2
                                    .pp val_3, val_2 - 2
                                    .pp val_4, val_3 - 2
                                    .pp val_5, val_4 - 2
                                    .pp val_6, val_5 - 2
                                    .pp val_7, val_6 - 2
                                    .pp val_8, val_7 - 2
                                    .pp val_9, val_8 - 2

                                    ; [LAS This is the original entry point]
                                a1:
                                    ; [LAS -- the original said si 128, which selects the
                                    ; mechanical paper tape reader. Changed to support our
                                    ; "rewindable" photoeletric tape reader. The simulator
                                    ; uses the same (python) code to support both readers.]

@1002:001004                        si 0o1004                ;                                                  ; PETR A, rewind

@1003:131046                   1a1: ao 36a1
@1004:015004                   2a1: rd 2a1
                                    ;                        ;                                                  ; .print "xxxxx 1 rd %ao"
@1005:111103                   3a1: ad a3                    ; (l.c. or u.c.)                                   ; [LAS was ad (a3/1a3)]
@1006:045012                        td 8a1
@1007:045253                        td 40a4
@1010:045020                        td 14a1
@1011:045030                        td 22a1
@1012:100000                   8a1: ca 0
@1013:115107                        su 4a3                   ; -| Is symbol
@1014:071016                  10a1: cp 12a1                  ; -| a number?
@1015:075251                  11a1: sp 38a4                  ;                                                  ; [LAS was sp (38a4/58a4)]
@1016:101142                  12a1: ca 31a3                  ; 31a3 is the normal mode                          ; [LAS was ca (33a3/31a3)]
@1017:045015                        td 11a1
@1020:100000                  14a1: ca 0
@1021:114000                        su 0                     ; (Is symbol a period?)
@1022:071003                        cp 1a1
@1023:115171                        su 54a3                  ; -| l.c. no. or exponent?
@1024:071260                        cp 45a4                  ; -|
@1025:101156                        ca 43a3                  ; -| set to interpret
@1026:045277                        td 60a4                  ;  | digit as an
@1027:105301                        cs 62a4                  ; -| exponent
@1030:110000                  22a1: ad 0
@1031:071052                  23a1: cp 40a1                  ; --> if digit is zero                             ; [LAS hand-written note in listing crossed out 39r and put 40r, which makes more sense]
@1032:165166                        sf 51a3                  ; -|
@1033:041055                  25a1: ts 43a1                  ;  | Form (24,6) version
@1034:101216                        ca 11a4                  ;  | of digit as an
@1035:115166                        su 51a3                  ;  | integer in (43r, 44r
@1036:154011                        slr 9                    ;  |
@1037:041056                        ts 44a1                  ; -|
                                    ;                        ;                                                  ;.print "digit read-in %fl", 43a1
@1040:101033                        ca 25a1
@1041:045044                        td 34a1
                                    ; | Sheet 2/20
                                    ; | a1

@1042:076410                  32a1: sp ax                    ; (programmed arithmetic
@1043:141364                        mr 4a7                   ; (i.e., by 10)                                    ; [LAS was "mr 497" -- transcription error]
@1044:110000                  34a1: ad 0
@1045:076410                        sp ax
@1046:131047                  36a1: ao 37a1                  ; (reset to 38r)
@1047:075004                  37a1: sp 2a1
@1050:000000                  38a1: .word 0                  ; (counter for digits before decimal pt            ; [LAS eliminated parens for opcode p or just data in this and following sections]
@1051:000000                  39a1: .word 0                  ; (  "      "    "    after     "    ")
@1052:101340                  40a1: ca 10a6
@1053:045044                        td 34a1
@1054:075042                        sp 32a1
@1055:000000                  43a1: .word 0                  ; -| Temporary storage for
@1056:000000                  44a1: .word 0                  ; -| integer during read-in
                                    ; |
                                    ; | Sheet 3/20
                                    ; | a2 (PRINT)
                                    ; |
                                a2:
@1057:075765                        sp a16                   ;                                                  ; [LAS section offset was 0r]
@1060:075507                        sp 28a10
@1061:102000                   2a2: ca 11a16                 ; -| store "sp to print
@1062:075377                        sp 9a8                   ; -| control"
@1063:015063                   4a2: rd 4a2                   ; -| read in
                                    ;                        ;                                                  ; .print "xxxxx 2 rd %ao"
@1064:131074                        ao 13a2                  ;  | "RINT"
@1065:071063                        cp 4a2                   ; -|
@1066:075004                        sp 2a1
@1067:105122                   8a2: cs 15a3                  ; -| reset counter                                 ; [LAS was "ca 15a3" -- transcription error]
@1070:041074                        ts 13a2                  ; -|
@1071:075765                        sp a16
@1072:075502                        sp 23a10
@1073:075067                  12a2: sp 8a2                   ;                                                  ; [LAS was (sp 8r/p 0)]
@1074:177774                  13a2: .word -3                 ; (counter)
@1075:131134                  14a2: ao 25a3                  ; -| part of SP routine
@1076:075351                        sp 19a6                  ;  |
@1077:111543                        ad 56a10                 ;  |
@1100:075336                        sp 8a6                   ; -|
@1101:076410                  18a2: sp ax                    ; -| START
@1102:074040                        sp comp_code             ; -|                                               ; [LAS was sp 32] [LAS was sp a1, changed to go to start of compiled code]
                                    ; |
                                    ; | Sheet 4/20
                                    ; | a3 (Lower case symbols)
                                    ; |
                                a3:
@1103:001103                        .word a3
@1104:001203                   1a3: .word a4
@1105:075265                 var_e: sp 50a4                  ; e
@1106:000011                        .word 9                  ; 8
@1107:074000                   4a3: sp 0
@1110:000000                        .word 0                  ; |                                                ; [LAS was blank][Hard to read but looking up flex code it's vertical-bar]
@1111:075265                 var_a: sp 50a4                  ; a
@1112:000004                        .word 4                  ; 3
@1113:075004                        sp 2a1                   ; space
@1114:075465                        sp 10a10                 ; =
@1115:075265                 var_s: sp 50a4                  ; s
@1116:000005                        .word 5                  ; 4
@1117:075265                        sp 50a4                  ; i
@1120:075267                        sp 52a4                  ; +
@1121:075265                 var_u: sp 50a4                  ; u
@1122:000003                  15a3: .word 3                  ; 2
@1123:000000                        .word 0                  ; shift ribbon                                     ; [LAS was blank]
@1124:000000                  17a3: .word 0                  ; . [period]                                       ; [LAS was "(p 0/sp 8a2)"]
@1125:075265                 var_d: sp 50a4                  ; d
@1126:000006                        .word 6                  ; 5
@1127:075265                 var_r: sp 50a4                  ; r                                                ; [LAS was .word 50a4. Transcription error.]
@1130:000002                  21a3: .word 2                  ; 1
@1131:075265                 var_j: sp 50a4                  ; j
@1132:000010                        .word 8                  ; 7
@1133:075265                 var_n: sp 50a4                  ; n
@1134:075471                  25a3: sp 14a10                 ; ,
@1135:075265                 var_f: sp 50a4                  ; f
@1136:000007                        .word 7                  ; 6
@1137:075265                 var_c: sp 50a4                  ; c
@1140:075272                        sp 55a4                  ; -
@1141:075265                 var_k: sp 50a4                  ; k
@1142:001275                  31a3: .word 58a4
@1143:075265                 var_t: sp 50a4                  ; t
@1144:001251                  33a3: .word 38a4
                                    ; | Sheet 5/20
                                    ; | a3 (continued)
@1145:075265                 var_z: sp 50a4                  ; z
@1146:075004                        sp 2a1                   ; back space
@1147:075265                 var_l: sp 50a4                  ; l
@1150:075004                        sp 2a1                   ; tabulate
@1151:075265                 var_w: sp 50a4                  ; w
@1152:001303                  39a3: .word a5
@1153:075265                 var_h: sp 50a4                  ; h
@1154:075004                        sp 2a1                   ; carr. return
@1155:075265                 var_y: sp 50a4                  ; y
@1156:001326                  43a3: .word a6
@1157:075265                 var_p: sp 50a4                  ; p
@1160:106412                  45a3: cs 2ax
@1161:075265                 var_q: sp 50a4                  ; q
@1162:040000                  47a3: ts 0
@1163:075265                 var_o: sp 50a4                  ; o (letter)
@1164:075004                        sp 2a1                   ; stop
@1165:075265                 var_b: sp 50a4                  ; b
@1166:000000                  51a3: .word 0
@1167:075265                 var_g: sp 50a4                  ; g
@1170:001104                  53a3: .word 1a3
@1171:000012                  54a3: .word 10                 ; 9
@1172:140000                  55a3: mr 0
@1173:075265                 var_m: sp 50a4                  ; m
@1174:075255                        sp 42a4                  ; shift to u.c.
@1175:075265                 var_x: sp 50a4                  ; x
@1176:150000                  59a3: dv 0
@1177:075265                 var_v: sp 50a4                  ; v
@1200:075203                        sp a4                    ; shift to l.c.
@1201:000001                  62a3: .word 1                  ; 0 (zero)
@1202:075004                        sp 2a1                   ; nullify
                                    ; |
                                    ; | Sheet 6/20
                                    ; | a4 (Upper case symbols & misc. program)
                                    ; |
                                a4:
@1203:101103                   0a4: ca a3
@1204:045005                   1a4: td 3a1
@1205:075004                        sp 2a1                   ; E (not used)
@1206:000023                        .word 19                 ; 8 (exp.)
@1207:001172                   4a4: .word 55a3
@1210:022000                   5a4: .word 0.22000            ; _                                                ; [LAS Did say + not _ and 0,22000 but looks like hand-written sheet is as shown here now. Transcription error.]
@1211:001176                   6a4: .word 59a3               ; A (not used)
@1212:000016                        .word 14                 ; 3 (exp.)
@1213:075004                        sp 2a1                   ; space
@1214:075004                        sp 2a1                   ; . ['dot', not period] (see note)
@1215:075523                        sp 40a10                 ; S
@1216:000017                  11a4: .word 15                 ; 4 (exp.)
@1217:111176                  12a4: ad 59a3                  ; I (not used)
@1220:075411                        sp a9                    ; /
@1221:001427                  14a4: .word 14a9               ; U (not used)
@1222:000015                        .word 13                 ; 2 (exp.)
@1223:000000                        .word 0                  ; shift ribbon                                     ; [LAS was blank]
@1224:075614                        sp a12                   ; )
@1225:075662                  18a4: sp a13                   ; D (not used)
@1226:000020                        .word 16                 ; 5 (exp.)
@1227:040000                  20a4: ts 0                     ; R (not used)
@1230:000014                  21a4: .word 12                 ; 1 (exp.)
@1231:111733                  22a4: ad 41a13                 ; J (not used)
@1232:000022                        .word 18                 ; 7 (exp.)
@1233:106412                  24a4: cs 2ax                   ; N (not used)                                     ; [LAS was (cs 2ax/ca 2ax)]
@1234:075571                        sp a11                   ; (
@1235:000000                        .word 0                  ; F                                                ; [LAS was blank]
@1236:000021                        .word 17                 ; 6 (exp.)
@1237:075535                        sp 50a10                 ; C
@1240:075423                        sp 10a9                  ; - (exp.)
                                    ; |
                                    ; | note: The symbol . ['dot', not period] can be used at the programmer's discretion to
                                    ; |  denote multiplication, where convenient typographically.
                                    ; |
                                    ; | Sheet 7/20
                                    ; | a4 (continued)
@1241:051243                  30a4: ta 32a4                  ; K (not used)
@1242:075433                        sp 18a9
@1243:100000                  32a4: ca 0                     ; T (not used)
@1244:075377                  33a4: sp 9a8
@1245:075004                        sp 2a1                   ; Z (not used)
@1246:075004                        sp 2a1                   ; back space
@1247:102412                  36a4: ca 2ax                   ; L (not used)
@1250:075004                        sp 2a1                   ; tabulate
@1251:101253                  38a4: ca 40a4                  ; W (not used)
@1252:115107                        su 4a3
@1253:074000                  40a4: sp 0                     ; H (not used)
@1254:075004                        sp 2a1                   ; carr. return
@1255:101170                  42a4: ca 53a3                  ; Y (not used)
@1256:075204                        sp 1a4
@1257:075057                  44a4: sp a2                    ; P                                                ; [LAS was (sp a2/sp 2a2)]
@1260:101152                  45a4: ca 39a3
@1261:045277                        td 60a4                  ; Q (not used)
@1262:105201                        cs 62a3
@1263:075030                        sp 22a1                  ; O (letter) (not used)                            ; [LAS was 23a1. Transcription error.]
@1264:075004                        sp 2a1                   ; stop
@1265:111172                  50a4: ad 55a3                  ; B (not used)                                     ; [LAS was (55a3)]
@1266:075244                  51a4: sp 33a4                  ;                                                  ; [LAS was sp (28a10/33r) -- had it at 28a10 but seems wrong so changed it]
@1267:075241                  52a4: sp 30a4                  ; G (not used)
@1270:075667                        sp 5a13
@1271:000024                  54a4: .word 20                 ; 9 (exp.)
@1272:075241                  55a4: sp 30a4
@1273:075674                        sp 10a13                 ; M (not used)
@1274:075255                        sp 42a4                  ; shift to u.c.
@1275:101144                  58a4: ca 33a3                  ; X (not used)
@1276:045015                        td 11a1                  ;                                                  ; [LAS was td 10a1.  Transcription error -- cross-out in hand-listing]
@1277:074000                  60a4: sp 0                     ; V (not used)
@1300:075203                        sp 0a4                   ; shift to l.c.
@1301:000013                  62a4: .word 11                 ; 0 (zero exp.)
@1302:075004                        sp 2a1                   ; nullify
                                    ; |
                                    ; | Sheet 8/20
                                    ; | a5 (Interpret MRA as lower case number)
                                    ; |
                                a5:
@1303:105051                        cs 39a1
@1304:041051                        ts 39a1
@1305:131051                   2a5: ao 39a1
@1306:071322                        cp 15a5
@1307:075366                        sp a8                    ; (select new address k)
@1310:045312                        td 7a5
@1311:076410                        sp ax                    ; (= sp 852) -| store number
@1312:040000                   7a5: ts 0                     ;             | in (k, k+1)
@1313:076410                        sp ax                    ;            -|
@1314:101265                        ca 50a4                  ; -| form symbol mr k
@1315:045320                        td 13a5                  ;  | or dv k, where
@1316:101312                        ca 7a5                   ;  | k is address at
@1317:115162                        su 47a3                  ;  | which number has
@1320:110000                  13a5: ad 0                     ;  | just been stored
@1321:075336                        sp 8a6                   ; -|
@1322:076410                  15a5: sp ax
@1323:151364                        dv 4a7                   ; (divide by 10)
@1324:076410                        sp ax
@1325:075305                        sp 2a5
                                    ; |
                                    ; | Sheet 9/20
                                    ; | a6 (Interpret MRA as exponent)
                                    ; |
                                a6:
@1326:101410                        ca 18a8                  ; -| store "sp exp" in
@1327:045331                        td 3a6                   ;  | place of last-stored
@1330:101350                        ca 18a6                  ;  | symbol (mr x or dv x)
@1331:064000                   3a6: ex 0                     ; -|
@1332:045166                        td 51a3                  ; -|
@1333:101166                        ca 51a3                  ;  | store "+x"
@1334:075377                        sp 9a8                   ; -|
@1335:075351                        sp 19a6                  ; -| compute and store the
@1336:075377                   8a6: sp 9a8                   ; -| exponent +-n
@1337:076410                   9a6: sp ax                    ; -|
@1340:101360                  10a6: ca a7                    ;  | reset MRA
@1341:076410                        sp ax                    ;  | and various
@1342:100000                        ca 0                     ;  | counters
@1343:041050                  13a6: ts 38a1                  ;  |
@1344:041051                        ts 39a1                  ;  |
@1345:101343                        ca 13a6                  ;  |
@1346:045046                        td 36a1                  ; -|
@1347:075251                  17a6: sp 38a4                  ;                                                  ; [LAS was sp (38a4/14a9)]
@1350:075701                  18a6: sp 15a13                 ; "sp exp"
@1351:051357                  19a6: ta 25a6                  ;                                                  ; [LAS was td 25a6. Transcription error.]
@1352:102414                        ca 4ax                   ; -|
@1353:045356                        td 24a6                  ;  | Form +-n, where
@1354:102412                  22a6: ca 2ax                   ;  | n is in MRA in                                ; [LAS was (ca 2ax/cs 2ax)]
@1355:161017                        srh 15                   ;  | (24,6) form                                   ; [LAS was sr*]
@1356:154000                  24a6: slr 0                    ; -|
@1357:074000                  25a6: sp 0
                                    ; |
                                    ; | Sheet 10/20
                                    ; | a7 (Numerical storage)
                                    ; |
                                a7:
@1360:000000                        .word 0.00000            ; -| 0                                             ; [LAS added p to this section]
                                    ; .word 1.47777          ; -|                                               ; [LAS I don't see how this (lower word) is supposed to be part of float zero]
@1361:000000                        .word 0.00000            ; -|
@1362:040000                   2a7: .word 0.40000            ; -| 1
@1363:001000                        .word 0.01000            ; -|
@1364:050000                   4a7: .word 0.50000            ; -| 10
@1365:004000                        .word 0.04000            ; -|
                                    ; |
                                    ; | Sheet 11/20
                                    ; | a8 (Address selection)
                                    ; |
                                a8:
@1366:051375                        ta 7a8                   ; -| Select new
@1367:101376                        ca 8a8                   ;  | address for
@1370:115130                        su 21a3                  ;  | storage of
@1371:041376                        ts 8a8                   ;  | numerical
@1372:115410                        su 18a8                  ;  | quantity
@1373:071405                        cp 15a8                  ;  |
@1374:101376                        ca 8a8                   ;  |
@1375:074000                   7a8: sp 0                     ;  |
                                    ; 8a8: .word 197         ; -| (last address used)                           ; [LAS was just "+197", no op or pseudo-op]
@1376:001000                   8a8: .word val_temp           ;                                                  ; [LAS Start at top of compiled-code heap and work down, rather than use hard address]
@1377:051407                   9a8: ta 17a8                  ; -|
@1400:040040                  10a8: ts comp_code             ;  | Store C(AC) in                                ; [LAS was ts 32. Replaced with comp_code. Note this inst gets ao'ed]
@1401:131400                        ao 10a8                  ;  | next available
@1402:115162                        su 47a3                  ;  | program address.
@1403:115376                        su 8a8                   ;  |
@1404:071406                        cp 16a8                  ;  |
@1405:054000                  15a8: ck 0                     ;  |
@1406:131410                  16a8: ao 18a8                  ;  |
@1407:074000                  17a8: sp 0                     ;  |
@1410:000037                  18a8: .word comp_code - 1      ; -| (last occupied program address)               ; [LAS was "(p 31)"] [LAS was .word 31. Replaced with comp_code - 1]
                                    ; |
                                    ; | Sheet 12/20
                                    ; | a9 (division, etc.)
                                    ; |
                                a9:
@1411:101217                        ca 12a4                  ; (divide)
@1412:065265                        ex 50a4
@1413:065217                        ex 12a4
@1414:075416                        sp 5a9
@1415:075004                   4a9: sp 2a1                   ; (the 14a10 mode is never used)                   ; [LAS was sp (2a1/14a10)]
@1416:051422                   5a9: ta 9a9
@1417:101354                        ca 22a6
@1420:065233                        ex 24a4
@1421:065354                        ex 22a6
@1422:074000                   9a9: sp 0
@1423:075416                  10a9: sp 5a9                   ; (upper case minus)
@1424:101221                        ca 14a4
@1425:045347                        td 17a6
@1426:075004                        sp 2a1
@1427:075416                  14a9: sp 5a9
@1430:101432                        ca 17a9
@1431:045347                        td 17a6
@1432:075251                  17a9: sp 38a4
@1433:051444                  18a9: ta 27a9                  ; (reset dv and exp to normal)
@1434:101247                        ca 36a4
@1435:041354                        ts 22a6
@1436:101160                        ca 45a3
@1437:041233                        ts 24a4
@1440:101207                        ca 4a4
@1441:045265                        td 50a4
@1442:101211                        ca 6a4
@1443:045217                        td 12a4
@1444:074000                  27a9: sp 0
@1445:075433                  28a9: sp 18a9                  ; (reset dv and exp to non-normal)
@1446:075416                        sp 5a9
@1447:101217                        ca 12a4
@1450:065265                        ex 50a4
@1451:065217                        ex 12a4
@1452:075625                        sp 9a12
                                    ; |
                                    ; | Sheet 13/20
                                    ; | a10 (Equals, comma, SP, CP)
                                    ; |
                               a10:
@1453:051464                  0a10: ta 9a10
@1454:101225                        ca 18a4
@1455:075377                        sp 9a8
@1456:045557                  3a10: td 68a10
@1457:115201                        su 62a3
@1460:041552                  5a10: ts 63a10
@1461:045463                        td 8a10
@1462:101464                        ca 9a10
@1463:064000                  8a10: ex 0
@1464:074000                  9a10: sp 0
@1465:075453                 10a10: sp 0a10                  ; (equals)
@1466:045227                        td 20a4
@1467:075433                 12a10: sp 18a9
@1470:075004                        sp 2a1
@1471:101231                 14a10: ca 22a4                  ; (comma)
@1472:075377                        sp 9a8
@1473:101227                        ca 20a4
@1474:075377                        sp 9a8
@1475:101552                        ca 63a10
@1476:045500                        td 21a10
@1477:101557                        ca 68a10
@1500:044000                 21a10: td 0
@1501:075433                        sp 18a9
@1502:101545                 23a10: ca 58a10
@1503:045266                        td 51a4
@1504:101275                        ca 58a4                  ;                                                  ; [LAS was td 51a4. Transcription error.]
@1505:045016                        td 12a1
@1506:075004                        sp 2a1                   ;                                                  ; [LAS was sp (2a1/49r)]
@1507:101546                 28a10: ca 59a10
@1510:045266                        td 51a4
@1511:101547                        ca 60a10
@1512:045016                        td 12a1
@1513:075351                        sp 19a6
@1514:111544                        ad 57a10
                                    ; | Sheet 14/20
                                    ; | a10 (continued)
@1515:045521                        td 38a10
@1516:101400                        ca 10a8
@1517:115162                        su 47a3
@1520:111107                        ad 4a3
@1521:040000                 38a10: ts 0
@1522:075337                        sp 9a6
@1523:101537                 40a10: ca 52a10                 ; (SP)
@1524:041543                 41a10: ts 56a10
@1525:015525                 42a10: rd 42a10
                                    ;                        ;                                                  ; .print "xxxxx 3 rd %ao"
@1526:115271                        su 54a4
@1527:070000                        cp 0                     ; (provision for future SR, CR instructions)
@1530:115230                        su 21a4
@1531:071101                        cp 18a2                  ; (START)
@1532:101550                        ca 61a10
@1533:045134                 48a10: td 25a3
@1534:075004                        sp 2a1
@1535:101544                 50a10: ca 57a10                 ; (CP)
@1536:075524                        sp 41a10
@1537:076002                 52a10: sp a14
@1540:075075                 53a10: sp 14a2
@1541:101551                        ca 62a10
@1542:075533                        sp 48a10
@1543:076002                 56a10: sp a14                   ;                                                  ; [LAS was (sp a14/cp a14)]
@1544:072002                 57a10: cp a14
@1545:001507                 58a10: .word 28a10              ;                                                  ; [LAS added p to this section]
@1546:001244                 59a10: .word 33a4
@1547:001142                 60a10: .word 31a3
@1550:001540                 61a10: .word 53a10
@1551:001471                 62a10: .word 14a10
@1552:000000                 63a10: .word 0                  ; -| storage for addresses used by
@1553:000000                        .word 0                  ;  | parenthesis routines in forming
@1554:000000                        .word 0                  ;  | and storing sp orders
@1555:000000                        .word 0                  ;  |
@1556:000000                        .word 0                  ;  |                                               ; [These are notated on the coding sheet as: ]
@1557:000000                 68a10: .word 0                  ;  |                                               ; [   63-67  +0                              ]
@1560:000000                        .word 0                  ;  |                                               ; [   68-72  +0                              ]
@1561:000000                        .word 0                  ;  |                                               ; [   73-77  +0                              ]
@1562:000000                        .word 0                  ;  |
@1563:000000                        .word 0                  ;  |
@1564:000000                 73a10: .word 0                  ;  |
@1565:000000                        .word 0                  ;  |
@1566:000000                        .word 0                  ;  |
@1567:000000                        .word 0                  ;  |
@1570:000000                        .word 0                  ; -|
                                    ; |
                                    ; | Sheet 15/20
                                    ; | a11 (Left parenthesis)
                                    ; |
                               a11:
@1571:075377                        sp 9a8                   ; (store dummy symbol)
@1572:131456                        ao 3a10
@1573:131460                        ao 5a10
@1574:075453                        sp a10
@1575:075366                        sp a8
@1576:045564                  5a11: td 73a10                 ;                                                  ; [LAS was "td (73a10)"]
@1577:131576                        ao 5a11
@1600:101217                        ca 12a4
@1601:115265                        su 50a4
@1602:071604                        cp 11a11
@1603:075004                        sp 2a1
@1604:101460                 11a11: ca 5a10
@1605:045607                        td 14a11
@1606:045611                        td 16a11
@1607:100000                 14a11: ca 0
@1610:111613                        ad 18a11
@1611:040000                 16a11: ts 0
@1612:075467                        sp 12a10
@1613:004000                 18a11: .word 0.04000            ;                                                  ; [LAS added p]
                                    ; |
                                    ; | Sheet 16/20
                                    ; | a12 (Right parenthesis)
                                    ; |
                               a12:
@1614:101460                        ca 5a10
@1615:045620                        td 4a12
@1616:115201                        su 62a3
@1617:045460                        td 5a10
@1620:100000                  4a12: ca 0
@1621:045651                        td 29a12
@1622:115613                        su 18a11
@1623:071660                        cp 36a12
@1624:075445                        sp 28a9
@1625:101576                  9a12: ca 5a11
@1626:115201                        su 62a3
@1627:045576                        td 5a11
@1630:045634                        td 16a12
@1631:045654                        td 32a12
@1632:101231                        ca 22a4
@1633:075377                        sp 9a8
@1634:100000                 16a12: ca 0
@1635:111162                        ad 47a3
@1636:075377                        sp 9a8
@1637:101456                        ca 3a10
@1640:045644                        td 24a12
@1641:115201                        su 62a3
@1642:045456                        td 3a10
@1643:045645                        td 25a12
@1644:100000                 24a12: ca 0
@1645:064000                 25a12: ex 0
@1646:111107                        ad 4a3
@1647:075377                        sp 9a8
@1650:111201                        ad 62a3
@1651:044000                 29a12: td 0
@1652:101265                        ca 50a4
@1653:045655                        td 33a12
                                    ; | Sheet 17/20
                                    ; | a12 (continued)
@1654:100000                 32a12: ca 0
@1655:110000                 33a12: ad 0
@1656:075377                        sp 9a8
@1657:075004                        sp 2a1
@1660:075433                 36a12: sp 18a9
@1661:075625                        sp 9a12
                                    ; |
                                    ; | Sheet 18/20
                                    ; | a13 (Interpretive routines)
                                    ; |
                               a13:
                            equals:
@1662:051666                        ta 4a13                  ; equals
@1663:101360                        ca a7
@1664:041733                        ts 41a13
@1665:101362                        ca 2a7
@1666:074000                  4a13: sp 0
                              5a13:
@1667:051673                  plus: ta 9a13                  ; plus
@1670:111733                        ad 41a13
@1671:041733                        ts 41a13
@1672:101362                        ca 2a7                   ;                                                  ; [LAS was ca 207. Transcription error.]
@1673:074000                  9a13: sp 0
                             10a13:
@1674:051700                 minus: ta 14a13                 ; minus
@1675:111733                        ad 41a13
@1676:041733                        ts 41a13
@1677:105362                        cs 2a7
@1700:074000                 14a13: sp 0
                             15a13:
@1701:051707              exponent: ta 21a13                 ; exponent
@1702:051715                        ta 27a13
@1703:076410                        sp ax
@1704:131707                        ao 21a13
@1705:045722                        td 32a13
@1706:131722                        ao 32a13
@1707:104000                 21a13: cs 0
@1710:071727                        cp 37a13
@1711:041732                        ts 40a13
@1712:105732                        cs 40a13
@1713:041732                        ts 40a13
@1714:101735                        ca dv0                   ;                                                  ; [LAS was ca 210. The notes at the end say 210 is dv 0]
@1715:110000                 27a13: ad 0
@1716:041724                        ts 34a13
@1717:131732                 29a13: ao 40a13
@1720:071723                        cp 33a13
@1721:076410                        sp ax
@1722:074000                 32a13: sp 0
@1723:076410                 33a13: sp ax
@1724:140000                 34a13: mr 0                     ;                                                  ; [LAS was (mr (-)/dv (-))]
@1725:076410                        sp ax
@1726:075717                        sp 29a13
@1727:041732                 37a13: ts 40a13
@1730:101172                        ca 55a3
@1731:075715                        sp 27a13
@1732:000000                 40a13: .word 0                  ;    -|n| counter                                  ; [LAS added p to this section]
                             41a13:
@1733:000000                  temp: .word 0                  ; -| temporary sum storage for arithmetic
@1734:000000                        .word 0                  ; -|
@1735:150000                   dv0: dv 0                     ;                                                  ; [LAS added this]
                                    ; |
                                    ; | Sheet 19/20
                                    ; | a15 (Print control)
                                    ; |
                               a15:
                             print:
@1736:051741                        ta 3a15                  ; -| plant address of 1st
@1737:076410                  1a15: sp ax                    ; -| character to be printed
@1740:000225                        si 149
@1741:100000                  3a15: ca 0
@1742:045760                        td 16a15
@1743:045750                        td 8a15
@1744:071751                        cp 9a15                  ; -| If next symbol is an sp order carry it out.

                                    ; [LAS The description says no cr in the print routines, but
                                    ;  there does not seem to be one emitted at any level

                                    ; See also float_30_15_print regarding newlines and spaces.
                                    ; Use the Laning letter as the template (see
                                    ; ./InfoFromKnuth/from-Laning-76-07-02.pdf).  Here we print
                                    ; the newline following the print of a set of equations.]
@1745:102337                        ca newlinemfp
@1746:024000                        rc 0

@1747:076410                        sp ax                    ;  | Since symbols to be printed are stored as
@1750:074000                  8a15: sp 0                     ; -| "mr x,mr y," etc. the "mr" actuates this xxx [?]
@1751:115103                  9a15: su a3                    ; -|
@1752:170012                        clc 10                   ;  | form and print first letter
@1753:025753                 11a15: rc 11a15                 ; -|
@1754:131741                        ao 3a15
@1755:101210                        ca 5a4                   ; (0.22000 - "=")
@1756:025756                 14a15: rc 14a15
@1757:076410                        sp ax
@1760:100000                 16a15: ca 0                     ;                -| print number
@1761:076410                        sp ax
                                    .print "LZ output: %fm", mra
@1762:076410                        sp ax
@1763:076015                        sp float_30_15_print     ; (24,6) print    |                                ; [LAS Was sp 222. We don't have the original print routine]
@1764:075737                        sp 1a15                  ;   routine      -|
                                    ; |
                                    ; | Sheet 20/20
                                    ; | a16 (used in a2)
                               a16:
@1765:051777                        ta 10a16
@1766:101415                        ca 4a9                   ; -| set , to sp 2a1 and reset                     ; [LAS was ca 409. Transcription error.]
@1767:065134                        ex 25a3                  ;  |
@1770:065415                        ex 4a9                   ; -|
@1771:102001                        ca 12a16                 ; -| set P to sp 2a2 (and reset)
@1772:065257                        ex 44a4                  ;  |
@1773:066001                        ex 12a16                 ; -|
@1774:101073                        ca 12a2                  ; -| set . to sp 8a2 (and reset)
@1775:065124                        ex 17a3                  ;  |
@1776:065073                        ex 12a2                  ; -|
@1777:074000                 10a16: sp 0
@2000:075736                 11a16: sp a15
@2001:075061                 12a16: sp 2a2                   ;                                                  ; [LAS was (sp 2a2/sp a2)]

                                    ; |
                                    ; | [LAS Added this section based on info below. Not clear how it can
                                    ; |  possibly work using this data in the middle of the program (i.e.,
                                    ; |  at 212), but it should be ok to allocate a separate space for it.]
                                    ; | a14
                               a14:
@2002:000000                        .words 11, 0
@2003:000000
@2004:000000
@2005:000000
@2006:000000
@2007:000000
@2010:000000
@2011:000000
@2012:000000
@2013:000000
@2014:000000

                                    ; |
                                    ; | Miscellaneous [Not sure about this section needs proofing]
                                    ; |
                                    ; | 210 dv 0
                                    ; |
                                    ; | 211 = 0a14 and also "1t" in print routine. Equations are not allowed
                                    ; |       0 as a number, thus 0a14 is not used in a meaningful way.
                                    ; |
                                    ; | 212-221 = 1a14 - 10a14: storage for sp orders to initial address of numbered equations (a
                                    ; |       maximum of 10 is allowed)
                                    ; |
                                    ; | 222 (24,6) print routine
                                    ; |
                                    ; | 852 = "ax"  = (24,6) programmed arithmetic

                                    ; LAS include current version of printer.

                                    ; .include "float-30-15-0-print.ww"

                                    ; Print a (24,6) float nunmber. The value to print is in mra, which
                                    ; is (30,15), but we'll only use (24,6) range.

@2015:052030     float_30_15_print: ta flt_print_rtn
@2016:042155                        ts nm_x
@2017:076410                        sp ax                    ; Spax out
@2020:076031                        sp normalize
                                    ; .print "floating print normalize x = %fl, t = %fl, mra-fm = %fm, mra-fr = %fr, mra-exp = %d", nm_x, t, mra, mra, mra + 2
                                    ; After normnalize the mra contains a 2-word denormalized fraction
                                    ; in mra and mra+1, and a power of ten exponent in mra+2.
@2021:076410                        sp ax                    ; Spax in
@2022:076214                        sp mfp
@2023:076410                        sp ax                    ; Spax out
@2024:076340                        sp print_exp

                                    ; Not much guidance on where spaces and newlines should be printed,
                                    ; but we'll use the Laning letter as the template (see
                                    ; ./InfoFromKnuth/from-Laning-76-07-02.pdf).  Print a space
                                    ; following each equation, then at the upper level when all are done
                                    ; print a newline.
@2025:102213                        ca fp_space
@2026:024000                        rc 0

@2027:076410                        sp ax                    ; Spax in
@2030:074000         flt_print_rtn: sp 0

                                    ; Normalize, first by reducing to a fraction f such that 0.1 <= f < 1.0,
                                    ; with a decimal exponent d, then shifting to normalize in the
                                    ; binary exponent e, -4 >= e >= 0. The result is a two-word 30,0 fraction
                                    ; along with a decimal exponent. The fraction is printed with the frac printer mfp.

                                    ; Input: nm_x, (24,6) format
                                    ; Output: mra, first two words fraction (denormalized mantissa), third word decimal exponent

                         normalize:
@2031:052147                        ta nm_rtn
@2032:102166                        ca zero
@2033:042150                        ts nm_exp
@2034:076410                        sp ax                    ; Spax in
@2035:102155                        ca nm_x                  ; x
@2036:042160                        ts t
                           nm_loop:
@2037:122160                        cm t
@2040:116173                        su float1
@2041:072051                        cp nm_not_ge_1
                                    ; setup 0.1 loop         ; |x| >= 1
@2042:076410                        sp ax                    ; Spax out
@2043:102153                        ca nm_mr_float_point_1
@2044:042073                        ts nm_calc_mr
@2045:102154                        ca nm_ad_one
@2046:042077                        ts nm_calc_ad
@2047:076410                        sp ax                    ; Spax in
@2050:076072                        sp nm_calc
@2051:122160           nm_not_ge_1: cm t                     ; |x| < 1
@2052:116203                        su float_point_1

@2053:042211                        ts ftmp0
@2054:122211                        cm ftmp0
@2055:114000                        su 0
@2056:072103                        cp nm_already_norm       ; Branch if |x| = .1

@2057:122160                        cm t
@2060:116203                        su float_point_1

@2061:072064                        cp nm_lt_point_1
@2062:076103                        sp nm_already_norm       ; |x| > .1
@2063:112167                        ad float0                ; Nop
                     nm_lt_point_1:
                                    ; setup 10 loop          ; |x| < .1
@2064:076410                        sp ax                    ; Spax out
@2065:102152                        ca nm_mr_float10
@2066:042073                        ts nm_calc_mr
@2067:102151                        ca nm_su_one
@2070:042077                        ts nm_calc_ad
@2071:076410                        sp ax                    ; Spax in
                           nm_calc:
@2072:102160                        ca t
@2073:000000            nm_calc_mr: .word 0                  ; mr =0.1 or mr =10.0
@2074:042160                        ts t
@2075:076410                        sp ax                    ; Spax out
@2076:102150                        ca nm_exp
@2077:000000            nm_calc_ad: .word 0                  ; ad one or su one
@2100:042150                        ts nm_exp
@2101:076410                        sp ax                    ; Spax in
@2102:076037                        sp nm_loop
                   nm_already_norm:
@2103:102160               nm_done: ca t
                                    ; ad float_low_rnd       ; Rounding experiment. Really want decimal round in the printer   LAS
@2104:076410                        sp ax                    ; Spax out

                                    ; Here t and the mra hold the (fractional) reduced value (0.1 <=
                                    ;  |value| < 1.0), and nm_exp holds the decimal exponent
                                    ;  (single-word int).

                                    ; Now we need to shift down by the binary exponent to denormalize
                                    ;  the float to a 2-word fraction. Printing that fraction in decimal
                                    ;  will result in correct digits since we now have the base-10
                                    ;  exponent as a separate value.

@2105:102414                        ca mra + 2               ; Binary exponent range zero to negative four
@2106:042161                        ts t3
@2107:102166                        ca zero
@2110:042162                        ts t4
@2111:132161          nm_mask_loop: ao t3
@2112:072114                        cp nm_2_cont
@2113:076121                        sp nm_mask_done
@2114:102162             nm_2_cont: ca t4
@2115:170001                        clc 1
@2116:112165                        ad one
@2117:042162                        ts t4
@2120:076111                        sp nm_mask_loop
                      nm_mask_done:                          ; t4 has the mask
@2121:102412                        ca mra + 0               ; Upper mant
@2122:176162                        md t4
@2123:042163                        ts t5                    ; t5 has the rightmost bits of upper mant
@2124:122414                        cm mra + 2
@2125:032157                        sd nm_srh_inst
@2126:042131                        ts nm_shift_hi
@2127:042134                        ts nm_shift_lo
@2130:102412                        ca mra + 0
@2131:161000           nm_shift_hi: srh 0
@2132:042412                        ts mra + 0
@2133:102413                        ca mra + 1               ; Lower mant
@2134:161000           nm_shift_lo: srh 0
@2135:042413                        ts mra + 1
@2136:102164                        ca word_size
@2137:112414                        ad mra + 2
@2140:046142                        td nm_smb
@2141:102163                        ca t5
@2142:170000                nm_smb: clc 0                    ; Shift the masked bits up
@2143:032413                        sd mra + 1
@2144:042413                        ts mra + 1
@2145:102150                        ca nm_exp
@2146:042414                        ts mra + 2
@2147:074000                nm_rtn: sp 0

@2150:000000                nm_exp: .word 0
@2151:116165             nm_su_one: su one
@2152:142177         nm_mr_float10: mr float10
@2153:142203   nm_mr_float_point_1: mr float_point_1
@2154:112165             nm_ad_one: ad one
@2155:000000                  nm_x: .float 0, 0
@2156:000000
@2157:161000           nm_srh_inst: srh 0                    ; Note can't use td with these insts or you overwrite the opcode
@2160:000000                     t: .word 0
@2161:000000                    t3: .word 0
@2162:000000                    t4: .word 0
@2163:000000                    t5: .word 0
@2164:000017             word_size: .word 15
@2165:000001                   one: .word 1
@2166:000000                  zero: .word 0
@2167:000000                float0: .float 0, 0
@2170:000000
@2171:040000              float1_2: .float +0.5, 0
@2172:000000
@2173:040000                float1: .float +0.1, 1
@2174:001000
@2175:040000                float2: .float +0.2, 1
@2176:002000
@2177:050000               float10: .float +0.1, 2
@2200:004000
@2201:040000               float16: .float +0.16, 2
@2202:005000
@2203:063146         float_point_1: .float +0.1, 0
@2204:174315
@2205:041433         float_low_rnd: .float +0.5, -6          ; -6 is the smallest exponent to bump up to above the int (still not round to the int)
@2206:153675
@2207:137777            float_neg1: .word 0o137777
@2210:001777                        .word 0o001777
@2211:000000                 ftmp0: .float 0, 0
@2212:000000
@2213:020000              fp_space: .flexh " "
                                    ; end .include "float-30-15-0-print.ww"
                                    ; .include "modern-frac-30-0-0-print.ww"

                                    ; LAS 4/13/25 This file is adapted from frac-30-0-0-print.ww, but
                                    ;    altered enough that we can't call it the same routine
                                    ;    anymore. One basic change is replacement of the qp instruction
                                    ;    with si/rc instructions for the flexowriter, and also replacement
                                    ;    of the code table with flex codes. It's not known yet what codes
                                    ;    were used by the device on the receiving end of the qp.  Since
                                    ;    we're essentially creating a new routine, much of the the doc
                                    ;    included with the orginal has been omitted from the description below.

                                    ; |   Description
                                    ; |
                                    ; |       This subroutine prints and/or punches the sign and magnitude of the
                                    ; |   contents of the MRA in the following manner
                                    ; |
                                    ; |            +-.d1d2...dn
                                    ; |
                                    ; |   The number, n, of decimal digits to be printed is a preset parameter (v2). The
                                    ; |   digits, di, are obtained by multiplying the magnitude of the contents of the MRA
                                    ; |   successively by p10.
                                    ; |
                                    ; |   This subroutine contains a sign agreement program so that the contents
                                    ; |   of the MRA need not be a number whose major and minor parts are of like sign.
                                    ; |
                                    ; |   The sp instruction transferring control to this subroutine must be an
                                    ; |   interpreted sp (i.e., control must be in the interpretive subroutine). After
                                    ; |   execution of the subroutine control remains in the interpretive subroutine which
                                    ; |   then proceeds to interpret the instruction following the sp instruction in
                                    ; |   storage.
                                    ; |
                                    ; |   There is no carriage return.
                                    ; |
                                    ; |   This subroutine can be used with any(30,0,0) interpretive subroutine.
                                    ; |   The contents of the MRA are left undisturbed during the execution of this
                                    ; |   subroutine.
                                    ; |
                                    ; |   Abstract: This subroutine prints out a +- sign and a decimal point followed
                                    ; |             by the magnitude of the contents of the MRA as a decimal fraction.
                                    ; |             The decimal digits are obtained by multiplying the contents of the
                                    ; |             MRA successively by plO. The number of digits to be printed is
                                    ; |             a preset parameter (v2). There is no carriage return. The sub-
                                    ; |             routine is interpreted and can be used with any (30,0,0) inter-—
                                    ; |             pretive subroutine.
                                    ; |
                                    ; |   Temporary Storage
                                    ; |       d       unused
                                    ; |       1tmfp   -|
                                    ; |       2tmfp    |- Temporary storage
                                    ; |       3tmfp   -|
                                    ; |       4tmfp      Digit counter
                                    ; |
                                    ; |

                               mfp:                          ; mfp == modern frac print
@2214:052263                        ta 37mfp
@2215:076410                        sp ax                    ; Resume ordinary ww operation
@2216:102413                        ca 3ax                   ; -|
@2217:042334                        ts 2tmfp                 ;  |- Store C(mra) in 1tmfp and 2tmfp
@2220:102412                        ca 2ax                   ;  |
@2221:042333                  5mfp: ts 1tmfp                 ; -|
@2222:142334                  6mfp: mr 2tmfp                 ; Do 1tmfp and 2tmfp agree in sign?
@2223:072264                        cp 38mfp
@2224:102333                        ca 1tmfp                 ; -|
@2225:072230                  9mfp: cp 12mfp                 ;  |
@2226:102330                        ca plus_char             ;  |
@2227:076231                        sp 13mfp                 ;  |- Sense and print algebraic sign of C(mra) followed by a decimal point
@2230:102331                 12mfp: ca minus_char            ;  |
@2231:000225                 13mfp: si 149                   ;  |
@2232:024000                        rc 0                     ;  |
@2233:102332                        ca dot_char              ;  |
@2234:024000                        rc 0                     ; -|

@2235:106313                        cs ndigits               ; -|- Set up digit counter
@2236:042336                        ts digit_cntr            ; -|

@2237:122333                 17mfp: cm 1tmfp                 ; -|
@2240:146314                        mh 62mfp                 ;  |
@2241:042335                        ts 3tmfp                 ;  |
@2242:154017                        slr 15                   ;  |
@2243:042333                        ts 1tmfp                 ;  |- Multiply C(1tmfp,2tmfp) by p10
@2244:122334                        cm 2tmfp                 ;  |
@2245:146314                        mh 62mfp                 ;  |
@2246:042334                        ts 2tmfp                 ;  |
@2247:154017                        slr 15                   ;  |
@2250:066334                        ex 2tmfp                 ;  |
@2251:126333                        sa 1tmfp                 ;  |
@2252:042333                        ts 1tmfp                 ; -|

@2253:102335                        ca 3tmfp                 ; -|
@2254:112315                        ad 63mfp                 ;  |- Set up entry into table
@2255:046256                        td 32mfp                 ; -|

                             32mfp:
@2256:100000                        ca 0                     ; -|- Print a single digit
@2257:024000                        rc 0                     ; -|

@2260:132336                        ao digit_cntr            ; -|- Have enough digits been printed?
@2261:072237                        cp 17mfp                 ; -|

@2262:076410                        sp ax                    ; -|- Return control to int. subroutine
@2263:074000                 37mfp: sp 0                     ; -|

@2264:122333                 38mfp: cm 1tmfp                 ; -|
@2265:114000                        su 0                     ;  |- Is C(1tmfp) != 0?
@2266:072307                        cp 57mfp                 ; -|

@2267:122334                        cm 2tmfp                 ; -|
@2270:114000                        su 0                     ;  |- Is C(2tmfp) != 0?
@2271:072301                        cp 51mfp                 ; -|

@2272:116312                        su 60mfp                 ; -|
@2273:112311                        ad 59mfp                 ;  |- Form 1 - |C(2tmfp)|
@2274:042334                        ts 2tmfp                 ; -|

@2275:102333                        ca 1tmfp                 ; -|- Is C(1tmfp) pos.?
@2276:072305                        cp 55mfp                 ; -|

@2277:116312                        su 60mfp                 ; -|- Form C(1tmfp) - 2^-15
@2300:042333                        ts 1tmfp                 ; -|

@2301:106334                 51mfp: cs 2tmfp                 ; -|- Complement C(2tmfp)
@2302:042334                        ts 2tmfp                 ; -|

@2303:102333                        ca 1tmfp                 ; -|- Re-enter sign agreement
@2304:076222                        sp 6mfp                  ; -|

@2305:132333                 55mfp: ao 1tmfp
@2306:076225                        sp 9mfp
@2307:106333                 57mfp: cs 1tmfp
@2310:076221                        sp 5mfp

@2311:100000                 59mfp: ca 0                     ;                                                  ; [59-73 are notated in Subroutines.pdf with no spaces, e.g., ca0, p1]
@2312:000001                 60mfp: .word 1
                                    ; [Really ndigits - 1. Here as in Laning's letter
                                    ;  (see ./InfoFromKnuth/from-Laning-76-07-02.pdf) we want 8.]
                           ndigits:
@2313:000007                 61mfp: .word 8 - 1              ; v2                                               ; [was just n1a2 -- need to track down this notation]
@2314:000012                 62mfp: .word 10
                       digit_table:
@2315:002316                 63mfp: .word 64mfp              ; ,                                                ; [I think comma? Might just be a blemish]
@2316:174000                 64mfp: .flexh "0123456789"      ; Digit table
@2317:052000
@2320:036000
@2321:016000
@2322:026000
@2323:046000
@2324:066000
@2325:056000
@2326:006000
@2327:154000
                         plus_char:
@2330:032000                 74mfp: .flexh "+"
                        minus_char:
@2331:072000                 75mfp: .flexh "-"
@2332:042000              dot_char: .flexh "."
@2333:000000                 1tmfp: .word 0
@2334:000000                 2tmfp: .word 0
@2335:000000                 3tmfp: .word 0
                        digit_cntr:
@2336:000000                 4tmfp: .word 0
@2337:122000            newlinemfp: .flexh "\n"


                                    ; The (decimal) exponent is in the exp field of the mra (mra+2)

                                    ; dv looks really hard to use for cases like this, since we really want an
                                    ; integer divide. It looks like some way can be devised with appropriate
                                    ; shifting, but instead we'll just take advantage of the fact that
                                    ; exponents wiil be no greater in magnitude than 19, so just subtraction
                                    ; will do.

@2340:052374             print_exp: ta print_exp_rtn
@2341:000225                        si 149
@2342:106414                        cs mra + 2
@2343:072346                        cp pe_non_neg
@2344:102331                        ca minus_char
@2345:076347                        sp pe_2
@2346:102330            pe_non_neg: ca plus_char
@2347:024000                  pe_2: rc 0
@2350:122414                        cm mra + 2
@2351:042376                        ts pe_t1
@2352:102375                        ca pe_10
@2353:116376                        su pe_t1
@2354:072362                        cp pe_exp_ge_10
@2355:122414          pe_exp_lt_10: cm mra + 2
@2356:042376                        ts pe_t1
@2357:102400                        ca pe_zero_char
@2360:024000                        rc 0
@2361:076367                        sp pe_1
@2362:122414          pe_exp_ge_10: cm mra + 2
@2363:116375                        su pe_10
@2364:042376                        ts pe_t1
@2365:102377                        ca pe_one_char
@2366:024000                        rc 0
@2367:102376                  pe_1: ca pe_t1
@2370:112315                        ad digit_table
@2371:046372                        td pe_load_char
@2372:100000          pe_load_char: ca 0
@2373:024000                        rc 0
@2374:074000         print_exp_rtn: sp 0
@2375:000012                 pe_10: .word 10
@2376:000000                 pe_t1: .word 0
@2377:052000           pe_one_char: .flexh "1"
@2400:174000          pe_zero_char: .flexh "0"
                                    ; end .include "modern-frac-30-0-0-print.ww"

                                    ; LAS include the float-lib, which defines ax and friends

                                    ; .include "float-lib.ww"


                                    ; 24,6 float format:
                                    ;  hi word      lo word
                                    ;  1   15       1  6      9
                                    ;  s frac-hi    s exp  frac-lo

                                    ;  frac is a signed 25-bit (including sign) one's-complement representation
                                    ;  exp is a signed 7-bit (including sign) one's-complement representation

                                    ; This first section is a test area and should not
                                    ;  interfere with anything including the lib if there
                                    ;  are no name conflicts.

                                    ; Note we don't set .org since this file can be included in others

                                    .pp do_print, 0
                                    .pp do_floathack, 0      ; Whether to use the workaround to using "ca 0" as -32767/32768
                                    .pp f24, 1               ; Whether to apply mask to srh for 24,6 floats
                                    .pp main_sep_param, 1

@2401:037777                   max: .word 0o037777


@2402:052406             floathack: ta fhrtn
@2403:042407                        ts ac_save
@2404:102407                        ca ac_save
                                    ; Original instruction, replaced by next instruction
                                    ; su r17
@2405:112401                        ad max

@2406:074000                 fhrtn: sp 0
@2407:000000               ac_save: .word 0


                                    ; --- Below here is the floating lib ---
                                    ; | -------------------------------------------------------------
                                    ; | DIGITAL COMPUTER LABORATORY
                                    ; | MASSACHUSETTS INSTITUTE OF TECHNOLOGY

                                    ; | Specifications of WHIRLWIND I LIBRARY SUBROUTINE Number PA 2 ,Z

                                    ; | Operations on Real (24,6, 0) Floating Point
                                    ; | Double Register Numbers (General Subroutine)

                                    ; [Guy: Source code contains two-letter shift ops, (sr, sl).  As far as I can tell,
                                    ;  the original instruction set did only "shift and round", so I've converted
                                    ;  them all to srr, slr.
                                    ;  The shift value is often preceded by a '*', which appears to mean "don't clear
                                    ;  the B Register".  See QTR Report #26, 1951]

                                    ; | Preset Parameters {to be typed in program titie)

                                    ; | vx2/pk: k = separation in storage of two registers of number
                                    ; | vx/pN: N = address in storare of initial register of this subroutine

                                    ; .org 852
                                    ; .org 0o2000

@2410:052704                    ax: ta exec_inst             ; Set address of 1st instruction to be interpreted ; from Enter
@2411:076704                        sp exec_inst

                                    ; words r02, r03, and r04 represent the double precision accumulator
                               mra:
                               2ax:
@2412:000000                   r02: .word 0                  ; x1  -|
                               3ax:                          ;      |
@2413:000000                   r03: .word 0                  ; x1'  |- Multiple register accumulator
                               4ax:                          ;      |
@2414:000000                   r04: .word 0                  ; y1  -|
@2415:161036                   r05: srh 30                   ; "ca"                                             ; from 196r-->
@2416:102410                   r06: ca ax
@2417:102721                   r07: ca r191                  ; "cs"                                             ; from l3r,196r
@2420:076550                        sp r95
@2421:076622                        sp r129                  ; "ad"                                             ; from 196r-->
@2422:000035                   r10: .word 29
@2423:042552                        ts r97                   ; "su"                                             ; from 196r-->
@2424:076617                        sp r126
@2425:076417                        sp r07                   ; "cm"                                             ; from 196r-->
@2426:000000                   r14: .word 0                  ;  Temporary digits storage                        ; (170r)

@2427:126413                   r15: sa r03                   ; -|- Add two minor products                       ; from 24r
@2430:042413                        ts r03                   ; -|

@2431:100000                   r17: ca 0                     ; -|- Store overflow
@2432:066736                        ex tmp                   ; -|

@2433:146412                        mh r02                   ; Form major product
@2434:076657                        sp r158
@2435:142412                   r21: mr r02                   ; "mr" Form two                                    ; from 49r9,196r
@2436:066413                        ex r03                   ; minor products
@2437:142736                        mr tmp
@2440:076427                        sp r15
@2441:066736                        ex tmp                   ; "dv"                                             ; from 196r-->
@2442:042552                        ts r97
@2443:106561                        cs r102                  ; -|
@2444:112476                        ad r54                   ;  |- Form exponent of 2**-2/x2
@2445:042561                        ts r102                  ; -|

@2446:106552                        cs r97                   ; -|
@2447:146552                        mh r97                   ;  |
@2450:066736                        ex tmp                   ;  |- Form and store -(2**-2 * x2')/x2**2
@2451:161002                        srh 2                    ;  |
@2452:152736                        dv tmp                   ;  |
@2453:155017                   r35: slh 15                   ;  |
@2454:042650                        ts r151                  ; -|                                               ; [LAS was transcription error ta r151]

@2455:102520                        ca r72                   ; -|                                               ; [LAS this sequence does not seem to store this formula, instead stores 2**-2/x2]
@2456:152552                        dv r97                   ;  |- Form and store 2**-2/x2**2
@2457:155017                        slh 15                   ;  |
@2460:042736                        ts tmp                   ; -|

@2461:146552                        mh r97                   ; -|
@2462:116520                        su r72                   ;  |
@2463:155017                        slh 15                   ;  |
@2464:116431 .if (1 - do_floathack)   su r17                   ;  |- Form (2**-2/x**2)' (Use Euclid's algorithm)  ; [LAS Looks like this should say (2**-2/x2)' -- Uses remainder arith, hence the Euclid ref]
;                                                 .if do_floathack       sp floathack             ;                                                  ; [LAS 3/30/25 Using r17 broke dv, but looks like it works now in more cases than before.
                                    ;                        ;                                                  ; Still breaks e.g. on sqrt2 test.
                                    ;                        ;                                                  ; Can't find what changed to enable this, but we'll switch between the original
                                    ;                        ;                                                  ; and floathack as needed.
                                    ;                        ;                                                  ; The use of r17 is highly suspicious, as it's the opcode of an instruction.]
@2465:112472                        ad r50                   ;  |
@2466:152552                        dv r97                   ;  |
@2467:155017                        slh 15                   ; -|

@2470:112650                        ad r151                  ; -|- Add two minor parts of reciprocal
@2471:076435                        sp r21                   ; -|

@2472:000001                   r50: .word 1
@2473:076521                        sp r73                   ; "ts"
@2474:106412                   r52: cs r02                   ; -|- complement x1                                ; [LAS Was ca r02. Transcription error.
                                    ;                        ;                                                  ;  Caught late, needed to zoom in and closely examine original text 6/16/25.]
@2475:076665                        sp r164                  ; -|
@2476:000002                   r54: .word 2
@2477:102741                        ca r201                  ; "ta" -|                                          ; from 196r-->
@2500:044000                   r56: td 0                     ;       |- Store digits in indicated address
@2501:076703                        sp next_inst             ;      -|

@2502:132412                   r58: ao r02                   ; -|- Increase xl by by 2**-15                     ; from 119r-->
@2503:076670                        sp r167                  ; -|

@2504:076453                   r60: sp r35
@2505:076521                        sp r73                   ; "ex"                                             ; from 196r-->
@2506:000077                   r62: .word 63
@2507:106412                        cs r02                   ; "cp" -|- Is x1 negative?                         ; from 196r-->
@2510:072703                        cp next_inst             ;      -|                                          ; [LAS was transcription error r188]
@2511:132704                        ao exec_inst             ; "sp" -|- Set Return address for sp ax            ; from 196r
@2512:046741                        td r201                  ;      -|
@2513:102717                        ca r189                  ; -|- Set pick up order for ordinary cp & sp       ; LAST DIGIT is a GUESS! [LAS not legible -- needed to dig into program to nail this down]
@2514:046704                        td exec_inst             ; -|

@2515:116416                        su r06                   ;                                                  ; PROBABLY an SU op code!

@2516:072737                        cp r199                  ; -|- Test to see whether instruction is sp ax
@2517:076704                        sp exec_inst             ; -|

@2520:020000                   r72: .word 0.20000            ;                                                  ; [LAS ]

@2521:102413                   r73: ca r03                   ; -|                                               ; from 51r,61r->
@2522:160006                        srr 6                    ;  |- Round off x1' and store x1' * 2**-6
@2523:176746 .if f24                md float24_low_mant_mask
@2524:042413                        ts r03                   ; -|

@2525:161011                        srh 9                    ; -|
@2526:126412                        sa r02                   ;  |- Add round-off carry into x1
@2527:042412                        ts r02                   ; -|

@2530:100000                        ca 0                     ; -|
@2531:072534                        cp r83                   ;  |- Is there an overflow?
@2532:114000                        su 0                     ;  |
@2533:072537                        cp r86                   ; -|

@2534:154016                   r83: slr 14                   ; -|                                               ; from  80r->
@2535:042412                        ts r02                   ;  |- Add overflow into x1 and x1'. Increase y1
@2536:132414                        ao r04                   ; -|

@2537:122414                   r86: cm r04                   ; -|                                               ; from  82r->
@2540:116506                        su r62                   ;  |- |y1| - 63 > 0?
@2541:072546                        cp r93                   ; -|                                               ; [LAS was transcription error sp r93]

@2542:106414                        cs r04                   ; -|- y <= 0? (i.e.  y1 < -63?)
@2543:072742                        cp r202                  ; -|

@2544:106506                        cs r62                   ; -|- Set y1 = -63
@2545:042414                        ts r04                   ; -|

@2546:102552                   r93: ca r97                   ; -|- ts n + k or ex n + k                         ; from 88r->
@2547:112735                        ad sep_param             ; -|

@2550:042561                   r95: ts r102                  ; Store ts, ex, ca, cs or cm n+k                   ; from 8r->                                        ; [LAS Issue no-lower-cm: When branched-to,
                                    ;                        ;                                                  ;                                                  ; does not load a possible cm from r97 at r93,
                                    ;                        ;                                                  ;                                                  ; so we get no mag of low end. But that would not
                                    ;                        ;                                                  ;                                                  ; be completely right either, as it's a packed
                                    ;                        ;                                                  ;                                                  ; word with an exp.]
@2551:102412                        ca r02
@2552:000000                   r97: .word 0                  ; -|                                               ; from (180r)
@2553:066413                        ex r03                   ;  |
;             .if (1-f24)            srh 9                    ;  |

@2554:042745 .if f24                ts float24_tmp

@2555:066414                        ex r04                   ;  |
@2556:155011                        slh 9                    ;  |

@2557:176747 .if f24                md float24_low_exp_mask
@2560:032745 .if f24                sd float24_tmp

@2561:000000                  r102: .word 0                  ;  |                                               ; (95r)

@2562:042744 .if f24                ts float24_low           ;                                                  ; [Note ex leaves B alone]
@2563:161011 .if f24                srh 9
@2564:042745 .if f24                ts float24_tmp
@2565:102744 .if f24                ca float24_low
@2566:176746 .if f24                md float24_low_mant_mask

@2567:161011                        srh 9                    ;  |- Perform ts, ex, ca, cs or cm                 ; [saves low mant in B]

@2570:066745 .if f24                ex float24_tmp           ;                                                  ; [Note ex leaves B alone]

@2571:066413                        ex r03                   ;  |
@2572:042412                        ts r02                   ;  |
@2573:155017                        slh 15                   ;  |                                               ; [gets low mant back from B]
@2574:066413                        ex r03                   ;  |
@2575:076702                  r108: sp r177                  ; -|

@2576:122412                  r109: cm r02                   ; -|                                               ;  166r->
@2577:114000                        su 0                     ;  |- x1 != 0?
@2600:072474                        cp r52                   ; -|

@2601:122413                        cm r03                   ; -|
@2602:114000                        su 0                     ;  |- x1' != 0?
@2603:072613                        cp r122                  ; -|

@2604:116472                        su r50                   ; -|
@2605:112431                        ad r17                   ;  |- Form |x1'| - 1                               ; PROBABLY AD op code
@2606:042413                        ts r03                   ; -|

@2607:102412                        ca r02                   ; -|- x1 > 0?
@2610:072502                        cp r58                   ; -|

@2611:116472                        su r50                   ; -|- Form x1 - 2**-15
@2612:042412                        ts r02                   ; -|

@2613:106413                  r122: cs r03                   ; -|- Complement x1'                               ; [LAS was transcription error ca r03]             ;   114r->
@2614:042413                        ts r03                   ; -|

@2615:142412                        mr r02                   ; -|- Form x1*x1'
@2616:076667                        sp r166                  ; -|

@2617:106736                  r126: cs tmp                   ; -|                                               ; 12r->
@2620:042736                        ts tmp                   ;  |- Complement x2, x2'
@2621:106552                        cs r97                   ; -|

@2622:066561                  r129: ex r102                  ; -|                                               ; r9 ->
@2623:116414                        su r04                   ;  |- Form and store  y2 - yl
@2624:042552                        ts r97                   ; -|

@2625:072636                        cp r141                  ; y2 - y1 > 0?

@2626:112414                        ad r04                   ; -|
@2627:042414                        ts r04                   ;  |
@2630:102412                        ca r02                   ;  |
@2631:066736                        ex tmp                   ;  |- Interchange (x1, x1', y1) and (x2, x2', y2)
@2632:042412                        ts r02                   ;  |
@2633:102413                        ca r03                   ;  |
@2634:066561                        ex r102                  ;  |
@2635:042413                        ts r03                   ; -|

@2636:122552                  r141: cm r97                   ; -|                                               ; 132r->
@2637:116422                        su r10                   ;  |-  |y2 - y1| - 29 > 0?
@2640:072642                        cp r145                  ; -|

@2641:076703                        sp next_inst             ; No need for addition

@2642:112415                  r145: ad r05                   ; -|- Store  sr *1 +|y2 - y1|                      ; 143r->
@2643:042650                        ts r151                  ; -|

@2644:102472                        ca r50                   ; -|- Set y2 = l
@2645:066561                        ex r102                  ; -|

@2646:161017                        srh 15                   ; -|
@2647:112736                        ad tmp                   ;  |
@2650:000000                  r151: .word 0                  ;  |- Form and store                               ; (146r)
@2651:042736                        ts tmp                   ;  |  (x2 + x2' * 2**-15) * 2**(-1 - |y2 - y1|)
@2652:155017                        slh 15                   ;  |
@2653:066413                        ex r03                   ; -|

@2654:161017                        srh 15                   ; -|
@2655:112412                        ad r02                   ;  |-    Form (x1 + x1' * 2**-15) * 2**-l
@2656:161001                        srh 1                    ; -|

@2657:042412                  r158: ts r02                   ; Store x1                                         ;  20r->

@2660:155017                        slh 15                   ; -|
@2661:126413                        sa r03                   ;  |                                               ; [LAS was transcription error ts r03]
@2662:042413                        ts r03                   ;  |- Add x1, x1' and x2, x2'
@2663:102736                        ca tmp                   ;  |
@2664:112412                        ad r02                   ;  |
@2665:042412                  r164: ts r02                   ; -|                                               ; 53r->

@2666:142413                        mr r03                   ; Does sign x1 = sign x1'?
@2667:072576                  r166: cp r109                  ;                                                  ;  125r->

@2670:102413                  r167: ca r03                   ; -|                                               ; 59r->
@2671:161017                        srh 15                   ;  |
@2672:112412                        ad r02                   ;  |
@2673:166426                        sf r14                   ;  |- Scale factor and store x1, x1'
@2674:042412                        ts r02                   ;  |                                               ; [LAS was transcription error ta r02]
@2675:155017                        slh 15                   ;  |
@2676:042413                        ts r03                   ; -|                                               ; [LAS was transcription error ta r03]

@2677:106426                        cs r14                   ; -|
@2700:112561                        ad r102                  ;  |- Form exponent
@2701:112414                        ad r04                   ;  |
@2702:042414                  r177: ts r04                   ; -|                                               ; 108r->

@2703:132704             next_inst: ao exec_inst             ; increase address                                 ; [LAS was transcription error ao r197]
@2704:100000             exec_inst: ca 0                     ; Pick up next instruction
@2705:076751                        sp halt_if_zero
@2706:042552                        ts r97                   ; -|
@2707:046500           inst_stored: td r56                   ;  |                                               ; Good place for a breakpoint. Int inst in r97.
@2710:046717                        td r189                  ;  |- Store instruction and digits
@2711:112735                        ad sep_param             ;  |
@2712:046721                        td r191                  ; -|
@2713:161033                        srh 27                   ; -|
@2714:155021                        slh 17                   ;  |- Form sp to address for particular instruction
@2715:112504                        ad r60                   ;  |
@2716:042734                  r188: ts dispatch              ; -|
@2717:100000                  r189: ca 0                     ; -|                                               ; (182r)
@2720:042561                        ts r102                  ;  |
@2721:100000                  r191: ca 0                     ;  |                                               ; (181r)

@2722:042744 .if f24                ts float24_low
@2723:161011 .if f24                srh 9
@2724:042745 .if f24                ts float24_tmp
@2725:102744 .if f24                ca float24_low
@2726:176746 .if f24                md float24_low_mant_mask

@2727:161011                        srh 9                    ;  |- Pick up x2, x2' and y2. Store x2 in reg. 198, y2 in reg 102. Hold x2' in AC

@2730:066745 .if f24                ex float24_tmp

@2731:066561                        ex r102                  ;  |
@2732:042736                        ts tmp                   ;  |
@2733:155017                        slh 15                   ; -|

;             .if do_print           .print "1 dis='%i' inst='%i' tmp=x2=%o r102=y2=%o AC=x2'=0o%ao r02=x1=%o r03=x1'=%o r04=y1=%o t=%fl r189=%o mra=%fm mra-oct=%o %o %o", dispatch, r97, tmp, r102, r02, r03, r04, t, r189, mra, mra + 0, mra + 1, mra + 2
@2734:000000              dispatch: .word 0                  ; Go to part of I.S. for particular instruction    ; (188r)
                              r197:
@2735:000001             sep_param: .word main_sep_param     ; Separation parameter                             ; [LAS There is a note in Subroutines.pdf pdf-page 25 that says r197 is "pax2"
                              r198:
@2736:000000                   tmp: .word 0                  ; Temporary storage

@2737:112472                  r199: ad r50                   ;                                                  ; from 70r-->
@2740:072704                        cp exec_inst             ; Does address equal ax?
@2741:074000                  r201: sp 0                     ; Return to register following sp ax               ; (66r)

@2742:102575                  r202: ca r108                  ; -|- Produce overflow alarm                       ; from 90r
@2743:112575                        ad r108                  ; -|

@2744:000000           float24_low: .word 0
@2745:000000           float24_tmp: .word 0
@2746:000777 float24_low_mant_mask: .word 0o000777
@2747:177000  float24_low_exp_mask: .word 0o177000
@2750:000000       float24_ac_save: .word 0

                                    ; [LAS Added this section, which halts the machine if it encounters an
                                    ;  si 0 (i.e., a zero instruction). This came up in L&Z, where the
                                    ;  compiled code, which is then spax-interpreted, does not have a
                                    ;  clean termination. So it runs into the zero at the end and
                                    ;  crashes. Seems to be a hole in the design of L&Z or the float lib
                                    ;  or both, where termination conditions aren't clear. Perhaps some of
                                    ;  the illegible hand-written notes address it.]

@2751:052761          halt_if_zero: ta hiz_rtn
@2752:042762                        ts hiz_ac
@2753:122762                        cm hiz_ac                ; Nice zero-checking idiom from the frac printer. Ah, one's-complement!
@2754:114000                        su 0
@2755:072757                        cp hiz1
@2756:076760                        sp hiz2
@2757:000000                  hiz1: si 0                     ; After all that, we interpret an si 0 as an si 0
@2760:102762                  hiz2: ca hiz_ac
@2761:074000               hiz_rtn: sp 0
@2762:000000                hiz_ac: .word 0


                                    ; end .include "float-lib.ww"

                                    ; LAS include printer for the LZ source code

                                    ; .include "print-prog.ww"

                        print_prog:
@2763:053042                        ta ppg_rtn

                                    ; First section with pr_ label prefix reads all the
                                    ; chars from the pet into pp_buffer.

                                    ; After reading, we assume there is at least one zero
                                    ;  at the end of the chars but within the buffer, so we
                                    ;  can terminate the print and zeroing loops

@2764:001004              pr_enter: si 0o1004                ; PETR A, rewind
@2765:103002                        ca pr_buf
@2766:046777                        td pr_st_char
@2767:014000               pr_loop: rd 0
@2770:043005                        ts pr_char
@2771:117003                        su pr_stop_char
@2772:043004                        ts pr_tmp
@2773:123004                        cm pr_tmp
@2774:114000                        su 0
@2775:073006                        cp pr_done
@2776:103005                        ca pr_char
@2777:040000            pr_st_char: ts 0
@3000:132777                        ao pr_st_char
@3001:076767                        sp pr_loop
@3002:000040                pr_buf: .word comp_code          ; share the "heap space" with the L&Z compiled code
@3003:000061          pr_stop_char: .flexl "<stop>"
@3004:000000                pr_tmp: .word 0
@3005:000000               pr_char: .word 0
                           pr_done:

                                    ; This section with pp label prints the buffer to the flexowriter

@3006:000225              pp_enter: si 149
@3007:103002                        ca pr_buf
@3010:047011                        td pp_rd_char
                           pp_loop:
@3011:100000            pp_rd_char: ca 0
@3012:043023                        ts pp_tmp
@3013:123023                        cm pp_tmp
@3014:114000                        su 0
@3015:073024                        cp pp_done
@3016:103023                        ca pp_tmp
@3017:170012                        clc 10
@3020:024000                        rc 0
@3021:133011                        ao pp_rd_char
@3022:077011                        sp pp_loop
@3023:000000                pp_tmp: .word 0
                           pp_done:

                                    ; Last section with pz label zeroes-out the buffer to return it to its orginal state.

                          pz_enter:
@3024:103002                        ca pr_buf
@3025:047027                        td pz_rd_char
@3026:047035                        td pz_wr_zero
                           pz_loop:
@3027:100000            pz_rd_char: ca 0
@3030:043041                        ts pz_tmp
@3031:123041                        cm pz_tmp
@3032:114000                        su 0
@3033:073042                        cp pz_done
@3034:100000                        ca 0
@3035:040000            pz_wr_zero: ts 0
@3036:133027                        ao pz_rd_char
@3037:133035                        ao pz_wr_zero
@3040:077027                        sp pz_loop
@3041:000000                pz_tmp: .word 0
                           pz_done:
@3042:074000               ppg_rtn: sp 0

                                    ; end .include "print-prog.ww"
