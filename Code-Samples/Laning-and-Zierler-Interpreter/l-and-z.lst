                                         ; LAS 1/27/25. This file produced using wwlzparser from
                                         ; L-and-Z-Transcript-With-Repairs-Tab.txt. See ./runtest.sh.
                                         ; L-and-Z-Transcript-With-Repairs-Tab.txt in turn is a
                                         ; set of hand-corrections to L-and-Z-Transcript-Tab.txt. These files
                                         ; are now both read-only. l-and-z.ww will henceforth contain all changes.

                                         ; Below, lines beginning with " ; |" are comments from the original
                                         ; text (with bracketed modern notes from the transcription. Similarly,
                                         ; comments in the first comment field following an instruction are
                                         ; from the original text. Subsequent comment fields are modern notes.

                                         ; | [Transcribed by Larry Stabile, 10/13/24]
                                         ; | [Transcription notes and questions in square brackets]
                                         ; | [Meaning of double-bars?]
                                         ; | [Did not transcribe "light-colored" text]
                                         ; |
                                         ; | Instrumentation Laboratory
                                         ; | Massachusetts Institute of Technology
                                         ; | Cambridge, Mass.
                                         ; | Prepared by: J.H Laning Jr.
                                         ; | Date: 3/53
                                         ; | (Tape T-2134-m8 plus correction tape P-2134-10)
                                         ; |
                                         ; | Sheet 1/20
                                         ; | a1 (Read-in)
                                         ; |
                                         .jumpto lz_begin
                                         .org 0o40
@0040.0032:000000             comp_code: .words 0o1000 - comp_code, 0
@0041.0033:000000
@0042.0034:000000
@0043.0035:000000
@0044.0036:000000
@0045.0037:000000
@0046.0038:000000
@0047.0039:000000
@0050.0040:000000
@0051.0041:000000
@0052.0042:000000
@0053.0043:000000
@0054.0044:000000
@0055.0045:000000
@0056.0046:000000
@0057.0047:000000
@0060.0048:000000
@0061.0049:000000
@0062.0050:000000
@0063.0051:000000
@0064.0052:000000
@0065.0053:000000
@0066.0054:000000
@0067.0055:000000
@0070.0056:000000
@0071.0057:000000
@0072.0058:000000
@0073.0059:000000
@0074.0060:000000
@0075.0061:000000
@0076.0062:000000
@0077.0063:000000
@0100.0064:000000
@0101.0065:000000
@0102.0066:000000
@0103.0067:000000
@0104.0068:000000
@0105.0069:000000
@0106.0070:000000
@0107.0071:000000
@0110.0072:000000
@0111.0073:000000
@0112.0074:000000
@0113.0075:000000
@0114.0076:000000
@0115.0077:000000
@0116.0078:000000
@0117.0079:000000
@0120.0080:000000
@0121.0081:000000
@0122.0082:000000
@0123.0083:000000
@0124.0084:000000
@0125.0085:000000
@0126.0086:000000
@0127.0087:000000
@0130.0088:000000
@0131.0089:000000
@0132.0090:000000
@0133.0091:000000
@0134.0092:000000
@0135.0093:000000
@0136.0094:000000
@0137.0095:000000
@0140.0096:000000
@0141.0097:000000
@0142.0098:000000
@0143.0099:000000
@0144.0100:000000
@0145.0101:000000
@0146.0102:000000
@0147.0103:000000
@0150.0104:000000
@0151.0105:000000
@0152.0106:000000
@0153.0107:000000
@0154.0108:000000
@0155.0109:000000
@0156.0110:000000
@0157.0111:000000
@0160.0112:000000
@0161.0113:000000
@0162.0114:000000
@0163.0115:000000
@0164.0116:000000
@0165.0117:000000
@0166.0118:000000
@0167.0119:000000
@0170.0120:000000
@0171.0121:000000
@0172.0122:000000
@0173.0123:000000
@0174.0124:000000
@0175.0125:000000
@0176.0126:000000
@0177.0127:000000
@0200.0128:000000
@0201.0129:000000
@0202.0130:000000
@0203.0131:000000
@0204.0132:000000
@0205.0133:000000
@0206.0134:000000
@0207.0135:000000
@0210.0136:000000
@0211.0137:000000
@0212.0138:000000
@0213.0139:000000
@0214.0140:000000
@0215.0141:000000
@0216.0142:000000
@0217.0143:000000
@0220.0144:000000
@0221.0145:000000
@0222.0146:000000
@0223.0147:000000
@0224.0148:000000
@0225.0149:000000
@0226.0150:000000
@0227.0151:000000
@0230.0152:000000
@0231.0153:000000
@0232.0154:000000
@0233.0155:000000
@0234.0156:000000
@0235.0157:000000
@0236.0158:000000
@0237.0159:000000
@0240.0160:000000
@0241.0161:000000
@0242.0162:000000
@0243.0163:000000
@0244.0164:000000
@0245.0165:000000
@0246.0166:000000
@0247.0167:000000
@0250.0168:000000
@0251.0169:000000
@0252.0170:000000
@0253.0171:000000
@0254.0172:000000
@0255.0173:000000
@0256.0174:000000
@0257.0175:000000
@0260.0176:000000
@0261.0177:000000
@0262.0178:000000
@0263.0179:000000
@0264.0180:000000
@0265.0181:000000
@0266.0182:000000
@0267.0183:000000
@0270.0184:000000
@0271.0185:000000
@0272.0186:000000
@0273.0187:000000
@0274.0188:000000
@0275.0189:000000
@0276.0190:000000
@0277.0191:000000
@0300.0192:000000
@0301.0193:000000
@0302.0194:000000
@0303.0195:000000
@0304.0196:000000
@0305.0197:000000
@0306.0198:000000
@0307.0199:000000
@0310.0200:000000
@0311.0201:000000
@0312.0202:000000
@0313.0203:000000
@0314.0204:000000
@0315.0205:000000
@0316.0206:000000
@0317.0207:000000
@0320.0208:000000
@0321.0209:000000
@0322.0210:000000
@0323.0211:000000
@0324.0212:000000
@0325.0213:000000
@0326.0214:000000
@0327.0215:000000
@0330.0216:000000
@0331.0217:000000
@0332.0218:000000
@0333.0219:000000
@0334.0220:000000
@0335.0221:000000
@0336.0222:000000
@0337.0223:000000
@0340.0224:000000
@0341.0225:000000
@0342.0226:000000
@0343.0227:000000
@0344.0228:000000
@0345.0229:000000
@0346.0230:000000
@0347.0231:000000
@0350.0232:000000
@0351.0233:000000
@0352.0234:000000
@0353.0235:000000
@0354.0236:000000
@0355.0237:000000
@0356.0238:000000
@0357.0239:000000
@0360.0240:000000
@0361.0241:000000
@0362.0242:000000
@0363.0243:000000
@0364.0244:000000
@0365.0245:000000
@0366.0246:000000
@0367.0247:000000
@0370.0248:000000
@0371.0249:000000
@0372.0250:000000
@0373.0251:000000
@0374.0252:000000
@0375.0253:000000
@0376.0254:000000
@0377.0255:000000
@0400.0256:000000
@0401.0257:000000
@0402.0258:000000
@0403.0259:000000
@0404.0260:000000
@0405.0261:000000
@0406.0262:000000
@0407.0263:000000
@0410.0264:000000
@0411.0265:000000
@0412.0266:000000
@0413.0267:000000
@0414.0268:000000
@0415.0269:000000
@0416.0270:000000
@0417.0271:000000
@0420.0272:000000
@0421.0273:000000
@0422.0274:000000
@0423.0275:000000
@0424.0276:000000
@0425.0277:000000
@0426.0278:000000
@0427.0279:000000
@0430.0280:000000
@0431.0281:000000
@0432.0282:000000
@0433.0283:000000
@0434.0284:000000
@0435.0285:000000
@0436.0286:000000
@0437.0287:000000
@0440.0288:000000
@0441.0289:000000
@0442.0290:000000
@0443.0291:000000
@0444.0292:000000
@0445.0293:000000
@0446.0294:000000
@0447.0295:000000
@0450.0296:000000
@0451.0297:000000
@0452.0298:000000
@0453.0299:000000
@0454.0300:000000
@0455.0301:000000
@0456.0302:000000
@0457.0303:000000
@0460.0304:000000
@0461.0305:000000
@0462.0306:000000
@0463.0307:000000
@0464.0308:000000
@0465.0309:000000
@0466.0310:000000
@0467.0311:000000
@0470.0312:000000
@0471.0313:000000
@0472.0314:000000
@0473.0315:000000
@0474.0316:000000
@0475.0317:000000
@0476.0318:000000
@0477.0319:000000
@0500.0320:000000
@0501.0321:000000
@0502.0322:000000
@0503.0323:000000
@0504.0324:000000
@0505.0325:000000
@0506.0326:000000
@0507.0327:000000
@0510.0328:000000
@0511.0329:000000
@0512.0330:000000
@0513.0331:000000
@0514.0332:000000
@0515.0333:000000
@0516.0334:000000
@0517.0335:000000
@0520.0336:000000
@0521.0337:000000
@0522.0338:000000
@0523.0339:000000
@0524.0340:000000
@0525.0341:000000
@0526.0342:000000
@0527.0343:000000
@0530.0344:000000
@0531.0345:000000
@0532.0346:000000
@0533.0347:000000
@0534.0348:000000
@0535.0349:000000
@0536.0350:000000
@0537.0351:000000
@0540.0352:000000
@0541.0353:000000
@0542.0354:000000
@0543.0355:000000
@0544.0356:000000
@0545.0357:000000
@0546.0358:000000
@0547.0359:000000
@0550.0360:000000
@0551.0361:000000
@0552.0362:000000
@0553.0363:000000
@0554.0364:000000
@0555.0365:000000
@0556.0366:000000
@0557.0367:000000
@0560.0368:000000
@0561.0369:000000
@0562.0370:000000
@0563.0371:000000
@0564.0372:000000
@0565.0373:000000
@0566.0374:000000
@0567.0375:000000
@0570.0376:000000
@0571.0377:000000
@0572.0378:000000
@0573.0379:000000
@0574.0380:000000
@0575.0381:000000
@0576.0382:000000
@0577.0383:000000
@0600.0384:000000
@0601.0385:000000
@0602.0386:000000
@0603.0387:000000
@0604.0388:000000
@0605.0389:000000
@0606.0390:000000
@0607.0391:000000
@0610.0392:000000
@0611.0393:000000
@0612.0394:000000
@0613.0395:000000
@0614.0396:000000
@0615.0397:000000
@0616.0398:000000
@0617.0399:000000
@0620.0400:000000
@0621.0401:000000
@0622.0402:000000
@0623.0403:000000
@0624.0404:000000
@0625.0405:000000
@0626.0406:000000
@0627.0407:000000
@0630.0408:000000
@0631.0409:000000
@0632.0410:000000
@0633.0411:000000
@0634.0412:000000
@0635.0413:000000
@0636.0414:000000
@0637.0415:000000
@0640.0416:000000
@0641.0417:000000
@0642.0418:000000
@0643.0419:000000
@0644.0420:000000
@0645.0421:000000
@0646.0422:000000
@0647.0423:000000
@0650.0424:000000
@0651.0425:000000
@0652.0426:000000
@0653.0427:000000
@0654.0428:000000
@0655.0429:000000
@0656.0430:000000
@0657.0431:000000
@0660.0432:000000
@0661.0433:000000
@0662.0434:000000
@0663.0435:000000
@0664.0436:000000
@0665.0437:000000
@0666.0438:000000
@0667.0439:000000
@0670.0440:000000
@0671.0441:000000
@0672.0442:000000
@0673.0443:000000
@0674.0444:000000
@0675.0445:000000
@0676.0446:000000
@0677.0447:000000
@0700.0448:000000
@0701.0449:000000
@0702.0450:000000
@0703.0451:000000
@0704.0452:000000
@0705.0453:000000
@0706.0454:000000
@0707.0455:000000
@0710.0456:000000
@0711.0457:000000
@0712.0458:000000
@0713.0459:000000
@0714.0460:000000
@0715.0461:000000
@0716.0462:000000
@0717.0463:000000
@0720.0464:000000
@0721.0465:000000
@0722.0466:000000
@0723.0467:000000
@0724.0468:000000
@0725.0469:000000
@0726.0470:000000
@0727.0471:000000
@0730.0472:000000
@0731.0473:000000
@0732.0474:000000
@0733.0475:000000
@0734.0476:000000
@0735.0477:000000
@0736.0478:000000
@0737.0479:000000
@0740.0480:000000
@0741.0481:000000
@0742.0482:000000
@0743.0483:000000
@0744.0484:000000
@0745.0485:000000
@0746.0486:000000
@0747.0487:000000
@0750.0488:000000
@0751.0489:000000
@0752.0490:000000
@0753.0491:000000
@0754.0492:000000
@0755.0493:000000
@0756.0494:000000
@0757.0495:000000
@0760.0496:000000
@0761.0497:000000
@0762.0498:000000
@0763.0499:000000
@0764.0500:000000
@0765.0501:000000
@0766.0502:000000
@0767.0503:000000
@0770.0504:000000
@0771.0505:000000
@0772.0506:000000
@0773.0507:000000
@0774.0508:000000
@0775.0509:000000
@0776.0510:000000
@0777.0511:000000

                                         .org 0o1000
                               val_temp:                          ; [LAS temp values start here and groq down. This is the "197" allocation point

@1000.0512:076771              lz_begin: sp print_prog            ;                                                  ; [LAS Added this call so we get the program and the results printed on the flex]
@1001.0513:075002                        sp a1

                                         ; [LAS Define some vars for the first few value-temp locs, for debugger]
                                         .pp val_1, val_temp - 2
                                         .pp val_2, val_1 - 2
                                         .pp val_3, val_2 - 2
                                         .pp val_4, val_3 - 2
                                         .pp val_5, val_4 - 2
                                         .pp val_6, val_5 - 2
                                         .pp val_7, val_6 - 2
                                         .pp val_8, val_7 - 2
                                         .pp val_9, val_8 - 2

                                         ; [LAS This is the original entry point]
                                     a1:
                                         ; [LAS -- the original said si 128, which selects the
                                         ; mechanical paper tape reader. Changed to support our
                                         ; "rewindable" photoeletric tape reader. The simulator
                                         ; uses the same (python) code to support both readers.]

@1002.0514:001004                        si 0o1004                ;                                                  ; PETR A, rewind

@1003.0515:131046                   1a1: ao 36a1
@1004.0516:015004                   2a1: rd 2a1
                                         ;                        ;                                                  ; .print "xxxxx 1 rd %ao"
@1005.0517:111103                   3a1: ad a3                    ; (l.c. or u.c.)                                   ; [LAS was ad (a3/1a3)]
@1006.0518:045012                        td 8a1
@1007.0519:045253                        td 40a4
@1010.0520:045020                        td 14a1
@1011.0521:045030                        td 22a1
@1012.0522:100000                   8a1: ca 0
@1013.0523:115107                        su 4a3                   ; -| Is symbol
@1014.0524:071016                  10a1: cp 12a1                  ; -| a number?
@1015.0525:075251                  11a1: sp 38a4                  ;                                                  ; [LAS was sp (38a4/58a4)]
@1016.0526:101142                  12a1: ca 31a3                  ; 31a3 is the normal mode                          ; [LAS was ca (33a3/31a3)]
@1017.0527:045015                        td 11a1
@1020.0528:100000                  14a1: ca 0
@1021.0529:114000                        su 0                     ; (Is symbol a period?)
@1022.0530:071003                        cp 1a1
@1023.0531:115171                        su 54a3                  ; -| l.c. no. or exponent?
@1024.0532:071260                        cp 45a4                  ; -|
@1025.0533:101156                        ca 43a3                  ; -| set to interpret
@1026.0534:045277                        td 60a4                  ;  | digit as an
@1027.0535:105301                        cs 62a4                  ; -| exponent
@1030.0536:110000                  22a1: ad 0
@1031.0537:071052                  23a1: cp 40a1                  ; --> if digit is zero                             ; [LAS hand-written note in listing crossed out 39r and put 40r, which makes more sense]
@1032.0538:165166                        sf 51a3                  ; -|
@1033.0539:041055                  25a1: ts 43a1                  ;  | Form (24,6) version
@1034.0540:101216                        ca 11a4                  ;  | of digit as an
@1035.0541:115166                        su 51a3                  ;  | integer in (43r, 44r
@1036.0542:154011                        slr 9                    ;  |
@1037.0543:041056                        ts 44a1                  ; -|
                                         ;                        ;                                                  ;.print "digit read-in %fl", 43a1
@1040.0544:101033                        ca 25a1
@1041.0545:045044                        td 34a1
                                         ; | Sheet 2/20
                                         ; | a1

@1042.0546:076416                  32a1: sp ax                    ; (programmed arithmetic
@1043.0547:141364                        mr 4a7                   ; (i.e., by 10)                                    ; [LAS was "mr 497" -- transcription error]
@1044.0548:110000                  34a1: ad 0
@1045.0549:076416                        sp ax
@1046.0550:131047                  36a1: ao 37a1                  ; (reset to 38r)
@1047.0551:075004                  37a1: sp 2a1
@1050.0552:000000                  38a1: .word 0                  ; (counter for digits before decimal pt            ; [LAS eliminated parens for opcode p or just data in this and following sections]
@1051.0553:000000                  39a1: .word 0                  ; (  "      "    "    after     "    ")
@1052.0554:101340                  40a1: ca 10a6
@1053.0555:045044                        td 34a1
@1054.0556:075042                        sp 32a1
@1055.0557:000000                  43a1: .word 0                  ; -| Temporary storage for
@1056.0558:000000                  44a1: .word 0                  ; -| integer during read-in
                                         ; |
                                         ; | Sheet 3/20
                                         ; | a2 (PRINT)
                                         ; |
                                     a2:
@1057.0559:075765                        sp a16                   ;                                                  ; [LAS section offset was 0r]
@1060.0560:075507                        sp 28a10
@1061.0561:102000                   2a2: ca 11a16                 ; -| store "sp to print
@1062.0562:075377                        sp 9a8                   ; -| control"
@1063.0563:015063                   4a2: rd 4a2                   ; -| read in
                                         ;                        ;                                                  ; .print "xxxxx 2 rd %ao"
@1064.0564:131074                        ao 13a2                  ;  | "RINT"
@1065.0565:071063                        cp 4a2                   ; -|
@1066.0566:075004                        sp 2a1
@1067.0567:105122                   8a2: cs 15a3                  ; -| reset counter                                 ; [LAS was "ca 15a3" -- transcription error]
@1070.0568:041074                        ts 13a2                  ; -|
@1071.0569:075765                        sp a16
@1072.0570:075502                        sp 23a10
@1073.0571:075067                  12a2: sp 8a2                   ;                                                  ; [LAS was (sp 8r/p 0)]
@1074.0572:177774                  13a2: .word -3                 ; (counter)
@1075.0573:131134                  14a2: ao 25a3                  ; -| part of SP routine
@1076.0574:075351                        sp 19a6                  ;  |
@1077.0575:111543                        ad 56a10                 ;  |
@1100.0576:075336                        sp 8a6                   ; -|
@1101.0577:076416                  18a2: sp ax                    ; -| START
@1102.0578:074040                        sp comp_code             ; -|                                               ; [LAS was sp 32] [LAS was sp a1, changed to go to start of compiled code]
                                         ; |
                                         ; | Sheet 4/20
                                         ; | a3 (Lower case symbols)
                                         ; |
                                     a3:
@1103.0579:001103                        .word a3
@1104.0580:001203                   1a3: .word a4
@1105.0581:075265                 var_e: sp 50a4                  ; e
@1106.0582:000011                        .word 9                  ; 8
@1107.0583:074000                   4a3: sp 0
@1110.0584:000000                        .word 0                  ; |                                                ; [LAS was blank][Hard to read but looking up flex code it's vertical-bar]
@1111.0585:075265                 var_a: sp 50a4                  ; a
@1112.0586:000004                        .word 4                  ; 3
@1113.0587:075004                        sp 2a1                   ; space
@1114.0588:075465                        sp 10a10                 ; =
@1115.0589:075265                 var_s: sp 50a4                  ; s
@1116.0590:000005                        .word 5                  ; 4
@1117.0591:075265                        sp 50a4                  ; i
@1120.0592:075267                        sp 52a4                  ; +
@1121.0593:075265                 var_u: sp 50a4                  ; u
@1122.0594:000003                  15a3: .word 3                  ; 2
@1123.0595:000000                        .word 0                  ; shift ribbon                                     ; [LAS was blank]
@1124.0596:000000                  17a3: .word 0                  ; . [period]                                       ; [LAS was "(p 0/sp 8a2)"]
@1125.0597:075265                 var_d: sp 50a4                  ; d
@1126.0598:000006                        .word 6                  ; 5
@1127.0599:075265                 var_r: sp 50a4                  ; r                                                ; [LAS was .word 50a4. Transcription error.]
@1130.0600:000002                  21a3: .word 2                  ; 1
@1131.0601:075265                 var_j: sp 50a4                  ; j
@1132.0602:000010                        .word 8                  ; 7
@1133.0603:075265                 var_n: sp 50a4                  ; n
@1134.0604:075471                  25a3: sp 14a10                 ; ,
@1135.0605:075265                 var_f: sp 50a4                  ; f
@1136.0606:000007                        .word 7                  ; 6
@1137.0607:075265                 var_c: sp 50a4                  ; c
@1140.0608:075272                        sp 55a4                  ; -
@1141.0609:075265                 var_k: sp 50a4                  ; k
@1142.0610:001275                  31a3: .word 58a4
@1143.0611:075265                 var_t: sp 50a4                  ; t
@1144.0612:001251                  33a3: .word 38a4
                                         ; | Sheet 5/20
                                         ; | a3 (continued)
@1145.0613:075265                 var_z: sp 50a4                  ; z
@1146.0614:075004                        sp 2a1                   ; back space
@1147.0615:075265                 var_l: sp 50a4                  ; l
@1150.0616:075004                        sp 2a1                   ; tabulate
@1151.0617:075265                 var_w: sp 50a4                  ; w
@1152.0618:001303                  39a3: .word a5
@1153.0619:075265                 var_h: sp 50a4                  ; h
@1154.0620:075004                        sp 2a1                   ; carr. return
@1155.0621:075265                 var_y: sp 50a4                  ; y
@1156.0622:001326                  43a3: .word a6
@1157.0623:075265                 var_p: sp 50a4                  ; p
@1160.0624:106420                  45a3: cs 2ax
@1161.0625:075265                 var_q: sp 50a4                  ; q
@1162.0626:040000                  47a3: ts 0
@1163.0627:075265                 var_o: sp 50a4                  ; o (letter)
@1164.0628:075004                        sp 2a1                   ; stop
@1165.0629:075265                 var_b: sp 50a4                  ; b
@1166.0630:000000                  51a3: .word 0
@1167.0631:075265                 var_g: sp 50a4                  ; g
@1170.0632:001104                  53a3: .word 1a3
@1171.0633:000012                  54a3: .word 10                 ; 9
@1172.0634:140000                  55a3: mr 0
@1173.0635:075265                 var_m: sp 50a4                  ; m
@1174.0636:075255                        sp 42a4                  ; shift to u.c.
@1175.0637:075265                 var_x: sp 50a4                  ; x
@1176.0638:150000                  59a3: dv 0
@1177.0639:075265                 var_v: sp 50a4                  ; v
@1200.0640:075203                        sp a4                    ; shift to l.c.
@1201.0641:000001                  62a3: .word 1                  ; 0 (zero)
@1202.0642:075004                        sp 2a1                   ; nullify
                                         ; |
                                         ; | Sheet 6/20
                                         ; | a4 (Upper case symbols & misc. program)
                                         ; |
                                     a4:
@1203.0643:101103                   0a4: ca a3
@1204.0644:045005                   1a4: td 3a1
@1205.0645:075004                        sp 2a1                   ; E (not used)
@1206.0646:000023                        .word 19                 ; 8 (exp.)
@1207.0647:001172                   4a4: .word 55a3
@1210.0648:022000                   5a4: .word 0.22000            ; _                                                ; [LAS Did say + not _ and 0,22000 but looks like hand-written sheet is as shown here now. Transcription error.]
@1211.0649:001176                   6a4: .word 59a3               ; A (not used)
@1212.0650:000016                        .word 14                 ; 3 (exp.)
@1213.0651:075004                        sp 2a1                   ; space
@1214.0652:075004                        sp 2a1                   ; . ['dot', not period] (see note)
@1215.0653:075523                        sp 40a10                 ; S
@1216.0654:000017                  11a4: .word 15                 ; 4 (exp.)
@1217.0655:111176                  12a4: ad 59a3                  ; I (not used)
@1220.0656:075411                        sp a9                    ; /
@1221.0657:001427                  14a4: .word 14a9               ; U (not used)
@1222.0658:000015                        .word 13                 ; 2 (exp.)
@1223.0659:000000                        .word 0                  ; shift ribbon                                     ; [LAS was blank]
@1224.0660:075614                        sp a12                   ; )
@1225.0661:075662                  18a4: sp a13                   ; D (not used)
@1226.0662:000020                        .word 16                 ; 5 (exp.)
@1227.0663:040000                  20a4: ts 0                     ; R (not used)
@1230.0664:000014                  21a4: .word 12                 ; 1 (exp.)
@1231.0665:111733                  22a4: ad 41a13                 ; J (not used)
@1232.0666:000022                        .word 18                 ; 7 (exp.)
@1233.0667:106420                  24a4: cs 2ax                   ; N (not used)                                     ; [LAS was (cs 2ax/ca 2ax)]
@1234.0668:075571                        sp a11                   ; (
@1235.0669:000000                        .word 0                  ; F                                                ; [LAS was blank]
@1236.0670:000021                        .word 17                 ; 6 (exp.)
@1237.0671:075535                        sp 50a10                 ; C
@1240.0672:075423                        sp 10a9                  ; - (exp.)
                                         ; |
                                         ; | note: The symbol . ['dot', not period] can be used at the programmer's discretion to
                                         ; |  denote multiplication, where convenient typographically.
                                         ; |
                                         ; | Sheet 7/20
                                         ; | a4 (continued)
@1241.0673:051243                  30a4: ta 32a4                  ; K (not used)
@1242.0674:075433                        sp 18a9
@1243.0675:100000                  32a4: ca 0                     ; T (not used)
@1244.0676:075377                  33a4: sp 9a8
@1245.0677:075004                        sp 2a1                   ; Z (not used)
@1246.0678:075004                        sp 2a1                   ; back space
@1247.0679:102420                  36a4: ca 2ax                   ; L (not used)
@1250.0680:075004                        sp 2a1                   ; tabulate
@1251.0681:101253                  38a4: ca 40a4                  ; W (not used)
@1252.0682:115107                        su 4a3
@1253.0683:074000                  40a4: sp 0                     ; H (not used)
@1254.0684:075004                        sp 2a1                   ; carr. return
@1255.0685:101170                  42a4: ca 53a3                  ; Y (not used)
@1256.0686:075204                        sp 1a4
@1257.0687:075057                  44a4: sp a2                    ; P                                                ; [LAS was (sp a2/sp 2a2)]
@1260.0688:101152                  45a4: ca 39a3
@1261.0689:045277                        td 60a4                  ; Q (not used)
@1262.0690:105201                        cs 62a3
@1263.0691:075030                        sp 22a1                  ; O (letter) (not used)                            ; [LAS was 23a1. Transcription error.]
@1264.0692:075004                        sp 2a1                   ; stop
@1265.0693:111172                  50a4: ad 55a3                  ; B (not used)                                     ; [LAS was (55a3)]
@1266.0694:075244                  51a4: sp 33a4                  ;                                                  ; [LAS was sp (28a10/33r) -- had it at 28a10 but seems wrong so changed it]
@1267.0695:075241                  52a4: sp 30a4                  ; G (not used)
@1270.0696:075667                        sp 5a13
@1271.0697:000024                  54a4: .word 20                 ; 9 (exp.)
@1272.0698:075241                  55a4: sp 30a4
@1273.0699:075674                        sp 10a13                 ; M (not used)
@1274.0700:075255                        sp 42a4                  ; shift to u.c.
@1275.0701:101144                  58a4: ca 33a3                  ; X (not used)
@1276.0702:045015                        td 11a1                  ;                                                  ; [LAS was td 10a1.  Transcription error -- cross-out in hand-listing]
@1277.0703:074000                  60a4: sp 0                     ; V (not used)
@1300.0704:075203                        sp 0a4                   ; shift to l.c.
@1301.0705:000013                  62a4: .word 11                 ; 0 (zero exp.)
@1302.0706:075004                        sp 2a1                   ; nullify
                                         ; |
                                         ; | Sheet 8/20
                                         ; | a5 (Interpret MRA as lower case number)
                                         ; |
                                     a5:
@1303.0707:105051                        cs 39a1
@1304.0708:041051                        ts 39a1
@1305.0709:131051                   2a5: ao 39a1
@1306.0710:071322                        cp 15a5
@1307.0711:075366                        sp a8                    ; (select new address k)
@1310.0712:045312                        td 7a5
@1311.0713:076416                        sp ax                    ; (= sp 852) -| store number
@1312.0714:040000                   7a5: ts 0                     ;             | in (k, k+1)
@1313.0715:076416                        sp ax                    ;            -|
@1314.0716:101265                        ca 50a4                  ; -| form symbol mr k
@1315.0717:045320                        td 13a5                  ;  | or dv k, where
@1316.0718:101312                        ca 7a5                   ;  | k is address at
@1317.0719:115162                        su 47a3                  ;  | which number has
@1320.0720:110000                  13a5: ad 0                     ;  | just been stored
@1321.0721:075336                        sp 8a6                   ; -|
@1322.0722:076416                  15a5: sp ax
@1323.0723:151364                        dv 4a7                   ; (divide by 10)
@1324.0724:076416                        sp ax
@1325.0725:075305                        sp 2a5
                                         ; |
                                         ; | Sheet 9/20
                                         ; | a6 (Interpret MRA as exponent)
                                         ; |
                                     a6:
@1326.0726:101410                        ca 18a8                  ; -| store "sp exp" in
@1327.0727:045331                        td 3a6                   ;  | place of last-stored
@1330.0728:101350                        ca 18a6                  ;  | symbol (mr x or dv x)
@1331.0729:064000                   3a6: ex 0                     ; -|
@1332.0730:045166                        td 51a3                  ; -|
@1333.0731:101166                        ca 51a3                  ;  | store "+x"
@1334.0732:075377                        sp 9a8                   ; -|
@1335.0733:075351                        sp 19a6                  ; -| compute and store the
@1336.0734:075377                   8a6: sp 9a8                   ; -| exponent +-n
@1337.0735:076416                   9a6: sp ax                    ; -|
@1340.0736:101360                  10a6: ca a7                    ;  | reset MRA
@1341.0737:076416                        sp ax                    ;  | and various
@1342.0738:100000                        ca 0                     ;  | counters
@1343.0739:041050                  13a6: ts 38a1                  ;  |
@1344.0740:041051                        ts 39a1                  ;  |
@1345.0741:101343                        ca 13a6                  ;  |
@1346.0742:045046                        td 36a1                  ; -|
@1347.0743:075251                  17a6: sp 38a4                  ;                                                  ; [LAS was sp (38a4/14a9)]
@1350.0744:075701                  18a6: sp 15a13                 ; "sp exp"
@1351.0745:051357                  19a6: ta 25a6                  ;                                                  ; [LAS was td 25a6. Transcription error.]
@1352.0746:102422                        ca 4ax                   ; -|
@1353.0747:045356                        td 24a6                  ;  | Form +-n, where
@1354.0748:102420                  22a6: ca 2ax                   ;  | n is in MRA in                                ; [LAS was (ca 2ax/cs 2ax)]
@1355.0749:161017                        srh 15                   ;  | (24,6) form                                   ; [LAS was sr*]
@1356.0750:154000                  24a6: slr 0                    ; -|
@1357.0751:074000                  25a6: sp 0
                                         ; |
                                         ; | Sheet 10/20
                                         ; | a7 (Numerical storage)
                                         ; |
                                     a7:
@1360.0752:000000                        .word 0.00000            ; -| 0                                             ; [LAS added p to this section]
                                         ; .word 1.47777          ; -|                                               ; [LAS I don't see how this (lower word) is supposed to be part of float zero]
@1361.0753:000000                        .word 0.00000            ; -|
@1362.0754:040000                   2a7: .word 0.40000            ; -| 1
@1363.0755:001000                        .word 0.01000            ; -|
@1364.0756:050000                   4a7: .word 0.50000            ; -| 10
@1365.0757:004000                        .word 0.04000            ; -|
                                         ; |
                                         ; | Sheet 11/20
                                         ; | a8 (Address selection)
                                         ; |
                                     a8:
@1366.0758:051375                        ta 7a8                   ; -| Select new
@1367.0759:101376                        ca 8a8                   ;  | address for
@1370.0760:115130                        su 21a3                  ;  | storage of
@1371.0761:041376                        ts 8a8                   ;  | numerical
@1372.0762:115410                        su 18a8                  ;  | quantity
@1373.0763:071405                        cp 15a8                  ;  |
@1374.0764:101376                        ca 8a8                   ;  |
@1375.0765:074000                   7a8: sp 0                     ;  |
                                         ; 8a8: .word 197         ; -| (last address used)                           ; [LAS was just "+197", no op or pseudo-op]
@1376.0766:001000                   8a8: .word val_temp           ;                                                  ; [LAS Start at top of compiled-code heap and work down, rather than use hard address]
@1377.0767:051407                   9a8: ta 17a8                  ; -|
@1400.0768:040040                  10a8: ts comp_code             ;  | Store C(AC) in                                ; [LAS was ts 32. Replaced with comp_code. Note this inst gets ao'ed]
@1401.0769:131400                        ao 10a8                  ;  | next available
@1402.0770:115162                        su 47a3                  ;  | program address.
@1403.0771:115376                        su 8a8                   ;  |
@1404.0772:071406                        cp 16a8                  ;  |
@1405.0773:054000                  15a8: ck 0                     ;  |
@1406.0774:131410                  16a8: ao 18a8                  ;  |
@1407.0775:074000                  17a8: sp 0                     ;  |
@1410.0776:000037                  18a8: .word comp_code - 1      ; -| (last occupied program address)               ; [LAS was "(p 31)"] [LAS was .word 31. Replaced with comp_code - 1]
                                         ; |
                                         ; | Sheet 12/20
                                         ; | a9 (division, etc.)
                                         ; |
                                     a9:
@1411.0777:101217                        ca 12a4                  ; (divide)
@1412.0778:065265                        ex 50a4
@1413.0779:065217                        ex 12a4
@1414.0780:075416                        sp 5a9
@1415.0781:075004                   4a9: sp 2a1                   ; (the 14a10 mode is never used)                   ; [LAS was sp (2a1/14a10)]
@1416.0782:051422                   5a9: ta 9a9
@1417.0783:101354                        ca 22a6
@1420.0784:065233                        ex 24a4
@1421.0785:065354                        ex 22a6
@1422.0786:074000                   9a9: sp 0
@1423.0787:075416                  10a9: sp 5a9                   ; (upper case minus)
@1424.0788:101221                        ca 14a4
@1425.0789:045347                        td 17a6
@1426.0790:075004                        sp 2a1
@1427.0791:075416                  14a9: sp 5a9
@1430.0792:101432                        ca 17a9
@1431.0793:045347                        td 17a6
@1432.0794:075251                  17a9: sp 38a4
@1433.0795:051444                  18a9: ta 27a9                  ; (reset dv and exp to normal)
@1434.0796:101247                        ca 36a4
@1435.0797:041354                        ts 22a6
@1436.0798:101160                        ca 45a3
@1437.0799:041233                        ts 24a4
@1440.0800:101207                        ca 4a4
@1441.0801:045265                        td 50a4
@1442.0802:101211                        ca 6a4
@1443.0803:045217                        td 12a4
@1444.0804:074000                  27a9: sp 0
@1445.0805:075433                  28a9: sp 18a9                  ; (reset dv and exp to non-normal)
@1446.0806:075416                        sp 5a9
@1447.0807:101217                        ca 12a4
@1450.0808:065265                        ex 50a4
@1451.0809:065217                        ex 12a4
@1452.0810:075625                        sp 9a12
                                         ; |
                                         ; | Sheet 13/20
                                         ; | a10 (Equals, comma, SP, CP)
                                         ; |
                                    a10:
@1453.0811:051464                  0a10: ta 9a10
@1454.0812:101225                        ca 18a4
@1455.0813:075377                        sp 9a8
@1456.0814:045557                  3a10: td 68a10
@1457.0815:115201                        su 62a3
@1460.0816:041552                  5a10: ts 63a10
@1461.0817:045463                        td 8a10
@1462.0818:101464                        ca 9a10
@1463.0819:064000                  8a10: ex 0
@1464.0820:074000                  9a10: sp 0
@1465.0821:075453                 10a10: sp 0a10                  ; (equals)
@1466.0822:045227                        td 20a4
@1467.0823:075433                 12a10: sp 18a9
@1470.0824:075004                        sp 2a1
@1471.0825:101231                 14a10: ca 22a4                  ; (comma)
@1472.0826:075377                        sp 9a8
@1473.0827:101227                        ca 20a4
@1474.0828:075377                        sp 9a8
@1475.0829:101552                        ca 63a10
@1476.0830:045500                        td 21a10
@1477.0831:101557                        ca 68a10
@1500.0832:044000                 21a10: td 0
@1501.0833:075433                        sp 18a9
@1502.0834:101545                 23a10: ca 58a10
@1503.0835:045266                        td 51a4
@1504.0836:101275                        ca 58a4                  ;                                                  ; [LAS was td 51a4. Transcription error.]
@1505.0837:045016                        td 12a1
@1506.0838:075004                        sp 2a1                   ;                                                  ; [LAS was sp (2a1/49r)]
@1507.0839:101546                 28a10: ca 59a10
@1510.0840:045266                        td 51a4
@1511.0841:101547                        ca 60a10
@1512.0842:045016                        td 12a1
@1513.0843:075351                        sp 19a6
@1514.0844:111544                        ad 57a10
                                         ; | Sheet 14/20
                                         ; | a10 (continued)
@1515.0845:045521                        td 38a10
@1516.0846:101400                        ca 10a8
@1517.0847:115162                        su 47a3
@1520.0848:111107                        ad 4a3
@1521.0849:040000                 38a10: ts 0
@1522.0850:075337                        sp 9a6
@1523.0851:101537                 40a10: ca 52a10                 ; (SP)
@1524.0852:041543                 41a10: ts 56a10
@1525.0853:015525                 42a10: rd 42a10
                                         ;                        ;                                                  ; .print "xxxxx 3 rd %ao"
@1526.0854:115271                        su 54a4
@1527.0855:070000                        cp 0                     ; (provision for future SR, CR instructions)
@1530.0856:115230                        su 21a4
@1531.0857:071101                        cp 18a2                  ; (START)
@1532.0858:101550                        ca 61a10
@1533.0859:045134                 48a10: td 25a3
@1534.0860:075004                        sp 2a1
@1535.0861:101544                 50a10: ca 57a10                 ; (CP)
@1536.0862:075524                        sp 41a10
@1537.0863:076002                 52a10: sp a14
@1540.0864:075075                 53a10: sp 14a2
@1541.0865:101551                        ca 62a10
@1542.0866:075533                        sp 48a10
@1543.0867:076002                 56a10: sp a14                   ;                                                  ; [LAS was (sp a14/cp a14)]
@1544.0868:072002                 57a10: cp a14
@1545.0869:001507                 58a10: .word 28a10              ;                                                  ; [LAS added p to this section]
@1546.0870:001244                 59a10: .word 33a4
@1547.0871:001142                 60a10: .word 31a3
@1550.0872:001540                 61a10: .word 53a10
@1551.0873:001471                 62a10: .word 14a10
@1552.0874:000000                 63a10: .word 0                  ; -| storage for addresses used by
@1553.0875:000000                        .word 0                  ;  | parenthesis routines in forming
@1554.0876:000000                        .word 0                  ;  | and storing sp orders
@1555.0877:000000                        .word 0                  ;  |
@1556.0878:000000                        .word 0                  ;  |                                               ; [These are notated on the coding sheet as: ]
@1557.0879:000000                 68a10: .word 0                  ;  |                                               ; [   63-67  +0                              ]
@1560.0880:000000                        .word 0                  ;  |                                               ; [   68-72  +0                              ]
@1561.0881:000000                        .word 0                  ;  |                                               ; [   73-77  +0                              ]
@1562.0882:000000                        .word 0                  ;  |
@1563.0883:000000                        .word 0                  ;  |
@1564.0884:000000                 73a10: .word 0                  ;  |
@1565.0885:000000                        .word 0                  ;  |
@1566.0886:000000                        .word 0                  ;  |
@1567.0887:000000                        .word 0                  ;  |
@1570.0888:000000                        .word 0                  ; -|
                                         ; |
                                         ; | Sheet 15/20
                                         ; | a11 (Left parenthesis)
                                         ; |
                                    a11:
@1571.0889:075377                        sp 9a8                   ; (store dummy symbol)
@1572.0890:131456                        ao 3a10
@1573.0891:131460                        ao 5a10
@1574.0892:075453                        sp a10
@1575.0893:075366                        sp a8
@1576.0894:045564                  5a11: td 73a10                 ;                                                  ; [LAS was "td (73a10)"]
@1577.0895:131576                        ao 5a11
@1600.0896:101217                        ca 12a4
@1601.0897:115265                        su 50a4
@1602.0898:071604                        cp 11a11
@1603.0899:075004                        sp 2a1
@1604.0900:101460                 11a11: ca 5a10
@1605.0901:045607                        td 14a11
@1606.0902:045611                        td 16a11
@1607.0903:100000                 14a11: ca 0
@1610.0904:111613                        ad 18a11
@1611.0905:040000                 16a11: ts 0
@1612.0906:075467                        sp 12a10
@1613.0907:004000                 18a11: .word 0.04000            ;                                                  ; [LAS added p]
                                         ; |
                                         ; | Sheet 16/20
                                         ; | a12 (Right parenthesis)
                                         ; |
                                    a12:
@1614.0908:101460                        ca 5a10
@1615.0909:045620                        td 4a12
@1616.0910:115201                        su 62a3
@1617.0911:045460                        td 5a10
@1620.0912:100000                  4a12: ca 0
@1621.0913:045651                        td 29a12
@1622.0914:115613                        su 18a11
@1623.0915:071660                        cp 36a12
@1624.0916:075445                        sp 28a9
@1625.0917:101576                  9a12: ca 5a11
@1626.0918:115201                        su 62a3
@1627.0919:045576                        td 5a11
@1630.0920:045634                        td 16a12
@1631.0921:045654                        td 32a12
@1632.0922:101231                        ca 22a4
@1633.0923:075377                        sp 9a8
@1634.0924:100000                 16a12: ca 0
@1635.0925:111162                        ad 47a3
@1636.0926:075377                        sp 9a8
@1637.0927:101456                        ca 3a10
@1640.0928:045644                        td 24a12
@1641.0929:115201                        su 62a3
@1642.0930:045456                        td 3a10
@1643.0931:045645                        td 25a12
@1644.0932:100000                 24a12: ca 0
@1645.0933:064000                 25a12: ex 0
@1646.0934:111107                        ad 4a3
@1647.0935:075377                        sp 9a8
@1650.0936:111201                        ad 62a3
@1651.0937:044000                 29a12: td 0
@1652.0938:101265                        ca 50a4
@1653.0939:045655                        td 33a12
                                         ; | Sheet 17/20
                                         ; | a12 (continued)
@1654.0940:100000                 32a12: ca 0
@1655.0941:110000                 33a12: ad 0
@1656.0942:075377                        sp 9a8
@1657.0943:075004                        sp 2a1
@1660.0944:075433                 36a12: sp 18a9
@1661.0945:075625                        sp 9a12
                                         ; |
                                         ; | Sheet 18/20
                                         ; | a13 (Interpretive routines)
                                         ; |
                                    a13:
                                 equals:
@1662.0946:051666                        ta 4a13                  ; equals
@1663.0947:101360                        ca a7
@1664.0948:041733                        ts 41a13
@1665.0949:101362                        ca 2a7
@1666.0950:074000                  4a13: sp 0
                                   5a13:
@1667.0951:051673                  plus: ta 9a13                  ; plus
@1670.0952:111733                        ad 41a13
@1671.0953:041733                        ts 41a13
@1672.0954:101362                        ca 2a7                   ;                                                  ; [LAS was ca 207. Transcription error.]
@1673.0955:074000                  9a13: sp 0
                                  10a13:
@1674.0956:051700                 minus: ta 14a13                 ; minus
@1675.0957:111733                        ad 41a13
@1676.0958:041733                        ts 41a13
@1677.0959:105362                        cs 2a7
@1700.0960:074000                 14a13: sp 0
                                  15a13:
@1701.0961:051707              exponent: ta 21a13                 ; exponent
@1702.0962:051715                        ta 27a13
@1703.0963:076416                        sp ax
@1704.0964:131707                        ao 21a13
@1705.0965:045722                        td 32a13
@1706.0966:131722                        ao 32a13
@1707.0967:104000                 21a13: cs 0
@1710.0968:071727                        cp 37a13
@1711.0969:041732                        ts 40a13
@1712.0970:105732                        cs 40a13
@1713.0971:041732                        ts 40a13
@1714.0972:101735                        ca dv0                   ;                                                  ; [LAS was ca 210. The notes at the end say 210 is dv 0]
@1715.0973:110000                 27a13: ad 0
@1716.0974:041724                        ts 34a13
@1717.0975:131732                 29a13: ao 40a13
@1720.0976:071723                        cp 33a13
@1721.0977:076416                        sp ax
@1722.0978:074000                 32a13: sp 0
@1723.0979:076416                 33a13: sp ax
@1724.0980:140000                 34a13: mr 0                     ;                                                  ; [LAS was (mr (-)/dv (-))]
@1725.0981:076416                        sp ax
@1726.0982:075717                        sp 29a13
@1727.0983:041732                 37a13: ts 40a13
@1730.0984:101172                        ca 55a3
@1731.0985:075715                        sp 27a13
@1732.0986:000000                 40a13: .word 0                  ;    -|n| counter                                  ; [LAS added p to this section]
                                  41a13:
@1733.0987:000000                  temp: .word 0                  ; -| temporary sum storage for arithmetic
@1734.0988:000000                        .word 0                  ; -|
@1735.0989:150000                   dv0: dv 0                     ;                                                  ; [LAS added this]
                                         ; |
                                         ; | Sheet 19/20
                                         ; | a15 (Print control)
                                         ; |
                                    a15:
                                  print:
@1736.0990:051741                        ta 3a15                  ; -| plant address of 1st
@1737.0991:076416                  1a15: sp ax                    ; -| character to be printed
@1740.0992:000225                        si 149
@1741.0993:100000                  3a15: ca 0
@1742.0994:045760                        td 16a15
@1743.0995:045750                        td 8a15
@1744.0996:071751                        cp 9a15                  ; -| If next symbol is an sp order carry it out.

                                         ; [LAS The description says no cr in the print routines, but
                                         ;  there does not seem to be one emitted at any level

                                         ; See also float_30_15_print regarding newlines and spaces.
                                         ; Use the Laning letter as the template (see
                                         ; ./InfoFromKnuth/from-Laning-76-07-02.pdf).  Here we print
                                         ; the newline following the print of a set of equations.]
@1745.0997:102345                        ca newlinemfp
@1746.0998:024000                        rc 0

@1747.0999:076416                        sp ax                    ;  | Since symbols to be printed are stored as
@1750.1000:074000                  8a15: sp 0                     ; -| "mr x,mr y," etc. the "mr" actuates this xxx [?]
@1751.1001:115103                  9a15: su a3                    ; -|
@1752.1002:170012                        clc 10                   ;  | form and print first letter
@1753.1003:025753                 11a15: rc 11a15                 ; -|
@1754.1004:131741                        ao 3a15
@1755.1005:101210                        ca 5a4                   ; (0.22000 - "=")
@1756.1006:025756                 14a15: rc 14a15
@1757.1007:076416                        sp ax
@1760.1008:100000                 16a15: ca 0                     ;                -| print number
@1761.1009:076416                        sp ax
                                         .print "LZ output: %fm", mra
@1762.1010:076416                        sp ax
@1763.1011:076015                        sp float_30_15_print     ; (24,6) print    |                                ; [LAS Was sp 222. We don't have the original print routine]
@1764.1012:075737                        sp 1a15                  ;   routine      -|
                                         ; |
                                         ; | Sheet 20/20
                                         ; | a16 (used in a2)
                                    a16:
@1765.1013:051777                        ta 10a16
@1766.1014:101415                        ca 4a9                   ; -| set , to sp 2a1 and reset                     ; [LAS was ca 409. Transcription error.]
@1767.1015:065134                        ex 25a3                  ;  |
@1770.1016:065415                        ex 4a9                   ; -|
@1771.1017:102001                        ca 12a16                 ; -| set P to sp 2a2 (and reset)
@1772.1018:065257                        ex 44a4                  ;  |
@1773.1019:066001                        ex 12a16                 ; -|
@1774.1020:101073                        ca 12a2                  ; -| set . to sp 8a2 (and reset)
@1775.1021:065124                        ex 17a3                  ;  |
@1776.1022:065073                        ex 12a2                  ; -|
@1777.1023:074000                 10a16: sp 0
@2000.1024:075736                 11a16: sp a15
@2001.1025:075061                 12a16: sp 2a2                   ;                                                  ; [LAS was (sp 2a2/sp a2)]

                                         ; |
                                         ; | [LAS Added this section based on info below. Not clear how it can
                                         ; |  possibly work using this data in the middle of the program (i.e.,
                                         ; |  at 212), but it should be ok to allocate a separate space for it.]
                                         ; | a14
                                    a14:
@2002.1026:000000                        .words 11, 0
@2003.1027:000000
@2004.1028:000000
@2005.1029:000000
@2006.1030:000000
@2007.1031:000000
@2010.1032:000000
@2011.1033:000000
@2012.1034:000000
@2013.1035:000000
@2014.1036:000000

                                         ; |
                                         ; | Miscellaneous [Not sure about this section needs proofing]
                                         ; |
                                         ; | 210 dv 0
                                         ; |
                                         ; | 211 = 0a14 and also "1t" in print routine. Equations are not allowed
                                         ; |       0 as a number, thus 0a14 is not used in a meaningful way.
                                         ; |
                                         ; | 212-221 = 1a14 - 10a14: storage for sp orders to initial address of numbered equations (a
                                         ; |       maximum of 10 is allowed)
                                         ; |
                                         ; | 222 (24,6) print routine
                                         ; |
                                         ; | 852 = "ax"  = (24,6) programmed arithmetic

                                         ; LAS include current version of printer.

                                         ; .include "float-30-15-0-print.ww"

                                         ; Print a (24,6) float nunmber. The value to print is in mra, which
                                         ; is (30,15), but we'll only use (24,6) range.

@2015.1037:052030     float_30_15_print: ta flt_print_rtn
@2016.1038:042163                        ts nm_x
@2017.1039:076416                        sp ax                    ; Spax out
@2020.1040:076031                        sp normalize
                                         ; .print "floating print normalize x = %fl, t = %fl, mra-fm = %fm, mra-fr = %fr, mra-exp = %d", nm_x, t, mra, mra, mra + 2
                                         ; After normnalize the mra contains a 2-word denormalized fraction
                                         ; in mra and mra+1, and a power of ten exponent in mra+2.
@2021.1041:076416                        sp ax                    ; Spax in
@2022.1042:076222                        sp mfp
@2023.1043:076416                        sp ax                    ; Spax out
@2024.1044:076346                        sp print_exp

                                         ; Not much guidance on where spaces and newlines should be printed,
                                         ; but we'll use the Laning letter as the template (see
                                         ; ./InfoFromKnuth/from-Laning-76-07-02.pdf).  Print a space
                                         ; following each equation, then at the upper level when all are done
                                         ; print a newline.
@2025.1045:102221                        ca fp_space
@2026.1046:024000                        rc 0

@2027.1047:076416                        sp ax                    ; Spax in
@2030.1048:074000         flt_print_rtn: sp 0

                                         ; Normalize, first by reducing to a fraction f such that 0.1 <= f < 1.0,
                                         ; with a decimal exponent d, then shifting to normalize in the
                                         ; binary exponent e, -4 >= e >= 0. The result is a two-word 30,0 fraction
                                         ; along with a decimal exponent. The fraction is printed with the frac printer mfp.

                                         ; Input: nm_x, (24,6) format
                                         ; Output: mra, first two words fraction (denormalized mantissa), third word decimal exponent

                              normalize:
@2031.1049:052155                        ta nm_rtn
@2032.1050:102174                        ca zero
@2033.1051:042156                        ts nm_exp
@2034.1052:076416                        sp ax                    ; Spax in
@2035.1053:102163                        ca nm_x                  ; x
@2036.1054:042166                        ts t
                                nm_loop:
@2037.1055:122166                        cm t
@2040.1056:116201                        su float1
@2041.1057:042217                        ts ftmp0
@2042.1058:122217                        cm ftmp0
@2043.1059:114000                        su 0
@2044.1060:072050                        cp nm_ge_1
@2045.1061:122166                        cm t
@2046.1062:116201                        su float1
@2047.1063:072057                        cp nm_not_ge_1
                                         ; setup 0.1 loop         ; |x| >= 1
                                nm_ge_1:
@2050.1064:076416                        sp ax                    ; Spax out
@2051.1065:102161                        ca nm_mr_float_point_1
@2052.1066:042101                        ts nm_calc_mr
@2053.1067:102162                        ca nm_ad_one
@2054.1068:042105                        ts nm_calc_ad
@2055.1069:076416                        sp ax                    ; Spax in
@2056.1070:076100                        sp nm_calc
@2057.1071:122166           nm_not_ge_1: cm t                     ; |x| < 1
@2060.1072:116211                        su float_point_1

@2061.1073:042217                        ts ftmp0
@2062.1074:122217                        cm ftmp0
@2063.1075:114000                        su 0
@2064.1076:072111                        cp nm_already_norm       ; Branch if |x| = .1

@2065.1077:122166                        cm t
@2066.1078:116211                        su float_point_1

@2067.1079:072072                        cp nm_lt_point_1
@2070.1080:076111                        sp nm_already_norm       ; |x| > .1
@2071.1081:112175                        ad float0                ; Nop
                          nm_lt_point_1:
                                         ; setup 10 loop          ; |x| < .1
@2072.1082:076416                        sp ax                    ; Spax out
@2073.1083:102160                        ca nm_mr_float10
@2074.1084:042101                        ts nm_calc_mr
@2075.1085:102157                        ca nm_su_one
@2076.1086:042105                        ts nm_calc_ad
@2077.1087:076416                        sp ax                    ; Spax in
                                nm_calc:
@2100.1088:102166                        ca t
@2101.1089:000000            nm_calc_mr: .word 0                  ; mr =0.1 or mr =10.0
@2102.1090:042166                        ts t
@2103.1091:076416                        sp ax                    ; Spax out
@2104.1092:102156                        ca nm_exp
@2105.1093:000000            nm_calc_ad: .word 0                  ; ad one or su one
@2106.1094:042156                        ts nm_exp
@2107.1095:076416                        sp ax                    ; Spax in
@2110.1096:076037                        sp nm_loop
                        nm_already_norm:
@2111.1097:102166               nm_done: ca t
                                         ; ad float_low_rnd       ; Rounding experiment. Really want decimal round in the printer   LAS
@2112.1098:076416                        sp ax                    ; Spax out

                                         ; Here t and the mra hold the (fractional) reduced value (0.1 <=
                                         ;  |value| < 1.0), and nm_exp holds the decimal exponent
                                         ;  (single-word int).

                                         ; Now we need to shift down by the binary exponent to denormalize
                                         ;  the float to a 2-word fraction. Printing that fraction in decimal
                                         ;  will result in correct digits since we now have the base-10
                                         ;  exponent as a separate value.

@2113.1099:102422                        ca mra + 2               ; Binary exponent range zero to negative four
@2114.1100:042167                        ts t3
@2115.1101:102174                        ca zero
@2116.1102:042170                        ts t4
@2117.1103:132167          nm_mask_loop: ao t3
@2120.1104:072122                        cp nm_2_cont
@2121.1105:076127                        sp nm_mask_done
@2122.1106:102170             nm_2_cont: ca t4
@2123.1107:170001                        clc 1
@2124.1108:112173                        ad one
@2125.1109:042170                        ts t4
@2126.1110:076117                        sp nm_mask_loop
                           nm_mask_done:                          ; t4 has the mask
@2127.1111:102420                        ca mra + 0               ; Upper mant
@2130.1112:176170                        md t4
@2131.1113:042171                        ts t5                    ; t5 has the rightmost bits of upper mant
@2132.1114:122422                        cm mra + 2
@2133.1115:032165                        sd nm_srh_inst
@2134.1116:042137                        ts nm_shift_hi
@2135.1117:042142                        ts nm_shift_lo
@2136.1118:102420                        ca mra + 0
@2137.1119:161000           nm_shift_hi: srh 0
@2140.1120:042420                        ts mra + 0
@2141.1121:102421                        ca mra + 1               ; Lower mant
@2142.1122:161000           nm_shift_lo: srh 0
@2143.1123:042421                        ts mra + 1
@2144.1124:102172                        ca word_size
@2145.1125:112422                        ad mra + 2
@2146.1126:046150                        td nm_smb
@2147.1127:102171                        ca t5
@2150.1128:170000                nm_smb: clc 0                    ; Shift the masked bits up
@2151.1129:032421                        sd mra + 1
@2152.1130:042421                        ts mra + 1
@2153.1131:102156                        ca nm_exp
@2154.1132:042422                        ts mra + 2
@2155.1133:074000                nm_rtn: sp 0

@2156.1134:000000                nm_exp: .word 0
@2157.1135:116173             nm_su_one: su one
@2160.1136:142205         nm_mr_float10: mr float10
@2161.1137:142211   nm_mr_float_point_1: mr float_point_1
@2162.1138:112173             nm_ad_one: ad one
@2163.1139:000000                  nm_x: .float 0, 0
@2164.1140:000000
@2165.1141:161000           nm_srh_inst: srh 0                    ; Note can't use td with these insts or you overwrite the opcode
@2166.1142:000000                     t: .word 0
@2167.1143:000000                    t3: .word 0
@2170.1144:000000                    t4: .word 0
@2171.1145:000000                    t5: .word 0
@2172.1146:000017             word_size: .word 15
@2173.1147:000001                   one: .word 1
@2174.1148:000000                  zero: .word 0
@2175.1149:000000                float0: .float 0, 0
@2176.1150:000000
@2177.1151:040000              float1_2: .float +0.5, 0
@2200.1152:000000
@2201.1153:040000                float1: .float +0.1, 1
@2202.1154:001000
@2203.1155:040000                float2: .float +0.2, 1
@2204.1156:002000
@2205.1157:050000               float10: .float +0.1, 2
@2206.1158:004000
@2207.1159:040000               float16: .float +0.16, 2
@2210.1160:005000
@2211.1161:063146         float_point_1: .float +0.1, 0
@2212.1162:174315
@2213.1163:041433         float_low_rnd: .float +0.5, -6          ; -6 is the smallest exponent to bump up to above the int (still not round to the int)
@2214.1164:153675
@2215.1165:137777            float_neg1: .word 0o137777
@2216.1166:001777                        .word 0o001777
@2217.1167:000000                 ftmp0: .float 0, 0
@2220.1168:000000
@2221.1169:020000              fp_space: .flexh " "
                                         ; end .include "float-30-15-0-print.ww"
                                         ; .include "modern-frac-30-0-0-print.ww"

                                         ; LAS 4/13/25 This file is adapted from frac-30-0-0-print.ww, but
                                         ;    altered enough that we can't call it the same routine
                                         ;    anymore. One basic change is replacement of the qp instruction
                                         ;    with si/rc instructions for the flexowriter, and also replacement
                                         ;    of the code table with flex codes. It's not known yet what codes
                                         ;    were used by the device on the receiving end of the qp.  Since
                                         ;    we're essentially creating a new routine, much of the the doc
                                         ;    included with the orginal has been omitted from the description below.

                                         ; |   Description
                                         ; |
                                         ; |       This subroutine prints and/or punches the sign and magnitude of the
                                         ; |   contents of the MRA in the following manner
                                         ; |
                                         ; |            +-.d1d2...dn
                                         ; |
                                         ; |   The number, n, of decimal digits to be printed is a preset parameter (v2). The
                                         ; |   digits, di, are obtained by multiplying the magnitude of the contents of the MRA
                                         ; |   successively by p10.
                                         ; |
                                         ; |   This subroutine contains a sign agreement program so that the contents
                                         ; |   of the MRA need not be a number whose major and minor parts are of like sign.
                                         ; |
                                         ; |   The sp instruction transferring control to this subroutine must be an
                                         ; |   interpreted sp (i.e., control must be in the interpretive subroutine). After
                                         ; |   execution of the subroutine control remains in the interpretive subroutine which
                                         ; |   then proceeds to interpret the instruction following the sp instruction in
                                         ; |   storage.
                                         ; |
                                         ; |   There is no carriage return.
                                         ; |
                                         ; |   This subroutine can be used with any(30,0,0) interpretive subroutine.
                                         ; |   The contents of the MRA are left undisturbed during the execution of this
                                         ; |   subroutine.
                                         ; |
                                         ; |   Abstract: This subroutine prints out a +- sign and a decimal point followed
                                         ; |             by the magnitude of the contents of the MRA as a decimal fraction.
                                         ; |             The decimal digits are obtained by multiplying the contents of the
                                         ; |             MRA successively by plO. The number of digits to be printed is
                                         ; |             a preset parameter (v2). There is no carriage return. The sub-
                                         ; |             routine is interpreted and can be used with any (30,0,0) inter-—
                                         ; |             pretive subroutine.
                                         ; |
                                         ; |   Temporary Storage
                                         ; |       d       unused
                                         ; |       1tmfp   -|
                                         ; |       2tmfp    |- Temporary storage
                                         ; |       3tmfp   -|
                                         ; |       4tmfp      Digit counter
                                         ; |
                                         ; |

                                    mfp:                          ; mfp == modern frac print
@2222.1170:052271                        ta 37mfp
@2223.1171:076416                        sp ax                    ; Resume ordinary ww operation
@2224.1172:102421                        ca 3ax                   ; -|
@2225.1173:042342                        ts 2tmfp                 ;  |- Store C(mra) in 1tmfp and 2tmfp
@2226.1174:102420                        ca 2ax                   ;  |
@2227.1175:042341                  5mfp: ts 1tmfp                 ; -|
@2230.1176:142342                  6mfp: mr 2tmfp                 ; Do 1tmfp and 2tmfp agree in sign?
@2231.1177:072272                        cp 38mfp
@2232.1178:102341                        ca 1tmfp                 ; -|
@2233.1179:072236                  9mfp: cp 12mfp                 ;  |
@2234.1180:102336                        ca plus_char             ;  |
@2235.1181:076237                        sp 13mfp                 ;  |- Sense and print algebraic sign of C(mra) followed by a decimal point
@2236.1182:102337                 12mfp: ca minus_char            ;  |
@2237.1183:000225                 13mfp: si 149                   ;  |
@2240.1184:024000                        rc 0                     ;  |
@2241.1185:102340                        ca dot_char              ;  |
@2242.1186:024000                        rc 0                     ; -|

@2243.1187:106321                        cs ndigits               ; -|- Set up digit counter
@2244.1188:042344                        ts digit_cntr            ; -|

@2245.1189:122341                 17mfp: cm 1tmfp                 ; -|
@2246.1190:146322                        mh 62mfp                 ;  |
@2247.1191:042343                        ts 3tmfp                 ;  |
@2250.1192:154017                        slr 15                   ;  |
@2251.1193:042341                        ts 1tmfp                 ;  |- Multiply C(1tmfp,2tmfp) by p10
@2252.1194:122342                        cm 2tmfp                 ;  |
@2253.1195:146322                        mh 62mfp                 ;  |
@2254.1196:042342                        ts 2tmfp                 ;  |
@2255.1197:154017                        slr 15                   ;  |
@2256.1198:066342                        ex 2tmfp                 ;  |
@2257.1199:126341                        sa 1tmfp                 ;  |
@2260.1200:042341                        ts 1tmfp                 ; -|

@2261.1201:102343                        ca 3tmfp                 ; -|
@2262.1202:112323                        ad 63mfp                 ;  |- Set up entry into table
@2263.1203:046264                        td 32mfp                 ; -|

                                  32mfp:
@2264.1204:100000                        ca 0                     ; -|- Print a single digit
@2265.1205:024000                        rc 0                     ; -|

@2266.1206:132344                        ao digit_cntr            ; -|- Have enough digits been printed?
@2267.1207:072245                        cp 17mfp                 ; -|

@2270.1208:076416                        sp ax                    ; -|- Return control to int. subroutine
@2271.1209:074000                 37mfp: sp 0                     ; -|

@2272.1210:122341                 38mfp: cm 1tmfp                 ; -|
@2273.1211:114000                        su 0                     ;  |- Is C(1tmfp) != 0?
@2274.1212:072315                        cp 57mfp                 ; -|

@2275.1213:122342                        cm 2tmfp                 ; -|
@2276.1214:114000                        su 0                     ;  |- Is C(2tmfp) != 0?
@2277.1215:072307                        cp 51mfp                 ; -|

@2300.1216:116320                        su 60mfp                 ; -|
@2301.1217:112317                        ad 59mfp                 ;  |- Form 1 - |C(2tmfp)|
@2302.1218:042342                        ts 2tmfp                 ; -|

@2303.1219:102341                        ca 1tmfp                 ; -|- Is C(1tmfp) pos.?
@2304.1220:072313                        cp 55mfp                 ; -|

@2305.1221:116320                        su 60mfp                 ; -|- Form C(1tmfp) - 2^-15
@2306.1222:042341                        ts 1tmfp                 ; -|

@2307.1223:106342                 51mfp: cs 2tmfp                 ; -|- Complement C(2tmfp)
@2310.1224:042342                        ts 2tmfp                 ; -|

@2311.1225:102341                        ca 1tmfp                 ; -|- Re-enter sign agreement
@2312.1226:076230                        sp 6mfp                  ; -|

@2313.1227:132341                 55mfp: ao 1tmfp
@2314.1228:076233                        sp 9mfp
@2315.1229:106341                 57mfp: cs 1tmfp
@2316.1230:076227                        sp 5mfp

@2317.1231:100000                 59mfp: ca 0                     ;                                                  ; [59-73 are notated in Subroutines.pdf with no spaces, e.g., ca0, p1]
@2320.1232:000001                 60mfp: .word 1
                                         ; [Really ndigits - 1. Here as in Laning's letter
                                         ;  (see ./InfoFromKnuth/from-Laning-76-07-02.pdf) we want 8.]
                                ndigits:
@2321.1233:000007                 61mfp: .word 8 - 1              ; v2                                               ; [was just n1a2 -- need to track down this notation]
@2322.1234:000012                 62mfp: .word 10
                            digit_table:
@2323.1235:002324                 63mfp: .word 64mfp              ; ,                                                ; [I think comma? Might just be a blemish]
@2324.1236:174000                 64mfp: .flexh "0123456789"      ; Digit table
@2325.1237:052000
@2326.1238:036000
@2327.1239:016000
@2330.1240:026000
@2331.1241:046000
@2332.1242:066000
@2333.1243:056000
@2334.1244:006000
@2335.1245:154000
                              plus_char:
@2336.1246:032000                 74mfp: .flexh "+"
                             minus_char:
@2337.1247:072000                 75mfp: .flexh "-"
@2340.1248:042000              dot_char: .flexh "."
@2341.1249:000000                 1tmfp: .word 0
@2342.1250:000000                 2tmfp: .word 0
@2343.1251:000000                 3tmfp: .word 0
                             digit_cntr:
@2344.1252:000000                 4tmfp: .word 0
@2345.1253:122000            newlinemfp: .flexh "\n"


                                         ; The (decimal) exponent is in the exp field of the mra (mra+2)

                                         ; dv looks really hard to use for cases like this, since we really want an
                                         ; integer divide. It looks like some way can be devised with appropriate
                                         ; shifting, but instead we'll just take advantage of the fact that
                                         ; exponents wiil be no greater in magnitude than 19, so just subtraction
                                         ; will do.

@2346.1254:052402             print_exp: ta print_exp_rtn
@2347.1255:000225                        si 149
@2350.1256:106422                        cs mra + 2
@2351.1257:072354                        cp pe_non_neg
@2352.1258:102337                        ca minus_char
@2353.1259:076355                        sp pe_2
@2354.1260:102336            pe_non_neg: ca plus_char
@2355.1261:024000                  pe_2: rc 0
@2356.1262:122422                        cm mra + 2
@2357.1263:042404                        ts pe_t1
@2360.1264:102403                        ca pe_10
@2361.1265:116404                        su pe_t1
@2362.1266:072370                        cp pe_exp_ge_10
@2363.1267:122422          pe_exp_lt_10: cm mra + 2
@2364.1268:042404                        ts pe_t1
@2365.1269:102406                        ca pe_zero_char
@2366.1270:024000                        rc 0
@2367.1271:076375                        sp pe_1
@2370.1272:122422          pe_exp_ge_10: cm mra + 2
@2371.1273:116403                        su pe_10
@2372.1274:042404                        ts pe_t1
@2373.1275:102405                        ca pe_one_char
@2374.1276:024000                        rc 0
@2375.1277:102404                  pe_1: ca pe_t1
@2376.1278:112323                        ad digit_table
@2377.1279:046400                        td pe_load_char
@2400.1280:100000          pe_load_char: ca 0
@2401.1281:024000                        rc 0
@2402.1282:074000         print_exp_rtn: sp 0
@2403.1283:000012                 pe_10: .word 10
@2404.1284:000000                 pe_t1: .word 0
@2405.1285:052000           pe_one_char: .flexh "1"
@2406.1286:174000          pe_zero_char: .flexh "0"
                                         ; end .include "modern-frac-30-0-0-print.ww"

                                         ; LAS include the float-lib, which defines ax and friends

                                         ; .include "float-lib.ww"


                                         ; 24,6 float format:
                                         ;  hi word      lo word
                                         ;  1   15       1  6      9
                                         ;  s frac-hi    s exp  frac-lo

                                         ;  frac is a signed 25-bit (including sign) one's-complement representation
                                         ;  exp is a signed 7-bit (including sign) one's-complement representation

                                         ; This first section is a test area and should not
                                         ;  interfere with anything including the lib if there
                                         ;  are no name conflicts.

                                         ; Note we don't set .org since this file can be included in others

                                         .pp do_print, 0
                                         .pp do_floathack, 0      ; Whether to use the workaround to using "ca 0" as -32767/32768
                                         .pp f24, 1               ; Whether to apply mask to srh for 24,6 floats
                                         .pp main_sep_param, 1

@2407.1287:037777                   max: .word 0o037777

@2410.1288:052414             floathack: ta fhrtn
@2411.1289:042415                        ts ac_save
@2412.1290:102415                        ca ac_save
                                         ; Original instruction, replaced by next instruction
                                         ; su r17
@2413.1291:112407                        ad max

@2414.1292:074000                 fhrtn: sp 0
@2415.1293:000000               ac_save: .word 0


                                         ; --- Below here is the floating lib ---
                                         ; | -------------------------------------------------------------
                                         ; | DIGITAL COMPUTER LABORATORY
                                         ; | MASSACHUSETTS INSTITUTE OF TECHNOLOGY

                                         ; | Specifications of WHIRLWIND I LIBRARY SUBROUTINE Number PA 2 ,Z

                                         ; | Operations on Real (24,6, 0) Floating Point
                                         ; | Double Register Numbers (General Subroutine)

                                         ; [Guy: Source code contains two-letter shift ops, (sr, sl).  As far as I can tell,
                                         ;  the original instruction set did only "shift and round", so I've converted
                                         ;  them all to srr, slr.
                                         ;  The shift value is often preceded by a '*', which appears to mean "don't clear
                                         ;  the B Register".  See QTR Report #26, 1951]

                                         ; | Preset Parameters {to be typed in program titie)

                                         ; | vx2/pk: k = separation in storage of two registers of number
                                         ; | vx/pN: N = address in storare of initial register of this subroutine

                                         ; .org 852
                                         ; .org 0o2000

@2416.1294:052712                    ax: ta exec_inst             ; Set address of 1st instruction to be interpreted ; from Enter
@2417.1295:076712                        sp exec_inst

                                         ; words r02, r03, and r04 represent the double precision accumulator
                                    mra:
                                    2ax:
@2420.1296:000000                   r02: .word 0                  ; x1  -|
                                    3ax:                          ;      |
@2421.1297:000000                   r03: .word 0                  ; x1'  |- Multiple register accumulator
                                    4ax:                          ;      |
@2422.1298:000000                   r04: .word 0                  ; y1  -|
@2423.1299:161036                   r05: srh 30                   ; "ca"                                             ; from 196r-->
@2424.1300:102416                   r06: ca ax
@2425.1301:102727                   r07: ca r191                  ; "cs"                                             ; from l3r,196r
@2426.1302:076556                        sp r95
@2427.1303:076630                        sp r129                  ; "ad"                                             ; from 196r-->
@2430.1304:000035                   r10: .word 29
@2431.1305:042560                        ts r97                   ; "su"                                             ; from 196r-->
@2432.1306:076625                        sp r126
@2433.1307:076425                        sp r07                   ; "cm"                                             ; from 196r-->
@2434.1308:000000                   r14: .word 0                  ;  Temporary digits storage                        ; (170r)

@2435.1309:126421                   r15: sa r03                   ; -|- Add two minor products                       ; from 24r
@2436.1310:042421                        ts r03                   ; -|

@2437.1311:100000                   r17: ca 0                     ; -|- Store overflow
@2440.1312:066744                        ex tmp                   ; -|

@2441.1313:146420                        mh r02                   ; Form major product
@2442.1314:076665                        sp r158
@2443.1315:142420                   r21: mr r02                   ; "mr" Form two                                    ; from 49r9,196r
@2444.1316:066421                        ex r03                   ; minor products
@2445.1317:142744                        mr tmp
@2446.1318:076435                        sp r15
@2447.1319:066744                        ex tmp                   ; "dv"                                             ; from 196r-->
@2450.1320:042560                        ts r97
@2451.1321:106567                        cs r102                  ; -|
@2452.1322:112504                        ad r54                   ;  |- Form exponent of 2**-2/x2
@2453.1323:042567                        ts r102                  ; -|

@2454.1324:106560                        cs r97                   ; -|
@2455.1325:146560                        mh r97                   ;  |
@2456.1326:066744                        ex tmp                   ;  |- Form and store -(2**-2 * x2')/x2**2
@2457.1327:161002                        srh 2                    ;  |
@2460.1328:152744                        dv tmp                   ;  |
@2461.1329:155017                   r35: slh 15                   ;  |
@2462.1330:042656                        ts r151                  ; -|                                               ; [LAS was transcription error ta r151]

@2463.1331:102526                        ca r72                   ; -|                                               ; [LAS this sequence does not seem to store this formula, instead stores 2**-2/x2]
@2464.1332:152560                        dv r97                   ;  |- Form and store 2**-2/x2**2
@2465.1333:155017                        slh 15                   ;  |
@2466.1334:042744                        ts tmp                   ; -|

@2467.1335:146560                        mh r97                   ; -|
@2470.1336:116526                        su r72                   ;  |
@2471.1337:155017                        slh 15                   ;  |
@2472.1338:116437 .if (1 - do_floathack)   su r17                   ;  |- Form (2**-2/x**2)' (Use Euclid's algorithm)  ; [LAS Looks like this should say (2**-2/x2)' -- Uses remainder arith, hence the Euclid ref]
;                                                      .if do_floathack       sp floathack             ;                                                  ; [LAS 3/30/25 Using r17 broke dv, but looks like it works now in more cases than before.
                                         ;                        ;                                                  ; Still breaks e.g. on sqrt2 test.
                                         ;                        ;                                                  ; Can't find what changed to enable this, but we'll switch between the original
                                         ;                        ;                                                  ; and floathack as needed.
                                         ;                        ;                                                  ; The use of r17 is highly suspicious, as it's the opcode of an instruction.]
@2473.1339:112500                        ad r50                   ;  |
@2474.1340:152560                        dv r97                   ;  |
@2475.1341:155017                        slh 15                   ; -|

@2476.1342:112656                        ad r151                  ; -|- Add two minor parts of reciprocal
@2477.1343:076443                        sp r21                   ; -|

@2500.1344:000001                   r50: .word 1
@2501.1345:076527                        sp r73                   ; "ts"
@2502.1346:106420                   r52: cs r02                   ; -|- complement x1                                ; [LAS Was ca r02. Transcription error.
                                         ;                        ;                                                  ;  Caught late, needed to zoom in and closely examine original text 6/16/25.]
@2503.1347:076673                        sp r164                  ; -|
@2504.1348:000002                   r54: .word 2
@2505.1349:102747                        ca r201                  ; "ta" -|                                          ; from 196r-->
@2506.1350:044000                   r56: td 0                     ;       |- Store digits in indicated address
@2507.1351:076711                        sp next_inst             ;      -|

@2510.1352:132420                   r58: ao r02                   ; -|- Increase xl by by 2**-15                     ; from 119r-->
@2511.1353:076676                        sp r167                  ; -|

@2512.1354:076461                   r60: sp r35
@2513.1355:076527                        sp r73                   ; "ex"                                             ; from 196r-->
@2514.1356:000077                   r62: .word 63
@2515.1357:106420                        cs r02                   ; "cp" -|- Is x1 negative?                         ; from 196r-->
@2516.1358:072711                        cp next_inst             ;      -|                                          ; [LAS was transcription error r188]
@2517.1359:132712                        ao exec_inst             ; "sp" -|- Set Return address for sp ax            ; from 196r
@2520.1360:046747                        td r201                  ;      -|
@2521.1361:102725                        ca r189                  ; -|- Set pick up order for ordinary cp & sp       ; LAST DIGIT is a GUESS! [LAS not legible -- needed to dig into program to nail this down]
@2522.1362:046712                        td exec_inst             ; -|

@2523.1363:116424                        su r06                   ;                                                  ; PROBABLY an SU op code!

@2524.1364:072745                        cp r199                  ; -|- Test to see whether instruction is sp ax
@2525.1365:076712                        sp exec_inst             ; -|

@2526.1366:020000                   r72: .word 0.20000            ;                                                  ; [LAS ]

@2527.1367:102421                   r73: ca r03                   ; -|                                               ; from 51r,61r->
@2530.1368:160006                        srr 6                    ;  |- Round off x1' and store x1' * 2**-6
@2531.1369:176754 .if f24                md float24_low_mant_mask
@2532.1370:042421                        ts r03                   ; -|

@2533.1371:161011                        srh 9                    ; -|
@2534.1372:126420                        sa r02                   ;  |- Add round-off carry into x1
@2535.1373:042420                        ts r02                   ; -|

@2536.1374:100000                        ca 0                     ; -|
@2537.1375:072542                        cp r83                   ;  |- Is there an overflow?
@2540.1376:114000                        su 0                     ;  |
@2541.1377:072545                        cp r86                   ; -|

@2542.1378:154016                   r83: slr 14                   ; -|                                               ; from  80r->
@2543.1379:042420                        ts r02                   ;  |- Add overflow into x1 and x1'. Increase y1
@2544.1380:132422                        ao r04                   ; -|

@2545.1381:122422                   r86: cm r04                   ; -|                                               ; from  82r->
@2546.1382:116514                        su r62                   ;  |- |y1| - 63 > 0?
@2547.1383:072554                        cp r93                   ; -|                                               ; [LAS was transcription error sp r93]

@2550.1384:106422                        cs r04                   ; -|- y <= 0? (i.e.  y1 < -63?)
@2551.1385:072750                        cp r202                  ; -|

@2552.1386:106514                        cs r62                   ; -|- Set y1 = -63
@2553.1387:042422                        ts r04                   ; -|

@2554.1388:102560                   r93: ca r97                   ; -|- ts n + k or ex n + k                         ; from 88r->
@2555.1389:112743                        ad sep_param             ; -|

@2556.1390:042567                   r95: ts r102                  ; Store ts, ex, ca, cs or cm n+k                   ; from 8r->                                        ; [LAS Issue no-lower-cm: When branched-to,
                                         ;                        ;                                                  ;                                                  ; does not load a possible cm from r97 at r93,
                                         ;                        ;                                                  ;                                                  ; so we get no mag of low end. But that would not
                                         ;                        ;                                                  ;                                                  ; be completely right either, as it's a packed
                                         ;                        ;                                                  ;                                                  ; word with an exp.]
@2557.1391:102420                        ca r02
@2560.1392:000000                   r97: .word 0                  ; -|                                               ; from (180r)
@2561.1393:066421                        ex r03                   ;  |
;                  .if (1-f24)            srh 9                    ;  |

@2562.1394:042753 .if f24                ts float24_tmp

@2563.1395:066422                        ex r04                   ;  |
@2564.1396:155011                        slh 9                    ;  |

@2565.1397:176755 .if f24                md float24_low_exp_mask
@2566.1398:032753 .if f24                sd float24_tmp

@2567.1399:000000                  r102: .word 0                  ;  |                                               ; (95r)

@2570.1400:042752 .if f24                ts float24_low           ;                                                  ; [Note ex leaves B alone]
@2571.1401:161011 .if f24                srh 9
@2572.1402:042753 .if f24                ts float24_tmp
@2573.1403:102752 .if f24                ca float24_low
@2574.1404:176754 .if f24                md float24_low_mant_mask

@2575.1405:161011                        srh 9                    ;  |- Perform ts, ex, ca, cs or cm                 ; [saves low mant in B]

@2576.1406:066753 .if f24                ex float24_tmp           ;                                                  ; [Note ex leaves B alone]

@2577.1407:066421                        ex r03                   ;  |
@2600.1408:042420                        ts r02                   ;  |
@2601.1409:155017                        slh 15                   ;  |                                               ; [gets low mant back from B]
@2602.1410:066421                        ex r03                   ;  |
@2603.1411:076710                  r108: sp r177                  ; -|

@2604.1412:122420                  r109: cm r02                   ; -|                                               ;  166r->
@2605.1413:114000                        su 0                     ;  |- x1 != 0?
@2606.1414:072502                        cp r52                   ; -|

@2607.1415:122421                        cm r03                   ; -|
@2610.1416:114000                        su 0                     ;  |- x1' != 0?
@2611.1417:072621                        cp r122                  ; -|

@2612.1418:116500                        su r50                   ; -|
@2613.1419:112437                        ad r17                   ;  |- Form |x1'| - 1                               ; PROBABLY AD op code
@2614.1420:042421                        ts r03                   ; -|

@2615.1421:102420                        ca r02                   ; -|- x1 > 0?
@2616.1422:072510                        cp r58                   ; -|

@2617.1423:116500                        su r50                   ; -|- Form x1 - 2**-15
@2620.1424:042420                        ts r02                   ; -|

@2621.1425:106421                  r122: cs r03                   ; -|- Complement x1'                               ; [LAS was transcription error ca r03]             ;   114r->
@2622.1426:042421                        ts r03                   ; -|

@2623.1427:142420                        mr r02                   ; -|- Form x1*x1'
@2624.1428:076675                        sp r166                  ; -|

@2625.1429:106744                  r126: cs tmp                   ; -|                                               ; 12r->
@2626.1430:042744                        ts tmp                   ;  |- Complement x2, x2'
@2627.1431:106560                        cs r97                   ; -|

@2630.1432:066567                  r129: ex r102                  ; -|                                               ; r9 ->
@2631.1433:116422                        su r04                   ;  |- Form and store  y2 - yl
@2632.1434:042560                        ts r97                   ; -|

@2633.1435:072644                        cp r141                  ; y2 - y1 > 0?

@2634.1436:112422                        ad r04                   ; -|
@2635.1437:042422                        ts r04                   ;  |
@2636.1438:102420                        ca r02                   ;  |
@2637.1439:066744                        ex tmp                   ;  |- Interchange (x1, x1', y1) and (x2, x2', y2)
@2640.1440:042420                        ts r02                   ;  |
@2641.1441:102421                        ca r03                   ;  |
@2642.1442:066567                        ex r102                  ;  |
@2643.1443:042421                        ts r03                   ; -|

@2644.1444:122560                  r141: cm r97                   ; -|                                               ; 132r->
@2645.1445:116430                        su r10                   ;  |-  |y2 - y1| - 29 > 0?
@2646.1446:072650                        cp r145                  ; -|

@2647.1447:076711                        sp next_inst             ; No need for addition

@2650.1448:112423                  r145: ad r05                   ; -|- Store  sr *1 +|y2 - y1|                      ; 143r->
@2651.1449:042656                        ts r151                  ; -|

@2652.1450:102500                        ca r50                   ; -|- Set y2 = l
@2653.1451:066567                        ex r102                  ; -|

@2654.1452:161017                        srh 15                   ; -|
@2655.1453:112744                        ad tmp                   ;  |
@2656.1454:000000                  r151: .word 0                  ;  |- Form and store                               ; (146r)
@2657.1455:042744                        ts tmp                   ;  |  (x2 + x2' * 2**-15) * 2**(-1 - |y2 - y1|)
@2660.1456:155017                        slh 15                   ;  |
@2661.1457:066421                        ex r03                   ; -|

@2662.1458:161017                        srh 15                   ; -|
@2663.1459:112420                        ad r02                   ;  |-    Form (x1 + x1' * 2**-15) * 2**-l
@2664.1460:161001                        srh 1                    ; -|

@2665.1461:042420                  r158: ts r02                   ; Store x1                                         ;  20r->

@2666.1462:155017                        slh 15                   ; -|
@2667.1463:126421                        sa r03                   ;  |                                               ; [LAS was transcription error ts r03]
@2670.1464:042421                        ts r03                   ;  |- Add x1, x1' and x2, x2'
@2671.1465:102744                        ca tmp                   ;  |
@2672.1466:112420                        ad r02                   ;  |
@2673.1467:042420                  r164: ts r02                   ; -|                                               ; 53r->

@2674.1468:142421                        mr r03                   ; Does sign x1 = sign x1'?
@2675.1469:072604                  r166: cp r109                  ;                                                  ;  125r->

@2676.1470:102421                  r167: ca r03                   ; -|                                               ; 59r->
@2677.1471:161017                        srh 15                   ;  |
@2700.1472:112420                        ad r02                   ;  |
@2701.1473:166434                        sf r14                   ;  |- Scale factor and store x1, x1'
@2702.1474:042420                        ts r02                   ;  |                                               ; [LAS was transcription error ta r02]
@2703.1475:155017                        slh 15                   ;  |
@2704.1476:042421                        ts r03                   ; -|                                               ; [LAS was transcription error ta r03]

@2705.1477:106434                        cs r14                   ; -|
@2706.1478:112567                        ad r102                  ;  |- Form exponent
@2707.1479:112422                        ad r04                   ;  |
@2710.1480:042422                  r177: ts r04                   ; -|                                               ; 108r->

@2711.1481:132712             next_inst: ao exec_inst             ; increase address                                 ; [LAS was transcription error ao r197]
@2712.1482:100000             exec_inst: ca 0                     ; Pick up next instruction
@2713.1483:076757                        sp halt_if_zero
@2714.1484:042560                        ts r97                   ; -|
@2715.1485:046506           inst_stored: td r56                   ;  |                                               ; Good place for a breakpoint. Int inst in r97.
@2716.1486:046725                        td r189                  ;  |- Store instruction and digits
@2717.1487:112743                        ad sep_param             ;  |
@2720.1488:046727                        td r191                  ; -|
@2721.1489:161033                        srh 27                   ; -|
@2722.1490:155021                        slh 17                   ;  |- Form sp to address for particular instruction
@2723.1491:112512                        ad r60                   ;  |
@2724.1492:042742                  r188: ts dispatch              ; -|
@2725.1493:100000                  r189: ca 0                     ; -|                                               ; (182r)
@2726.1494:042567                        ts r102                  ;  |
@2727.1495:100000                  r191: ca 0                     ;  |                                               ; (181r)

@2730.1496:042752 .if f24                ts float24_low
@2731.1497:161011 .if f24                srh 9
@2732.1498:042753 .if f24                ts float24_tmp
@2733.1499:102752 .if f24                ca float24_low
@2734.1500:176754 .if f24                md float24_low_mant_mask

@2735.1501:161011                        srh 9                    ;  |- Pick up x2, x2' and y2. Store x2 in reg. 198, y2 in reg 102. Hold x2' in AC

@2736.1502:066753 .if f24                ex float24_tmp

@2737.1503:066567                        ex r102                  ;  |
@2740.1504:042744                        ts tmp                   ;  |
@2741.1505:155017                        slh 15                   ; -|

;                  .if do_print           .print "1 dis='%i' inst='%i' tmp=x2=%o r102=y2=%o AC=x2'=0o%ao r02=x1=%o r03=x1'=%o r04=y1=%o t=%fl r189=%o mra=%fm mra-oct=%o %o %o", dispatch, r97, tmp, r102, r02, r03, r04, t, r189, mra, mra + 0, mra + 1, mra + 2
@2742.1506:000000              dispatch: .word 0                  ; Go to part of I.S. for particular instruction    ; (188r)
                                   r197:
@2743.1507:000001             sep_param: .word main_sep_param     ; Separation parameter                             ; [LAS There is a note in Subroutines.pdf pdf-page 25 that says r197 is "pax2"
                                   r198:
@2744.1508:000000                   tmp: .word 0                  ; Temporary storage

@2745.1509:112500                  r199: ad r50                   ;                                                  ; from 70r-->
@2746.1510:072712                        cp exec_inst             ; Does address equal ax?
@2747.1511:074000                  r201: sp 0                     ; Return to register following sp ax               ; (66r)

@2750.1512:102603                  r202: ca r108                  ; -|- Produce overflow alarm                       ; from 90r
@2751.1513:112603                        ad r108                  ; -|

@2752.1514:000000           float24_low: .word 0
@2753.1515:000000           float24_tmp: .word 0
@2754.1516:000777 float24_low_mant_mask: .word 0o000777
@2755.1517:177000  float24_low_exp_mask: .word 0o177000
@2756.1518:000000       float24_ac_save: .word 0

                                         ; [LAS Added this section, which halts the machine if it encounters an
                                         ;  si 0 (i.e., a zero instruction). This came up in L&Z, where the
                                         ;  compiled code, which is then spax-interpreted, does not have a
                                         ;  clean termination. So it runs into the zero at the end and
                                         ;  crashes. Seems to be a hole in the design of L&Z or the float lib
                                         ;  or both, where termination conditions aren't clear. Perhaps some of
                                         ;  the illegible hand-written notes address it.]

@2757.1519:052767          halt_if_zero: ta hiz_rtn
@2760.1520:042770                        ts hiz_ac
@2761.1521:122770                        cm hiz_ac                ; Nice zero-checking idiom from the frac printer. Ah, one's-complement!
@2762.1522:114000                        su 0
@2763.1523:072765                        cp hiz1
@2764.1524:076766                        sp hiz2
@2765.1525:000000                  hiz1: si 0                     ; After all that, we interpret an si 0 as an si 0
@2766.1526:102770                  hiz2: ca hiz_ac
@2767.1527:074000               hiz_rtn: sp 0
@2770.1528:000000                hiz_ac: .word 0


                                         ; end .include "float-lib.ww"

                                         ; LAS include printer for the LZ source code

                                         ; .include "print-prog.ww"

                             print_prog:
@2771.1529:053050                        ta ppg_rtn

                                         ; First section with pr_ label prefix reads all the
                                         ; chars from the pet into pp_buffer.

                                         ; After reading, we assume there is at least one zero
                                         ;  at the end of the chars but within the buffer, so we
                                         ;  can terminate the print and zeroing loops

@2772.1530:001004              pr_enter: si 0o1004                ; PETR A, rewind
@2773.1531:103010                        ca pr_buf
@2774.1532:047005                        td pr_st_char
@2775.1533:014000               pr_loop: rd 0
@2776.1534:043013                        ts pr_char
@2777.1535:117011                        su pr_stop_char
@3000.1536:043012                        ts pr_tmp
@3001.1537:123012                        cm pr_tmp
@3002.1538:114000                        su 0
@3003.1539:073014                        cp pr_done
@3004.1540:103013                        ca pr_char
@3005.1541:040000            pr_st_char: ts 0
@3006.1542:133005                        ao pr_st_char
@3007.1543:076775                        sp pr_loop
@3010.1544:000040                pr_buf: .word comp_code          ; share the "heap space" with the L&Z compiled code
@3011.1545:000061          pr_stop_char: .flexl "<stop>"
@3012.1546:000000                pr_tmp: .word 0
@3013.1547:000000               pr_char: .word 0
                                pr_done:

                                         ; This section with pp label prints the buffer to the flexowriter

@3014.1548:000225              pp_enter: si 149
@3015.1549:103010                        ca pr_buf
@3016.1550:047017                        td pp_rd_char
                                pp_loop:
@3017.1551:100000            pp_rd_char: ca 0
@3020.1552:043031                        ts pp_tmp
@3021.1553:123031                        cm pp_tmp
@3022.1554:114000                        su 0
@3023.1555:073032                        cp pp_done
@3024.1556:103031                        ca pp_tmp
@3025.1557:170012                        clc 10
@3026.1558:024000                        rc 0
@3027.1559:133017                        ao pp_rd_char
@3030.1560:077017                        sp pp_loop
@3031.1561:000000                pp_tmp: .word 0
                                pp_done:

                                         ; Last section with pz label zeroes-out the buffer to return it to its orginal state.

                               pz_enter:
@3032.1562:103010                        ca pr_buf
@3033.1563:047035                        td pz_rd_char
@3034.1564:047043                        td pz_wr_zero
                                pz_loop:
@3035.1565:100000            pz_rd_char: ca 0
@3036.1566:043047                        ts pz_tmp
@3037.1567:123047                        cm pz_tmp
@3040.1568:114000                        su 0
@3041.1569:073050                        cp pz_done
@3042.1570:100000                        ca 0
@3043.1571:040000            pz_wr_zero: ts 0
@3044.1572:133035                        ao pz_rd_char
@3045.1573:133043                        ao pz_wr_zero
@3046.1574:077035                        sp pz_loop
@3047.1575:000000                pz_tmp: .word 0
                                pz_done:
@3050.1576:074000               ppg_rtn: sp 0

                                         ; end .include "print-prog.ww"
